ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Columns.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Columns_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	Columns_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	Columns_SetDriveMode, %function
  25              	Columns_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Columns.c"
   1:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Columns.c **** * File Name: Columns.c  
   3:Generated_Source\PSoC4/Columns.c **** * Version 2.20
   4:Generated_Source\PSoC4/Columns.c **** *
   5:Generated_Source\PSoC4/Columns.c **** * Description:
   6:Generated_Source\PSoC4/Columns.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/Columns.c **** *
   8:Generated_Source\PSoC4/Columns.c **** ********************************************************************************
   9:Generated_Source\PSoC4/Columns.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/Columns.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/Columns.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/Columns.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/Columns.c **** 
  15:Generated_Source\PSoC4/Columns.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/Columns.c **** #include "Columns.h"
  17:Generated_Source\PSoC4/Columns.c **** 
  18:Generated_Source\PSoC4/Columns.c **** 
  19:Generated_Source\PSoC4/Columns.c **** #if defined(Columns__PC)
  20:Generated_Source\PSoC4/Columns.c ****     #define Columns_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/Columns.c ****     do { \
  22:Generated_Source\PSoC4/Columns.c ****         Columns_PC =   (Columns_PC & \
  23:Generated_Source\PSoC4/Columns.c ****                                 (uint32)(~(uint32)(Columns_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/Columns.c ****                                 (Columns_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/Columns.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/Columns.c ****                                 (Columns_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/Columns.c ****     } while (0)
  28:Generated_Source\PSoC4/Columns.c **** #else
  29:Generated_Source\PSoC4/Columns.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/Columns.c ****         #define Columns_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 2


  31:Generated_Source\PSoC4/Columns.c ****         do { \
  32:Generated_Source\PSoC4/Columns.c ****             Columns_USBIO_CTRL_REG = (Columns_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/Columns.c ****                                     (uint32)(~(uint32)(Columns_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/Columns.c ****                                     (Columns_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/Columns.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/Columns.c ****                                     (Columns_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/Columns.c ****         } while (0)
  38:Generated_Source\PSoC4/Columns.c ****     #endif
  39:Generated_Source\PSoC4/Columns.c **** #endif
  40:Generated_Source\PSoC4/Columns.c ****   
  41:Generated_Source\PSoC4/Columns.c **** 
  42:Generated_Source\PSoC4/Columns.c **** #if defined(Columns__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/Columns.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/Columns.c ****     * Function Name: Columns_SetDriveMode
  45:Generated_Source\PSoC4/Columns.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/Columns.c ****     *
  47:Generated_Source\PSoC4/Columns.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/Columns.c ****     * 
  49:Generated_Source\PSoC4/Columns.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/Columns.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/Columns.c ****     *
  52:Generated_Source\PSoC4/Columns.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/Columns.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/Columns.c ****     *
  55:Generated_Source\PSoC4/Columns.c ****     * \param mode
  56:Generated_Source\PSoC4/Columns.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/Columns.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/Columns.c ****     *
  59:Generated_Source\PSoC4/Columns.c ****     * \return
  60:Generated_Source\PSoC4/Columns.c ****     *  None
  61:Generated_Source\PSoC4/Columns.c ****     *
  62:Generated_Source\PSoC4/Columns.c ****     * \sideeffect
  63:Generated_Source\PSoC4/Columns.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/Columns.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/Columns.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/Columns.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/Columns.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/Columns.c ****     *
  69:Generated_Source\PSoC4/Columns.c ****     * \funcusage
  70:Generated_Source\PSoC4/Columns.c ****     *  \snippet Columns_SUT.c usage_Columns_SetDriveMode
  71:Generated_Source\PSoC4/Columns.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/Columns.c ****     void Columns_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/Columns.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 3


  42 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__0__SHIFT, mode);
  43              		.loc 1 74 0
  44 000c 114B     		ldr	r3, .L2
  45 000e 114A     		ldr	r2, .L2
  46 0010 1268     		ldr	r2, [r2]
  47 0012 3821     		movs	r1, #56
  48 0014 8A43     		bics	r2, r1
  49 0016 1100     		movs	r1, r2
  50 0018 FA1D     		adds	r2, r7, #7
  51 001a 1278     		ldrb	r2, [r2]
  52 001c D200     		lsls	r2, r2, #3
  53 001e 0A43     		orrs	r2, r1
  54 0020 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__1__SHIFT, mode);
  55              		.loc 1 75 0
  56 0022 0C4B     		ldr	r3, .L2
  57 0024 0B4A     		ldr	r2, .L2
  58 0026 1268     		ldr	r2, [r2]
  59 0028 0B49     		ldr	r1, .L2+4
  60 002a 1140     		ands	r1, r2
  61 002c FA1D     		adds	r2, r7, #7
  62 002e 1278     		ldrb	r2, [r2]
  63 0030 9201     		lsls	r2, r2, #6
  64 0032 0A43     		orrs	r2, r1
  65 0034 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__2__SHIFT, mode);
  66              		.loc 1 76 0
  67 0036 074B     		ldr	r3, .L2
  68 0038 064A     		ldr	r2, .L2
  69 003a 1268     		ldr	r2, [r2]
  70 003c 0749     		ldr	r1, .L2+8
  71 003e 1140     		ands	r1, r2
  72 0040 FA1D     		adds	r2, r7, #7
  73 0042 1278     		ldrb	r2, [r2]
  74 0044 5202     		lsls	r2, r2, #9
  75 0046 0A43     		orrs	r2, r1
  76 0048 1A60     		str	r2, [r3]
  77:Generated_Source\PSoC4/Columns.c ****     }
  77              		.loc 1 77 0
  78 004a C046     		nop
  79 004c BD46     		mov	sp, r7
  80 004e 02B0     		add	sp, sp, #8
  81              		@ sp needed
  82 0050 80BD     		pop	{r7, pc}
  83              	.L3:
  84 0052 C046     		.align	2
  85              	.L2:
  86 0054 08010440 		.word	1074004232
  87 0058 3FFEFFFF 		.word	-449
  88 005c FFF1FFFF 		.word	-3585
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	Columns_SetDriveMode, .-Columns_SetDriveMode
  92              		.section	.text.Columns_Write,"ax",%progbits
  93              		.align	2
  94              		.global	Columns_Write
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 4


  95              		.code	16
  96              		.thumb_func
  97              		.type	Columns_Write, %function
  98              	Columns_Write:
  99              	.LFB1:
  78:Generated_Source\PSoC4/Columns.c **** #endif
  79:Generated_Source\PSoC4/Columns.c **** 
  80:Generated_Source\PSoC4/Columns.c **** 
  81:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
  82:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_Write
  83:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
  84:Generated_Source\PSoC4/Columns.c **** *
  85:Generated_Source\PSoC4/Columns.c **** * \brief Writes the value to the physical port (data output register), masking
  86:Generated_Source\PSoC4/Columns.c **** *  and shifting the bits appropriately. 
  87:Generated_Source\PSoC4/Columns.c **** *
  88:Generated_Source\PSoC4/Columns.c **** * The data output register controls the signal applied to the physical pin in 
  89:Generated_Source\PSoC4/Columns.c **** * conjunction with the drive mode parameter. This function avoids changing 
  90:Generated_Source\PSoC4/Columns.c **** * other bits in the port by using the appropriate method (read-modify-write or
  91:Generated_Source\PSoC4/Columns.c **** * bit banding).
  92:Generated_Source\PSoC4/Columns.c **** *
  93:Generated_Source\PSoC4/Columns.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  94:Generated_Source\PSoC4/Columns.c **** * as it is driven by the hardware signal attached to it.
  95:Generated_Source\PSoC4/Columns.c **** *
  96:Generated_Source\PSoC4/Columns.c **** * \param value
  97:Generated_Source\PSoC4/Columns.c **** *  Value to write to the component instance.
  98:Generated_Source\PSoC4/Columns.c **** *
  99:Generated_Source\PSoC4/Columns.c **** * \return 
 100:Generated_Source\PSoC4/Columns.c **** *  None 
 101:Generated_Source\PSoC4/Columns.c **** *
 102:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 103:Generated_Source\PSoC4/Columns.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 104:Generated_Source\PSoC4/Columns.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 105:Generated_Source\PSoC4/Columns.c **** *  interrupts this function and performs writes to the Pins component data 
 106:Generated_Source\PSoC4/Columns.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 107:Generated_Source\PSoC4/Columns.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 108:Generated_Source\PSoC4/Columns.c **** *  this function.
 109:Generated_Source\PSoC4/Columns.c **** *
 110:Generated_Source\PSoC4/Columns.c **** * \funcusage
 111:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_Write
 112:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 113:Generated_Source\PSoC4/Columns.c **** void Columns_Write(uint8 value)
 114:Generated_Source\PSoC4/Columns.c **** {
 100              		.loc 1 114 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 16
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 84B0     		sub	sp, sp, #16
 109              		.cfi_def_cfa_offset 24
 110 0004 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 112 0006 0200     		movs	r2, r0
 113 0008 FB1D     		adds	r3, r7, #7
 114 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 5


 115:Generated_Source\PSoC4/Columns.c ****     uint8 drVal = (uint8)(Columns_DR & (uint8)(~Columns_MASK));
 115              		.loc 1 115 0
 116 000c 0F4B     		ldr	r3, .L5
 117 000e 1B68     		ldr	r3, [r3]
 118 0010 DAB2     		uxtb	r2, r3
 119 0012 0F23     		movs	r3, #15
 120 0014 FB18     		adds	r3, r7, r3
 121 0016 0E21     		movs	r1, #14
 122 0018 8A43     		bics	r2, r1
 123 001a 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC4/Columns.c ****     drVal = (drVal | ((uint8)(value << Columns_SHIFT) & Columns_MASK));
 124              		.loc 1 116 0
 125 001c FB1D     		adds	r3, r7, #7
 126 001e 1B78     		ldrb	r3, [r3]
 127 0020 DB18     		adds	r3, r3, r3
 128 0022 DBB2     		uxtb	r3, r3
 129 0024 0E22     		movs	r2, #14
 130 0026 1340     		ands	r3, r2
 131 0028 D9B2     		uxtb	r1, r3
 132 002a 0F23     		movs	r3, #15
 133 002c FB18     		adds	r3, r7, r3
 134 002e 0F22     		movs	r2, #15
 135 0030 BA18     		adds	r2, r7, r2
 136 0032 1278     		ldrb	r2, [r2]
 137 0034 0A43     		orrs	r2, r1
 138 0036 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC4/Columns.c ****     Columns_DR = (uint32)drVal;
 139              		.loc 1 117 0
 140 0038 044B     		ldr	r3, .L5
 141 003a 0F22     		movs	r2, #15
 142 003c BA18     		adds	r2, r7, r2
 143 003e 1278     		ldrb	r2, [r2]
 144 0040 1A60     		str	r2, [r3]
 118:Generated_Source\PSoC4/Columns.c **** }
 145              		.loc 1 118 0
 146 0042 C046     		nop
 147 0044 BD46     		mov	sp, r7
 148 0046 04B0     		add	sp, sp, #16
 149              		@ sp needed
 150 0048 80BD     		pop	{r7, pc}
 151              	.L6:
 152 004a C046     		.align	2
 153              	.L5:
 154 004c 00010440 		.word	1074004224
 155              		.cfi_endproc
 156              	.LFE1:
 157              		.size	Columns_Write, .-Columns_Write
 158              		.section	.text.Columns_Read,"ax",%progbits
 159              		.align	2
 160              		.global	Columns_Read
 161              		.code	16
 162              		.thumb_func
 163              		.type	Columns_Read, %function
 164              	Columns_Read:
 165              	.LFB2:
 119:Generated_Source\PSoC4/Columns.c **** 
 120:Generated_Source\PSoC4/Columns.c **** 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 6


 121:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 122:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_Read
 123:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 124:Generated_Source\PSoC4/Columns.c **** *
 125:Generated_Source\PSoC4/Columns.c **** * \brief Reads the associated physical port (pin status register) and masks 
 126:Generated_Source\PSoC4/Columns.c **** *  the required bits according to the width and bit position of the component
 127:Generated_Source\PSoC4/Columns.c **** *  instance. 
 128:Generated_Source\PSoC4/Columns.c **** *
 129:Generated_Source\PSoC4/Columns.c **** * The pin's status register returns the current logic level present on the 
 130:Generated_Source\PSoC4/Columns.c **** * physical pin.
 131:Generated_Source\PSoC4/Columns.c **** *
 132:Generated_Source\PSoC4/Columns.c **** * \return 
 133:Generated_Source\PSoC4/Columns.c **** *  The current value for the pins in the component as a right justified number.
 134:Generated_Source\PSoC4/Columns.c **** *
 135:Generated_Source\PSoC4/Columns.c **** * \funcusage
 136:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_Read  
 137:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/Columns.c **** uint8 Columns_Read(void)
 139:Generated_Source\PSoC4/Columns.c **** {
 166              		.loc 1 139 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 140:Generated_Source\PSoC4/Columns.c ****     return (uint8)((Columns_PS & Columns_MASK) >> Columns_SHIFT);
 176              		.loc 1 140 0
 177 0004 044B     		ldr	r3, .L9
 178 0006 1B68     		ldr	r3, [r3]
 179 0008 0E22     		movs	r2, #14
 180 000a 1340     		ands	r3, r2
 181 000c 5B08     		lsrs	r3, r3, #1
 182 000e DBB2     		uxtb	r3, r3
 141:Generated_Source\PSoC4/Columns.c **** }
 183              		.loc 1 141 0
 184 0010 1800     		movs	r0, r3
 185 0012 BD46     		mov	sp, r7
 186              		@ sp needed
 187 0014 80BD     		pop	{r7, pc}
 188              	.L10:
 189 0016 C046     		.align	2
 190              	.L9:
 191 0018 04010440 		.word	1074004228
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	Columns_Read, .-Columns_Read
 195              		.section	.text.Columns_ReadDataReg,"ax",%progbits
 196              		.align	2
 197              		.global	Columns_ReadDataReg
 198              		.code	16
 199              		.thumb_func
 200              		.type	Columns_ReadDataReg, %function
 201              	Columns_ReadDataReg:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 7


 202              	.LFB3:
 142:Generated_Source\PSoC4/Columns.c **** 
 143:Generated_Source\PSoC4/Columns.c **** 
 144:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 145:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_ReadDataReg
 146:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 147:Generated_Source\PSoC4/Columns.c **** *
 148:Generated_Source\PSoC4/Columns.c **** * \brief Reads the associated physical port's data output register and masks 
 149:Generated_Source\PSoC4/Columns.c **** *  the correct bits according to the width and bit position of the component 
 150:Generated_Source\PSoC4/Columns.c **** *  instance. 
 151:Generated_Source\PSoC4/Columns.c **** *
 152:Generated_Source\PSoC4/Columns.c **** * The data output register controls the signal applied to the physical pin in 
 153:Generated_Source\PSoC4/Columns.c **** * conjunction with the drive mode parameter. This is not the same as the 
 154:Generated_Source\PSoC4/Columns.c **** * preferred Columns_Read() API because the 
 155:Generated_Source\PSoC4/Columns.c **** * Columns_ReadDataReg() reads the data register instead of the status 
 156:Generated_Source\PSoC4/Columns.c **** * register. For output pins this is a useful function to determine the value 
 157:Generated_Source\PSoC4/Columns.c **** * just written to the pin.
 158:Generated_Source\PSoC4/Columns.c **** *
 159:Generated_Source\PSoC4/Columns.c **** * \return 
 160:Generated_Source\PSoC4/Columns.c **** *  The current value of the data register masked and shifted into a right 
 161:Generated_Source\PSoC4/Columns.c **** *  justified number for the component instance.
 162:Generated_Source\PSoC4/Columns.c **** *
 163:Generated_Source\PSoC4/Columns.c **** * \funcusage
 164:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_ReadDataReg 
 165:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 166:Generated_Source\PSoC4/Columns.c **** uint8 Columns_ReadDataReg(void)
 167:Generated_Source\PSoC4/Columns.c **** {
 203              		.loc 1 167 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 168:Generated_Source\PSoC4/Columns.c ****     return (uint8)((Columns_DR & Columns_MASK) >> Columns_SHIFT);
 213              		.loc 1 168 0
 214 0004 044B     		ldr	r3, .L13
 215 0006 1B68     		ldr	r3, [r3]
 216 0008 0E22     		movs	r2, #14
 217 000a 1340     		ands	r3, r2
 218 000c 5B08     		lsrs	r3, r3, #1
 219 000e DBB2     		uxtb	r3, r3
 169:Generated_Source\PSoC4/Columns.c **** }
 220              		.loc 1 169 0
 221 0010 1800     		movs	r0, r3
 222 0012 BD46     		mov	sp, r7
 223              		@ sp needed
 224 0014 80BD     		pop	{r7, pc}
 225              	.L14:
 226 0016 C046     		.align	2
 227              	.L13:
 228 0018 00010440 		.word	1074004224
 229              		.cfi_endproc
 230              	.LFE3:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 8


 231              		.size	Columns_ReadDataReg, .-Columns_ReadDataReg
 232              		.section	.text.Columns_SetInterruptMode,"ax",%progbits
 233              		.align	2
 234              		.global	Columns_SetInterruptMode
 235              		.code	16
 236              		.thumb_func
 237              		.type	Columns_SetInterruptMode, %function
 238              	Columns_SetInterruptMode:
 239              	.LFB4:
 170:Generated_Source\PSoC4/Columns.c **** 
 171:Generated_Source\PSoC4/Columns.c **** 
 172:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 173:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_SetInterruptMode
 174:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 175:Generated_Source\PSoC4/Columns.c **** *
 176:Generated_Source\PSoC4/Columns.c **** * \brief Configures the interrupt mode for each of the Pins component's
 177:Generated_Source\PSoC4/Columns.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 178:Generated_Source\PSoC4/Columns.c **** *  specified in the Pins component.
 179:Generated_Source\PSoC4/Columns.c **** *
 180:Generated_Source\PSoC4/Columns.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 181:Generated_Source\PSoC4/Columns.c **** *  interrupt may trigger it.
 182:Generated_Source\PSoC4/Columns.c **** *
 183:Generated_Source\PSoC4/Columns.c **** * \param position
 184:Generated_Source\PSoC4/Columns.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 185:Generated_Source\PSoC4/Columns.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 186:Generated_Source\PSoC4/Columns.c **** *  component. Or you may use Columns_INTR_ALL to configure the
 187:Generated_Source\PSoC4/Columns.c **** *  interrupt mode of all the pins in the Pins component.       
 188:Generated_Source\PSoC4/Columns.c **** *  - Columns_0_INTR       (First pin in the list)
 189:Generated_Source\PSoC4/Columns.c **** *  - Columns_1_INTR       (Second pin in the list)
 190:Generated_Source\PSoC4/Columns.c **** *  - ...
 191:Generated_Source\PSoC4/Columns.c **** *  - Columns_INTR_ALL     (All pins in Pins component)
 192:Generated_Source\PSoC4/Columns.c **** *
 193:Generated_Source\PSoC4/Columns.c **** * \param mode
 194:Generated_Source\PSoC4/Columns.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 195:Generated_Source\PSoC4/Columns.c **** *  \ref intrMode.
 196:Generated_Source\PSoC4/Columns.c **** *
 197:Generated_Source\PSoC4/Columns.c **** * \return 
 198:Generated_Source\PSoC4/Columns.c **** *  None
 199:Generated_Source\PSoC4/Columns.c **** *  
 200:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 201:Generated_Source\PSoC4/Columns.c **** *  It is recommended that the interrupt be disabled before calling this 
 202:Generated_Source\PSoC4/Columns.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 203:Generated_Source\PSoC4/Columns.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 204:Generated_Source\PSoC4/Columns.c **** *  port.
 205:Generated_Source\PSoC4/Columns.c **** *
 206:Generated_Source\PSoC4/Columns.c **** * \funcusage
 207:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_SetInterruptMode
 208:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 209:Generated_Source\PSoC4/Columns.c **** void Columns_SetInterruptMode(uint16 position, uint16 mode)
 210:Generated_Source\PSoC4/Columns.c **** {
 240              		.loc 1 210 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 16
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 9


 247              		.cfi_offset 14, -4
 248 0002 84B0     		sub	sp, sp, #16
 249              		.cfi_def_cfa_offset 24
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 0200     		movs	r2, r0
 253 0008 BB1D     		adds	r3, r7, #6
 254 000a 1A80     		strh	r2, [r3]
 255 000c 3B1D     		adds	r3, r7, #4
 256 000e 0A1C     		adds	r2, r1, #0
 257 0010 1A80     		strh	r2, [r3]
 211:Generated_Source\PSoC4/Columns.c ****     uint32 intrCfg;
 212:Generated_Source\PSoC4/Columns.c ****     
 213:Generated_Source\PSoC4/Columns.c ****     intrCfg =  Columns_INTCFG & (uint32)(~(uint32)position);
 258              		.loc 1 213 0
 259 0012 0B4B     		ldr	r3, .L16
 260 0014 1B68     		ldr	r3, [r3]
 261 0016 BA1D     		adds	r2, r7, #6
 262 0018 1288     		ldrh	r2, [r2]
 263 001a D243     		mvns	r2, r2
 264 001c 1340     		ands	r3, r2
 265 001e FB60     		str	r3, [r7, #12]
 214:Generated_Source\PSoC4/Columns.c ****     Columns_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 266              		.loc 1 214 0
 267 0020 074B     		ldr	r3, .L16
 268 0022 BA1D     		adds	r2, r7, #6
 269 0024 391D     		adds	r1, r7, #4
 270 0026 1288     		ldrh	r2, [r2]
 271 0028 0988     		ldrh	r1, [r1]
 272 002a 0A40     		ands	r2, r1
 273 002c 92B2     		uxth	r2, r2
 274 002e 1100     		movs	r1, r2
 275 0030 FA68     		ldr	r2, [r7, #12]
 276 0032 0A43     		orrs	r2, r1
 277 0034 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC4/Columns.c **** }
 278              		.loc 1 215 0
 279 0036 C046     		nop
 280 0038 BD46     		mov	sp, r7
 281 003a 04B0     		add	sp, sp, #16
 282              		@ sp needed
 283 003c 80BD     		pop	{r7, pc}
 284              	.L17:
 285 003e C046     		.align	2
 286              	.L16:
 287 0040 0C010440 		.word	1074004236
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	Columns_SetInterruptMode, .-Columns_SetInterruptMode
 291              		.section	.text.Columns_ClearInterrupt,"ax",%progbits
 292              		.align	2
 293              		.global	Columns_ClearInterrupt
 294              		.code	16
 295              		.thumb_func
 296              		.type	Columns_ClearInterrupt, %function
 297              	Columns_ClearInterrupt:
 298              	.LFB5:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 10


 216:Generated_Source\PSoC4/Columns.c **** 
 217:Generated_Source\PSoC4/Columns.c **** 
 218:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 219:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_ClearInterrupt
 220:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 221:Generated_Source\PSoC4/Columns.c **** *
 222:Generated_Source\PSoC4/Columns.c **** * \brief Clears any active interrupts attached with the component and returns 
 223:Generated_Source\PSoC4/Columns.c **** *  the value of the interrupt status register allowing determination of which
 224:Generated_Source\PSoC4/Columns.c **** *  pins generated an interrupt event.
 225:Generated_Source\PSoC4/Columns.c **** *
 226:Generated_Source\PSoC4/Columns.c **** * \return 
 227:Generated_Source\PSoC4/Columns.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 228:Generated_Source\PSoC4/Columns.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 229:Generated_Source\PSoC4/Columns.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 230:Generated_Source\PSoC4/Columns.c **** *  
 231:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 232:Generated_Source\PSoC4/Columns.c **** *  Clears all bits of the physical port's interrupt status register, not just
 233:Generated_Source\PSoC4/Columns.c **** *  those associated with the Pins component.
 234:Generated_Source\PSoC4/Columns.c **** *
 235:Generated_Source\PSoC4/Columns.c **** * \funcusage
 236:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_ClearInterrupt
 237:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 238:Generated_Source\PSoC4/Columns.c **** uint8 Columns_ClearInterrupt(void)
 239:Generated_Source\PSoC4/Columns.c **** {
 299              		.loc 1 239 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303 0000 80B5     		push	{r7, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC4/Columns.c **** 	uint8 maskedStatus = (uint8)(Columns_INTSTAT & Columns_MASK);
 311              		.loc 1 240 0
 312 0006 094B     		ldr	r3, .L20
 313 0008 1B68     		ldr	r3, [r3]
 314 000a DAB2     		uxtb	r2, r3
 315 000c FB1D     		adds	r3, r7, #7
 316 000e 0E21     		movs	r1, #14
 317 0010 0A40     		ands	r2, r1
 318 0012 1A70     		strb	r2, [r3]
 241:Generated_Source\PSoC4/Columns.c **** 	Columns_INTSTAT = maskedStatus;
 319              		.loc 1 241 0
 320 0014 054B     		ldr	r3, .L20
 321 0016 FA1D     		adds	r2, r7, #7
 322 0018 1278     		ldrb	r2, [r2]
 323 001a 1A60     		str	r2, [r3]
 242:Generated_Source\PSoC4/Columns.c ****     return maskedStatus >> Columns_SHIFT;
 324              		.loc 1 242 0
 325 001c FB1D     		adds	r3, r7, #7
 326 001e 1B78     		ldrb	r3, [r3]
 327 0020 5B08     		lsrs	r3, r3, #1
 328 0022 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 11


 243:Generated_Source\PSoC4/Columns.c **** }
 329              		.loc 1 243 0
 330 0024 1800     		movs	r0, r3
 331 0026 BD46     		mov	sp, r7
 332 0028 02B0     		add	sp, sp, #8
 333              		@ sp needed
 334 002a 80BD     		pop	{r7, pc}
 335              	.L21:
 336              		.align	2
 337              	.L20:
 338 002c 10010440 		.word	1074004240
 339              		.cfi_endproc
 340              	.LFE5:
 341              		.size	Columns_ClearInterrupt, .-Columns_ClearInterrupt
 342              		.text
 343              	.Letext0:
 344              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 345              		.section	.debug_info,"",%progbits
 346              	.Ldebug_info0:
 347 0000 96010000 		.4byte	0x196
 348 0004 0400     		.2byte	0x4
 349 0006 00000000 		.4byte	.Ldebug_abbrev0
 350 000a 04       		.byte	0x4
 351 000b 01       		.uleb128 0x1
 352 000c C0000000 		.4byte	.LASF28
 353 0010 0C       		.byte	0xc
 354 0011 60000000 		.4byte	.LASF29
 355 0015 06000000 		.4byte	.LASF30
 356 0019 00000000 		.4byte	.Ldebug_ranges0+0
 357 001d 00000000 		.4byte	0
 358 0021 00000000 		.4byte	.Ldebug_line0
 359 0025 02       		.uleb128 0x2
 360 0026 01       		.byte	0x1
 361 0027 06       		.byte	0x6
 362 0028 1A020000 		.4byte	.LASF0
 363 002c 02       		.uleb128 0x2
 364 002d 01       		.byte	0x1
 365 002e 08       		.byte	0x8
 366 002f 87000000 		.4byte	.LASF1
 367 0033 02       		.uleb128 0x2
 368 0034 02       		.byte	0x2
 369 0035 05       		.byte	0x5
 370 0036 E8010000 		.4byte	.LASF2
 371 003a 02       		.uleb128 0x2
 372 003b 02       		.byte	0x2
 373 003c 07       		.byte	0x7
 374 003d AD000000 		.4byte	.LASF3
 375 0041 02       		.uleb128 0x2
 376 0042 04       		.byte	0x4
 377 0043 05       		.byte	0x5
 378 0044 F8010000 		.4byte	.LASF4
 379 0048 02       		.uleb128 0x2
 380 0049 04       		.byte	0x4
 381 004a 07       		.byte	0x7
 382 004b 9B000000 		.4byte	.LASF5
 383 004f 02       		.uleb128 0x2
 384 0050 08       		.byte	0x8
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 12


 385 0051 05       		.byte	0x5
 386 0052 C8010000 		.4byte	.LASF6
 387 0056 02       		.uleb128 0x2
 388 0057 08       		.byte	0x8
 389 0058 07       		.byte	0x7
 390 0059 95010000 		.4byte	.LASF7
 391 005d 03       		.uleb128 0x3
 392 005e 04       		.byte	0x4
 393 005f 05       		.byte	0x5
 394 0060 696E7400 		.ascii	"int\000"
 395 0064 02       		.uleb128 0x2
 396 0065 04       		.byte	0x4
 397 0066 07       		.byte	0x7
 398 0067 74010000 		.4byte	.LASF8
 399 006b 04       		.uleb128 0x4
 400 006c F2010000 		.4byte	.LASF9
 401 0070 02       		.byte	0x2
 402 0071 D201     		.2byte	0x1d2
 403 0073 2C000000 		.4byte	0x2c
 404 0077 04       		.uleb128 0x4
 405 0078 55010000 		.4byte	.LASF10
 406 007c 02       		.byte	0x2
 407 007d D301     		.2byte	0x1d3
 408 007f 3A000000 		.4byte	0x3a
 409 0083 04       		.uleb128 0x4
 410 0084 65010000 		.4byte	.LASF11
 411 0088 02       		.byte	0x2
 412 0089 D401     		.2byte	0x1d4
 413 008b 48000000 		.4byte	0x48
 414 008f 02       		.uleb128 0x2
 415 0090 04       		.byte	0x4
 416 0091 04       		.byte	0x4
 417 0092 81000000 		.4byte	.LASF12
 418 0096 02       		.uleb128 0x2
 419 0097 08       		.byte	0x8
 420 0098 04       		.byte	0x4
 421 0099 4E010000 		.4byte	.LASF13
 422 009d 02       		.uleb128 0x2
 423 009e 01       		.byte	0x1
 424 009f 08       		.byte	0x8
 425 00a0 E3010000 		.4byte	.LASF14
 426 00a4 04       		.uleb128 0x4
 427 00a5 00000000 		.4byte	.LASF15
 428 00a9 02       		.byte	0x2
 429 00aa 7E02     		.2byte	0x27e
 430 00ac B0000000 		.4byte	0xb0
 431 00b0 05       		.uleb128 0x5
 432 00b1 83000000 		.4byte	0x83
 433 00b5 06       		.uleb128 0x6
 434 00b6 45000000 		.4byte	.LASF16
 435 00ba 01       		.byte	0x1
 436 00bb 48       		.byte	0x48
 437 00bc 00000000 		.4byte	.LFB0
 438 00c0 60000000 		.4byte	.LFE0-.LFB0
 439 00c4 01       		.uleb128 0x1
 440 00c5 9C       		.byte	0x9c
 441 00c6 D9000000 		.4byte	0xd9
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 13


 442 00ca 07       		.uleb128 0x7
 443 00cb C3010000 		.4byte	.LASF18
 444 00cf 01       		.byte	0x1
 445 00d0 48       		.byte	0x48
 446 00d1 6B000000 		.4byte	0x6b
 447 00d5 02       		.uleb128 0x2
 448 00d6 91       		.byte	0x91
 449 00d7 77       		.sleb128 -9
 450 00d8 00       		.byte	0
 451 00d9 06       		.uleb128 0x6
 452 00da 33020000 		.4byte	.LASF17
 453 00de 01       		.byte	0x1
 454 00df 71       		.byte	0x71
 455 00e0 00000000 		.4byte	.LFB1
 456 00e4 50000000 		.4byte	.LFE1-.LFB1
 457 00e8 01       		.uleb128 0x1
 458 00e9 9C       		.byte	0x9c
 459 00ea 0B010000 		.4byte	0x10b
 460 00ee 07       		.uleb128 0x7
 461 00ef 5A000000 		.4byte	.LASF19
 462 00f3 01       		.byte	0x1
 463 00f4 71       		.byte	0x71
 464 00f5 6B000000 		.4byte	0x6b
 465 00f9 02       		.uleb128 0x2
 466 00fa 91       		.byte	0x91
 467 00fb 6F       		.sleb128 -17
 468 00fc 08       		.uleb128 0x8
 469 00fd 95000000 		.4byte	.LASF24
 470 0101 01       		.byte	0x1
 471 0102 73       		.byte	0x73
 472 0103 6B000000 		.4byte	0x6b
 473 0107 02       		.uleb128 0x2
 474 0108 91       		.byte	0x91
 475 0109 77       		.sleb128 -9
 476 010a 00       		.byte	0
 477 010b 09       		.uleb128 0x9
 478 010c 26020000 		.4byte	.LASF20
 479 0110 01       		.byte	0x1
 480 0111 8A       		.byte	0x8a
 481 0112 6B000000 		.4byte	0x6b
 482 0116 00000000 		.4byte	.LFB2
 483 011a 1C000000 		.4byte	.LFE2-.LFB2
 484 011e 01       		.uleb128 0x1
 485 011f 9C       		.byte	0x9c
 486 0120 09       		.uleb128 0x9
 487 0121 81010000 		.4byte	.LASF21
 488 0125 01       		.byte	0x1
 489 0126 A6       		.byte	0xa6
 490 0127 6B000000 		.4byte	0x6b
 491 012b 00000000 		.4byte	.LFB3
 492 012f 1C000000 		.4byte	.LFE3-.LFB3
 493 0133 01       		.uleb128 0x1
 494 0134 9C       		.byte	0x9c
 495 0135 06       		.uleb128 0x6
 496 0136 01020000 		.4byte	.LASF22
 497 013a 01       		.byte	0x1
 498 013b D1       		.byte	0xd1
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 14


 499 013c 00000000 		.4byte	.LFB4
 500 0140 44000000 		.4byte	.LFE4-.LFB4
 501 0144 01       		.uleb128 0x1
 502 0145 9C       		.byte	0x9c
 503 0146 75010000 		.4byte	0x175
 504 014a 07       		.uleb128 0x7
 505 014b 5C010000 		.4byte	.LASF23
 506 014f 01       		.byte	0x1
 507 0150 D1       		.byte	0xd1
 508 0151 77000000 		.4byte	0x77
 509 0155 02       		.uleb128 0x2
 510 0156 91       		.byte	0x91
 511 0157 6E       		.sleb128 -18
 512 0158 07       		.uleb128 0x7
 513 0159 C3010000 		.4byte	.LASF18
 514 015d 01       		.byte	0x1
 515 015e D1       		.byte	0xd1
 516 015f 77000000 		.4byte	0x77
 517 0163 02       		.uleb128 0x2
 518 0164 91       		.byte	0x91
 519 0165 6C       		.sleb128 -20
 520 0166 08       		.uleb128 0x8
 521 0167 6C010000 		.4byte	.LASF25
 522 016b 01       		.byte	0x1
 523 016c D3       		.byte	0xd3
 524 016d 83000000 		.4byte	0x83
 525 0171 02       		.uleb128 0x2
 526 0172 91       		.byte	0x91
 527 0173 74       		.sleb128 -12
 528 0174 00       		.byte	0
 529 0175 0A       		.uleb128 0xa
 530 0176 AC010000 		.4byte	.LASF26
 531 017a 01       		.byte	0x1
 532 017b EE       		.byte	0xee
 533 017c 6B000000 		.4byte	0x6b
 534 0180 00000000 		.4byte	.LFB5
 535 0184 30000000 		.4byte	.LFE5-.LFB5
 536 0188 01       		.uleb128 0x1
 537 0189 9C       		.byte	0x9c
 538 018a 08       		.uleb128 0x8
 539 018b D6010000 		.4byte	.LASF27
 540 018f 01       		.byte	0x1
 541 0190 F0       		.byte	0xf0
 542 0191 6B000000 		.4byte	0x6b
 543 0195 02       		.uleb128 0x2
 544 0196 91       		.byte	0x91
 545 0197 77       		.sleb128 -9
 546 0198 00       		.byte	0
 547 0199 00       		.byte	0
 548              		.section	.debug_abbrev,"",%progbits
 549              	.Ldebug_abbrev0:
 550 0000 01       		.uleb128 0x1
 551 0001 11       		.uleb128 0x11
 552 0002 01       		.byte	0x1
 553 0003 25       		.uleb128 0x25
 554 0004 0E       		.uleb128 0xe
 555 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 15


 556 0006 0B       		.uleb128 0xb
 557 0007 03       		.uleb128 0x3
 558 0008 0E       		.uleb128 0xe
 559 0009 1B       		.uleb128 0x1b
 560 000a 0E       		.uleb128 0xe
 561 000b 55       		.uleb128 0x55
 562 000c 17       		.uleb128 0x17
 563 000d 11       		.uleb128 0x11
 564 000e 01       		.uleb128 0x1
 565 000f 10       		.uleb128 0x10
 566 0010 17       		.uleb128 0x17
 567 0011 00       		.byte	0
 568 0012 00       		.byte	0
 569 0013 02       		.uleb128 0x2
 570 0014 24       		.uleb128 0x24
 571 0015 00       		.byte	0
 572 0016 0B       		.uleb128 0xb
 573 0017 0B       		.uleb128 0xb
 574 0018 3E       		.uleb128 0x3e
 575 0019 0B       		.uleb128 0xb
 576 001a 03       		.uleb128 0x3
 577 001b 0E       		.uleb128 0xe
 578 001c 00       		.byte	0
 579 001d 00       		.byte	0
 580 001e 03       		.uleb128 0x3
 581 001f 24       		.uleb128 0x24
 582 0020 00       		.byte	0
 583 0021 0B       		.uleb128 0xb
 584 0022 0B       		.uleb128 0xb
 585 0023 3E       		.uleb128 0x3e
 586 0024 0B       		.uleb128 0xb
 587 0025 03       		.uleb128 0x3
 588 0026 08       		.uleb128 0x8
 589 0027 00       		.byte	0
 590 0028 00       		.byte	0
 591 0029 04       		.uleb128 0x4
 592 002a 16       		.uleb128 0x16
 593 002b 00       		.byte	0
 594 002c 03       		.uleb128 0x3
 595 002d 0E       		.uleb128 0xe
 596 002e 3A       		.uleb128 0x3a
 597 002f 0B       		.uleb128 0xb
 598 0030 3B       		.uleb128 0x3b
 599 0031 05       		.uleb128 0x5
 600 0032 49       		.uleb128 0x49
 601 0033 13       		.uleb128 0x13
 602 0034 00       		.byte	0
 603 0035 00       		.byte	0
 604 0036 05       		.uleb128 0x5
 605 0037 35       		.uleb128 0x35
 606 0038 00       		.byte	0
 607 0039 49       		.uleb128 0x49
 608 003a 13       		.uleb128 0x13
 609 003b 00       		.byte	0
 610 003c 00       		.byte	0
 611 003d 06       		.uleb128 0x6
 612 003e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 16


 613 003f 01       		.byte	0x1
 614 0040 3F       		.uleb128 0x3f
 615 0041 19       		.uleb128 0x19
 616 0042 03       		.uleb128 0x3
 617 0043 0E       		.uleb128 0xe
 618 0044 3A       		.uleb128 0x3a
 619 0045 0B       		.uleb128 0xb
 620 0046 3B       		.uleb128 0x3b
 621 0047 0B       		.uleb128 0xb
 622 0048 27       		.uleb128 0x27
 623 0049 19       		.uleb128 0x19
 624 004a 11       		.uleb128 0x11
 625 004b 01       		.uleb128 0x1
 626 004c 12       		.uleb128 0x12
 627 004d 06       		.uleb128 0x6
 628 004e 40       		.uleb128 0x40
 629 004f 18       		.uleb128 0x18
 630 0050 9742     		.uleb128 0x2117
 631 0052 19       		.uleb128 0x19
 632 0053 01       		.uleb128 0x1
 633 0054 13       		.uleb128 0x13
 634 0055 00       		.byte	0
 635 0056 00       		.byte	0
 636 0057 07       		.uleb128 0x7
 637 0058 05       		.uleb128 0x5
 638 0059 00       		.byte	0
 639 005a 03       		.uleb128 0x3
 640 005b 0E       		.uleb128 0xe
 641 005c 3A       		.uleb128 0x3a
 642 005d 0B       		.uleb128 0xb
 643 005e 3B       		.uleb128 0x3b
 644 005f 0B       		.uleb128 0xb
 645 0060 49       		.uleb128 0x49
 646 0061 13       		.uleb128 0x13
 647 0062 02       		.uleb128 0x2
 648 0063 18       		.uleb128 0x18
 649 0064 00       		.byte	0
 650 0065 00       		.byte	0
 651 0066 08       		.uleb128 0x8
 652 0067 34       		.uleb128 0x34
 653 0068 00       		.byte	0
 654 0069 03       		.uleb128 0x3
 655 006a 0E       		.uleb128 0xe
 656 006b 3A       		.uleb128 0x3a
 657 006c 0B       		.uleb128 0xb
 658 006d 3B       		.uleb128 0x3b
 659 006e 0B       		.uleb128 0xb
 660 006f 49       		.uleb128 0x49
 661 0070 13       		.uleb128 0x13
 662 0071 02       		.uleb128 0x2
 663 0072 18       		.uleb128 0x18
 664 0073 00       		.byte	0
 665 0074 00       		.byte	0
 666 0075 09       		.uleb128 0x9
 667 0076 2E       		.uleb128 0x2e
 668 0077 00       		.byte	0
 669 0078 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 17


 670 0079 19       		.uleb128 0x19
 671 007a 03       		.uleb128 0x3
 672 007b 0E       		.uleb128 0xe
 673 007c 3A       		.uleb128 0x3a
 674 007d 0B       		.uleb128 0xb
 675 007e 3B       		.uleb128 0x3b
 676 007f 0B       		.uleb128 0xb
 677 0080 27       		.uleb128 0x27
 678 0081 19       		.uleb128 0x19
 679 0082 49       		.uleb128 0x49
 680 0083 13       		.uleb128 0x13
 681 0084 11       		.uleb128 0x11
 682 0085 01       		.uleb128 0x1
 683 0086 12       		.uleb128 0x12
 684 0087 06       		.uleb128 0x6
 685 0088 40       		.uleb128 0x40
 686 0089 18       		.uleb128 0x18
 687 008a 9742     		.uleb128 0x2117
 688 008c 19       		.uleb128 0x19
 689 008d 00       		.byte	0
 690 008e 00       		.byte	0
 691 008f 0A       		.uleb128 0xa
 692 0090 2E       		.uleb128 0x2e
 693 0091 01       		.byte	0x1
 694 0092 3F       		.uleb128 0x3f
 695 0093 19       		.uleb128 0x19
 696 0094 03       		.uleb128 0x3
 697 0095 0E       		.uleb128 0xe
 698 0096 3A       		.uleb128 0x3a
 699 0097 0B       		.uleb128 0xb
 700 0098 3B       		.uleb128 0x3b
 701 0099 0B       		.uleb128 0xb
 702 009a 27       		.uleb128 0x27
 703 009b 19       		.uleb128 0x19
 704 009c 49       		.uleb128 0x49
 705 009d 13       		.uleb128 0x13
 706 009e 11       		.uleb128 0x11
 707 009f 01       		.uleb128 0x1
 708 00a0 12       		.uleb128 0x12
 709 00a1 06       		.uleb128 0x6
 710 00a2 40       		.uleb128 0x40
 711 00a3 18       		.uleb128 0x18
 712 00a4 9742     		.uleb128 0x2117
 713 00a6 19       		.uleb128 0x19
 714 00a7 00       		.byte	0
 715 00a8 00       		.byte	0
 716 00a9 00       		.byte	0
 717              		.section	.debug_aranges,"",%progbits
 718 0000 44000000 		.4byte	0x44
 719 0004 0200     		.2byte	0x2
 720 0006 00000000 		.4byte	.Ldebug_info0
 721 000a 04       		.byte	0x4
 722 000b 00       		.byte	0
 723 000c 0000     		.2byte	0
 724 000e 0000     		.2byte	0
 725 0010 00000000 		.4byte	.LFB0
 726 0014 60000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 18


 727 0018 00000000 		.4byte	.LFB1
 728 001c 50000000 		.4byte	.LFE1-.LFB1
 729 0020 00000000 		.4byte	.LFB2
 730 0024 1C000000 		.4byte	.LFE2-.LFB2
 731 0028 00000000 		.4byte	.LFB3
 732 002c 1C000000 		.4byte	.LFE3-.LFB3
 733 0030 00000000 		.4byte	.LFB4
 734 0034 44000000 		.4byte	.LFE4-.LFB4
 735 0038 00000000 		.4byte	.LFB5
 736 003c 30000000 		.4byte	.LFE5-.LFB5
 737 0040 00000000 		.4byte	0
 738 0044 00000000 		.4byte	0
 739              		.section	.debug_ranges,"",%progbits
 740              	.Ldebug_ranges0:
 741 0000 00000000 		.4byte	.LFB0
 742 0004 60000000 		.4byte	.LFE0
 743 0008 00000000 		.4byte	.LFB1
 744 000c 50000000 		.4byte	.LFE1
 745 0010 00000000 		.4byte	.LFB2
 746 0014 1C000000 		.4byte	.LFE2
 747 0018 00000000 		.4byte	.LFB3
 748 001c 1C000000 		.4byte	.LFE3
 749 0020 00000000 		.4byte	.LFB4
 750 0024 44000000 		.4byte	.LFE4
 751 0028 00000000 		.4byte	.LFB5
 752 002c 30000000 		.4byte	.LFE5
 753 0030 00000000 		.4byte	0
 754 0034 00000000 		.4byte	0
 755              		.section	.debug_line,"",%progbits
 756              	.Ldebug_line0:
 757 0000 BD000000 		.section	.debug_str,"MS",%progbits,1
 757      02004400 
 757      00000201 
 757      FB0E0D00 
 757      01010101 
 758              	.LASF15:
 759 0000 72656733 		.ascii	"reg32\000"
 759      3200
 760              	.LASF30:
 761 0006 443A5C44 		.ascii	"D:\\Documents\\GitHub\\XID_483\\Workspace\\BLE_HID_"
 761      6F63756D 
 761      656E7473 
 761      5C476974 
 761      4875625C 
 762 0034 4B657962 		.ascii	"Keyboard01.cydsn\000"
 762      6F617264 
 762      30312E63 
 762      7964736E 
 762      00
 763              	.LASF16:
 764 0045 436F6C75 		.ascii	"Columns_SetDriveMode\000"
 764      6D6E735F 
 764      53657444 
 764      72697665 
 764      4D6F6465 
 765              	.LASF19:
 766 005a 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 19


 766      6500
 767              	.LASF29:
 768 0060 47656E65 		.ascii	"Generated_Source\\PSoC4\\Columns.c\000"
 768      72617465 
 768      645F536F 
 768      75726365 
 768      5C50536F 
 769              	.LASF12:
 770 0081 666C6F61 		.ascii	"float\000"
 770      7400
 771              	.LASF1:
 772 0087 756E7369 		.ascii	"unsigned char\000"
 772      676E6564 
 772      20636861 
 772      7200
 773              	.LASF24:
 774 0095 64725661 		.ascii	"drVal\000"
 774      6C00
 775              	.LASF5:
 776 009b 6C6F6E67 		.ascii	"long unsigned int\000"
 776      20756E73 
 776      69676E65 
 776      6420696E 
 776      7400
 777              	.LASF3:
 778 00ad 73686F72 		.ascii	"short unsigned int\000"
 778      7420756E 
 778      7369676E 
 778      65642069 
 778      6E7400
 779              	.LASF28:
 780 00c0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 780      43313120 
 780      352E342E 
 780      31203230 
 780      31363036 
 781 00f3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 781      20726576 
 781      6973696F 
 781      6E203233 
 781      37373135 
 782 0126 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 782      66756E63 
 782      74696F6E 
 782      2D736563 
 782      74696F6E 
 783              	.LASF13:
 784 014e 646F7562 		.ascii	"double\000"
 784      6C6500
 785              	.LASF10:
 786 0155 75696E74 		.ascii	"uint16\000"
 786      313600
 787              	.LASF23:
 788 015c 706F7369 		.ascii	"position\000"
 788      74696F6E 
 788      00
 789              	.LASF11:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 20


 790 0165 75696E74 		.ascii	"uint32\000"
 790      333200
 791              	.LASF25:
 792 016c 696E7472 		.ascii	"intrCfg\000"
 792      43666700 
 793              	.LASF8:
 794 0174 756E7369 		.ascii	"unsigned int\000"
 794      676E6564 
 794      20696E74 
 794      00
 795              	.LASF21:
 796 0181 436F6C75 		.ascii	"Columns_ReadDataReg\000"
 796      6D6E735F 
 796      52656164 
 796      44617461 
 796      52656700 
 797              	.LASF7:
 798 0195 6C6F6E67 		.ascii	"long long unsigned int\000"
 798      206C6F6E 
 798      6720756E 
 798      7369676E 
 798      65642069 
 799              	.LASF26:
 800 01ac 436F6C75 		.ascii	"Columns_ClearInterrupt\000"
 800      6D6E735F 
 800      436C6561 
 800      72496E74 
 800      65727275 
 801              	.LASF18:
 802 01c3 6D6F6465 		.ascii	"mode\000"
 802      00
 803              	.LASF6:
 804 01c8 6C6F6E67 		.ascii	"long long int\000"
 804      206C6F6E 
 804      6720696E 
 804      7400
 805              	.LASF27:
 806 01d6 6D61736B 		.ascii	"maskedStatus\000"
 806      65645374 
 806      61747573 
 806      00
 807              	.LASF14:
 808 01e3 63686172 		.ascii	"char\000"
 808      00
 809              	.LASF2:
 810 01e8 73686F72 		.ascii	"short int\000"
 810      7420696E 
 810      7400
 811              	.LASF9:
 812 01f2 75696E74 		.ascii	"uint8\000"
 812      3800
 813              	.LASF4:
 814 01f8 6C6F6E67 		.ascii	"long int\000"
 814      20696E74 
 814      00
 815              	.LASF22:
 816 0201 436F6C75 		.ascii	"Columns_SetInterruptMode\000"
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccbkyXFu.s 			page 21


 816      6D6E735F 
 816      53657449 
 816      6E746572 
 816      72757074 
 817              	.LASF0:
 818 021a 7369676E 		.ascii	"signed char\000"
 818      65642063 
 818      68617200 
 819              	.LASF20:
 820 0226 436F6C75 		.ascii	"Columns_Read\000"
 820      6D6E735F 
 820      52656164 
 820      00
 821              	.LASF17:
 822 0233 436F6C75 		.ascii	"Columns_Write\000"
 822      6D6E735F 
 822      57726974 
 822      6500
 823              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
