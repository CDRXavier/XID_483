ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Columns.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Columns_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	Columns_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	Columns_SetDriveMode, %function
  25              	Columns_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Columns.c"
   1:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Columns.c **** * File Name: Columns.c  
   3:Generated_Source\PSoC4/Columns.c **** * Version 2.20
   4:Generated_Source\PSoC4/Columns.c **** *
   5:Generated_Source\PSoC4/Columns.c **** * Description:
   6:Generated_Source\PSoC4/Columns.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/Columns.c **** *
   8:Generated_Source\PSoC4/Columns.c **** ********************************************************************************
   9:Generated_Source\PSoC4/Columns.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/Columns.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/Columns.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/Columns.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/Columns.c **** 
  15:Generated_Source\PSoC4/Columns.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/Columns.c **** #include "Columns.h"
  17:Generated_Source\PSoC4/Columns.c **** 
  18:Generated_Source\PSoC4/Columns.c **** 
  19:Generated_Source\PSoC4/Columns.c **** #if defined(Columns__PC)
  20:Generated_Source\PSoC4/Columns.c ****     #define Columns_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/Columns.c ****     do { \
  22:Generated_Source\PSoC4/Columns.c ****         Columns_PC =   (Columns_PC & \
  23:Generated_Source\PSoC4/Columns.c ****                                 (uint32)(~(uint32)(Columns_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/Columns.c ****                                 (Columns_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/Columns.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/Columns.c ****                                 (Columns_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/Columns.c ****     } while (0)
  28:Generated_Source\PSoC4/Columns.c **** #else
  29:Generated_Source\PSoC4/Columns.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/Columns.c ****         #define Columns_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 2


  31:Generated_Source\PSoC4/Columns.c ****         do { \
  32:Generated_Source\PSoC4/Columns.c ****             Columns_USBIO_CTRL_REG = (Columns_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/Columns.c ****                                     (uint32)(~(uint32)(Columns_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/Columns.c ****                                     (Columns_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/Columns.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/Columns.c ****                                     (Columns_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/Columns.c ****         } while (0)
  38:Generated_Source\PSoC4/Columns.c ****     #endif
  39:Generated_Source\PSoC4/Columns.c **** #endif
  40:Generated_Source\PSoC4/Columns.c ****   
  41:Generated_Source\PSoC4/Columns.c **** 
  42:Generated_Source\PSoC4/Columns.c **** #if defined(Columns__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/Columns.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/Columns.c ****     * Function Name: Columns_SetDriveMode
  45:Generated_Source\PSoC4/Columns.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/Columns.c ****     *
  47:Generated_Source\PSoC4/Columns.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/Columns.c ****     * 
  49:Generated_Source\PSoC4/Columns.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/Columns.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/Columns.c ****     *
  52:Generated_Source\PSoC4/Columns.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/Columns.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/Columns.c ****     *
  55:Generated_Source\PSoC4/Columns.c ****     * \param mode
  56:Generated_Source\PSoC4/Columns.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/Columns.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/Columns.c ****     *
  59:Generated_Source\PSoC4/Columns.c ****     * \return
  60:Generated_Source\PSoC4/Columns.c ****     *  None
  61:Generated_Source\PSoC4/Columns.c ****     *
  62:Generated_Source\PSoC4/Columns.c ****     * \sideeffect
  63:Generated_Source\PSoC4/Columns.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/Columns.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/Columns.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/Columns.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/Columns.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/Columns.c ****     *
  69:Generated_Source\PSoC4/Columns.c ****     * \funcusage
  70:Generated_Source\PSoC4/Columns.c ****     *  \snippet Columns_SUT.c usage_Columns_SetDriveMode
  71:Generated_Source\PSoC4/Columns.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/Columns.c ****     void Columns_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/Columns.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 3


  42 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__0__SHIFT, mode);
  43              		.loc 1 74 0
  44 000c 114B     		ldr	r3, .L2
  45 000e 114A     		ldr	r2, .L2
  46 0010 1268     		ldr	r2, [r2]
  47 0012 0721     		movs	r1, #7
  48 0014 8A43     		bics	r2, r1
  49 0016 1100     		movs	r1, r2
  50 0018 FA1D     		adds	r2, r7, #7
  51 001a 1278     		ldrb	r2, [r2]
  52 001c 0A43     		orrs	r2, r1
  53 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__1__SHIFT, mode);
  54              		.loc 1 75 0
  55 0020 0C4B     		ldr	r3, .L2
  56 0022 0C4A     		ldr	r2, .L2
  57 0024 1268     		ldr	r2, [r2]
  58 0026 3821     		movs	r1, #56
  59 0028 8A43     		bics	r2, r1
  60 002a 1100     		movs	r1, r2
  61 002c FA1D     		adds	r2, r7, #7
  62 002e 1278     		ldrb	r2, [r2]
  63 0030 D200     		lsls	r2, r2, #3
  64 0032 0A43     		orrs	r2, r1
  65 0034 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC4/Columns.c **** 		Columns_SetP4PinDriveMode(Columns__2__SHIFT, mode);
  66              		.loc 1 76 0
  67 0036 074B     		ldr	r3, .L2
  68 0038 064A     		ldr	r2, .L2
  69 003a 1268     		ldr	r2, [r2]
  70 003c 0649     		ldr	r1, .L2+4
  71 003e 1140     		ands	r1, r2
  72 0040 FA1D     		adds	r2, r7, #7
  73 0042 1278     		ldrb	r2, [r2]
  74 0044 9201     		lsls	r2, r2, #6
  75 0046 0A43     		orrs	r2, r1
  76 0048 1A60     		str	r2, [r3]
  77:Generated_Source\PSoC4/Columns.c ****     }
  77              		.loc 1 77 0
  78 004a C046     		nop
  79 004c BD46     		mov	sp, r7
  80 004e 02B0     		add	sp, sp, #8
  81              		@ sp needed
  82 0050 80BD     		pop	{r7, pc}
  83              	.L3:
  84 0052 C046     		.align	2
  85              	.L2:
  86 0054 08020440 		.word	1074004488
  87 0058 3FFEFFFF 		.word	-449
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	Columns_SetDriveMode, .-Columns_SetDriveMode
  91              		.section	.text.Columns_Write,"ax",%progbits
  92              		.align	2
  93              		.global	Columns_Write
  94              		.code	16
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 4


  95              		.thumb_func
  96              		.type	Columns_Write, %function
  97              	Columns_Write:
  98              	.LFB1:
  78:Generated_Source\PSoC4/Columns.c **** #endif
  79:Generated_Source\PSoC4/Columns.c **** 
  80:Generated_Source\PSoC4/Columns.c **** 
  81:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
  82:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_Write
  83:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
  84:Generated_Source\PSoC4/Columns.c **** *
  85:Generated_Source\PSoC4/Columns.c **** * \brief Writes the value to the physical port (data output register), masking
  86:Generated_Source\PSoC4/Columns.c **** *  and shifting the bits appropriately. 
  87:Generated_Source\PSoC4/Columns.c **** *
  88:Generated_Source\PSoC4/Columns.c **** * The data output register controls the signal applied to the physical pin in 
  89:Generated_Source\PSoC4/Columns.c **** * conjunction with the drive mode parameter. This function avoids changing 
  90:Generated_Source\PSoC4/Columns.c **** * other bits in the port by using the appropriate method (read-modify-write or
  91:Generated_Source\PSoC4/Columns.c **** * bit banding).
  92:Generated_Source\PSoC4/Columns.c **** *
  93:Generated_Source\PSoC4/Columns.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  94:Generated_Source\PSoC4/Columns.c **** * as it is driven by the hardware signal attached to it.
  95:Generated_Source\PSoC4/Columns.c **** *
  96:Generated_Source\PSoC4/Columns.c **** * \param value
  97:Generated_Source\PSoC4/Columns.c **** *  Value to write to the component instance.
  98:Generated_Source\PSoC4/Columns.c **** *
  99:Generated_Source\PSoC4/Columns.c **** * \return 
 100:Generated_Source\PSoC4/Columns.c **** *  None 
 101:Generated_Source\PSoC4/Columns.c **** *
 102:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 103:Generated_Source\PSoC4/Columns.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 104:Generated_Source\PSoC4/Columns.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 105:Generated_Source\PSoC4/Columns.c **** *  interrupts this function and performs writes to the Pins component data 
 106:Generated_Source\PSoC4/Columns.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 107:Generated_Source\PSoC4/Columns.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 108:Generated_Source\PSoC4/Columns.c **** *  this function.
 109:Generated_Source\PSoC4/Columns.c **** *
 110:Generated_Source\PSoC4/Columns.c **** * \funcusage
 111:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_Write
 112:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 113:Generated_Source\PSoC4/Columns.c **** void Columns_Write(uint8 value)
 114:Generated_Source\PSoC4/Columns.c **** {
  99              		.loc 1 114 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 16
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 84B0     		sub	sp, sp, #16
 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 111 0006 0200     		movs	r2, r0
 112 0008 FB1D     		adds	r3, r7, #7
 113 000a 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/Columns.c ****     uint8 drVal = (uint8)(Columns_DR & (uint8)(~Columns_MASK));
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 5


 114              		.loc 1 115 0
 115 000c 0E4B     		ldr	r3, .L5
 116 000e 1B68     		ldr	r3, [r3]
 117 0010 DAB2     		uxtb	r2, r3
 118 0012 0F23     		movs	r3, #15
 119 0014 FB18     		adds	r3, r7, r3
 120 0016 0721     		movs	r1, #7
 121 0018 8A43     		bics	r2, r1
 122 001a 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC4/Columns.c ****     drVal = (drVal | ((uint8)(value << Columns_SHIFT) & Columns_MASK));
 123              		.loc 1 116 0
 124 001c FB1D     		adds	r3, r7, #7
 125 001e 1B78     		ldrb	r3, [r3]
 126 0020 0722     		movs	r2, #7
 127 0022 1340     		ands	r3, r2
 128 0024 D9B2     		uxtb	r1, r3
 129 0026 0F23     		movs	r3, #15
 130 0028 FB18     		adds	r3, r7, r3
 131 002a 0F22     		movs	r2, #15
 132 002c BA18     		adds	r2, r7, r2
 133 002e 1278     		ldrb	r2, [r2]
 134 0030 0A43     		orrs	r2, r1
 135 0032 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC4/Columns.c ****     Columns_DR = (uint32)drVal;
 136              		.loc 1 117 0
 137 0034 044B     		ldr	r3, .L5
 138 0036 0F22     		movs	r2, #15
 139 0038 BA18     		adds	r2, r7, r2
 140 003a 1278     		ldrb	r2, [r2]
 141 003c 1A60     		str	r2, [r3]
 118:Generated_Source\PSoC4/Columns.c **** }
 142              		.loc 1 118 0
 143 003e C046     		nop
 144 0040 BD46     		mov	sp, r7
 145 0042 04B0     		add	sp, sp, #16
 146              		@ sp needed
 147 0044 80BD     		pop	{r7, pc}
 148              	.L6:
 149 0046 C046     		.align	2
 150              	.L5:
 151 0048 00020440 		.word	1074004480
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	Columns_Write, .-Columns_Write
 155              		.section	.text.Columns_Read,"ax",%progbits
 156              		.align	2
 157              		.global	Columns_Read
 158              		.code	16
 159              		.thumb_func
 160              		.type	Columns_Read, %function
 161              	Columns_Read:
 162              	.LFB2:
 119:Generated_Source\PSoC4/Columns.c **** 
 120:Generated_Source\PSoC4/Columns.c **** 
 121:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 122:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_Read
 123:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 6


 124:Generated_Source\PSoC4/Columns.c **** *
 125:Generated_Source\PSoC4/Columns.c **** * \brief Reads the associated physical port (pin status register) and masks 
 126:Generated_Source\PSoC4/Columns.c **** *  the required bits according to the width and bit position of the component
 127:Generated_Source\PSoC4/Columns.c **** *  instance. 
 128:Generated_Source\PSoC4/Columns.c **** *
 129:Generated_Source\PSoC4/Columns.c **** * The pin's status register returns the current logic level present on the 
 130:Generated_Source\PSoC4/Columns.c **** * physical pin.
 131:Generated_Source\PSoC4/Columns.c **** *
 132:Generated_Source\PSoC4/Columns.c **** * \return 
 133:Generated_Source\PSoC4/Columns.c **** *  The current value for the pins in the component as a right justified number.
 134:Generated_Source\PSoC4/Columns.c **** *
 135:Generated_Source\PSoC4/Columns.c **** * \funcusage
 136:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_Read  
 137:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/Columns.c **** uint8 Columns_Read(void)
 139:Generated_Source\PSoC4/Columns.c **** {
 163              		.loc 1 139 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 140:Generated_Source\PSoC4/Columns.c ****     return (uint8)((Columns_PS & Columns_MASK) >> Columns_SHIFT);
 173              		.loc 1 140 0
 174 0004 044B     		ldr	r3, .L9
 175 0006 1B68     		ldr	r3, [r3]
 176 0008 DBB2     		uxtb	r3, r3
 177 000a 0722     		movs	r2, #7
 178 000c 1340     		ands	r3, r2
 179 000e DBB2     		uxtb	r3, r3
 141:Generated_Source\PSoC4/Columns.c **** }
 180              		.loc 1 141 0
 181 0010 1800     		movs	r0, r3
 182 0012 BD46     		mov	sp, r7
 183              		@ sp needed
 184 0014 80BD     		pop	{r7, pc}
 185              	.L10:
 186 0016 C046     		.align	2
 187              	.L9:
 188 0018 04020440 		.word	1074004484
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	Columns_Read, .-Columns_Read
 192              		.section	.text.Columns_ReadDataReg,"ax",%progbits
 193              		.align	2
 194              		.global	Columns_ReadDataReg
 195              		.code	16
 196              		.thumb_func
 197              		.type	Columns_ReadDataReg, %function
 198              	Columns_ReadDataReg:
 199              	.LFB3:
 142:Generated_Source\PSoC4/Columns.c **** 
 143:Generated_Source\PSoC4/Columns.c **** 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 7


 144:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 145:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_ReadDataReg
 146:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 147:Generated_Source\PSoC4/Columns.c **** *
 148:Generated_Source\PSoC4/Columns.c **** * \brief Reads the associated physical port's data output register and masks 
 149:Generated_Source\PSoC4/Columns.c **** *  the correct bits according to the width and bit position of the component 
 150:Generated_Source\PSoC4/Columns.c **** *  instance. 
 151:Generated_Source\PSoC4/Columns.c **** *
 152:Generated_Source\PSoC4/Columns.c **** * The data output register controls the signal applied to the physical pin in 
 153:Generated_Source\PSoC4/Columns.c **** * conjunction with the drive mode parameter. This is not the same as the 
 154:Generated_Source\PSoC4/Columns.c **** * preferred Columns_Read() API because the 
 155:Generated_Source\PSoC4/Columns.c **** * Columns_ReadDataReg() reads the data register instead of the status 
 156:Generated_Source\PSoC4/Columns.c **** * register. For output pins this is a useful function to determine the value 
 157:Generated_Source\PSoC4/Columns.c **** * just written to the pin.
 158:Generated_Source\PSoC4/Columns.c **** *
 159:Generated_Source\PSoC4/Columns.c **** * \return 
 160:Generated_Source\PSoC4/Columns.c **** *  The current value of the data register masked and shifted into a right 
 161:Generated_Source\PSoC4/Columns.c **** *  justified number for the component instance.
 162:Generated_Source\PSoC4/Columns.c **** *
 163:Generated_Source\PSoC4/Columns.c **** * \funcusage
 164:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_ReadDataReg 
 165:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 166:Generated_Source\PSoC4/Columns.c **** uint8 Columns_ReadDataReg(void)
 167:Generated_Source\PSoC4/Columns.c **** {
 200              		.loc 1 167 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 168:Generated_Source\PSoC4/Columns.c ****     return (uint8)((Columns_DR & Columns_MASK) >> Columns_SHIFT);
 210              		.loc 1 168 0
 211 0004 044B     		ldr	r3, .L13
 212 0006 1B68     		ldr	r3, [r3]
 213 0008 DBB2     		uxtb	r3, r3
 214 000a 0722     		movs	r2, #7
 215 000c 1340     		ands	r3, r2
 216 000e DBB2     		uxtb	r3, r3
 169:Generated_Source\PSoC4/Columns.c **** }
 217              		.loc 1 169 0
 218 0010 1800     		movs	r0, r3
 219 0012 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0014 80BD     		pop	{r7, pc}
 222              	.L14:
 223 0016 C046     		.align	2
 224              	.L13:
 225 0018 00020440 		.word	1074004480
 226              		.cfi_endproc
 227              	.LFE3:
 228              		.size	Columns_ReadDataReg, .-Columns_ReadDataReg
 229              		.section	.text.Columns_SetInterruptMode,"ax",%progbits
 230              		.align	2
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 8


 231              		.global	Columns_SetInterruptMode
 232              		.code	16
 233              		.thumb_func
 234              		.type	Columns_SetInterruptMode, %function
 235              	Columns_SetInterruptMode:
 236              	.LFB4:
 170:Generated_Source\PSoC4/Columns.c **** 
 171:Generated_Source\PSoC4/Columns.c **** 
 172:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
 173:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_SetInterruptMode
 174:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 175:Generated_Source\PSoC4/Columns.c **** *
 176:Generated_Source\PSoC4/Columns.c **** * \brief Configures the interrupt mode for each of the Pins component's
 177:Generated_Source\PSoC4/Columns.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 178:Generated_Source\PSoC4/Columns.c **** *  specified in the Pins component.
 179:Generated_Source\PSoC4/Columns.c **** *
 180:Generated_Source\PSoC4/Columns.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 181:Generated_Source\PSoC4/Columns.c **** *  interrupt may trigger it.
 182:Generated_Source\PSoC4/Columns.c **** *
 183:Generated_Source\PSoC4/Columns.c **** * \param position
 184:Generated_Source\PSoC4/Columns.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 185:Generated_Source\PSoC4/Columns.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 186:Generated_Source\PSoC4/Columns.c **** *  component. Or you may use Columns_INTR_ALL to configure the
 187:Generated_Source\PSoC4/Columns.c **** *  interrupt mode of all the pins in the Pins component.       
 188:Generated_Source\PSoC4/Columns.c **** *  - Columns_0_INTR       (First pin in the list)
 189:Generated_Source\PSoC4/Columns.c **** *  - Columns_1_INTR       (Second pin in the list)
 190:Generated_Source\PSoC4/Columns.c **** *  - ...
 191:Generated_Source\PSoC4/Columns.c **** *  - Columns_INTR_ALL     (All pins in Pins component)
 192:Generated_Source\PSoC4/Columns.c **** *
 193:Generated_Source\PSoC4/Columns.c **** * \param mode
 194:Generated_Source\PSoC4/Columns.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 195:Generated_Source\PSoC4/Columns.c **** *  \ref intrMode.
 196:Generated_Source\PSoC4/Columns.c **** *
 197:Generated_Source\PSoC4/Columns.c **** * \return 
 198:Generated_Source\PSoC4/Columns.c **** *  None
 199:Generated_Source\PSoC4/Columns.c **** *  
 200:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 201:Generated_Source\PSoC4/Columns.c **** *  It is recommended that the interrupt be disabled before calling this 
 202:Generated_Source\PSoC4/Columns.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 203:Generated_Source\PSoC4/Columns.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 204:Generated_Source\PSoC4/Columns.c **** *  port.
 205:Generated_Source\PSoC4/Columns.c **** *
 206:Generated_Source\PSoC4/Columns.c **** * \funcusage
 207:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_SetInterruptMode
 208:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 209:Generated_Source\PSoC4/Columns.c **** void Columns_SetInterruptMode(uint16 position, uint16 mode)
 210:Generated_Source\PSoC4/Columns.c **** {
 237              		.loc 1 210 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 16
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 84B0     		sub	sp, sp, #16
 246              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 9


 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 0200     		movs	r2, r0
 250 0008 BB1D     		adds	r3, r7, #6
 251 000a 1A80     		strh	r2, [r3]
 252 000c 3B1D     		adds	r3, r7, #4
 253 000e 0A1C     		adds	r2, r1, #0
 254 0010 1A80     		strh	r2, [r3]
 211:Generated_Source\PSoC4/Columns.c ****     uint32 intrCfg;
 212:Generated_Source\PSoC4/Columns.c ****     
 213:Generated_Source\PSoC4/Columns.c ****     intrCfg =  Columns_INTCFG & (uint32)(~(uint32)position);
 255              		.loc 1 213 0
 256 0012 0B4B     		ldr	r3, .L16
 257 0014 1B68     		ldr	r3, [r3]
 258 0016 BA1D     		adds	r2, r7, #6
 259 0018 1288     		ldrh	r2, [r2]
 260 001a D243     		mvns	r2, r2
 261 001c 1340     		ands	r3, r2
 262 001e FB60     		str	r3, [r7, #12]
 214:Generated_Source\PSoC4/Columns.c ****     Columns_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 263              		.loc 1 214 0
 264 0020 074B     		ldr	r3, .L16
 265 0022 BA1D     		adds	r2, r7, #6
 266 0024 391D     		adds	r1, r7, #4
 267 0026 1288     		ldrh	r2, [r2]
 268 0028 0988     		ldrh	r1, [r1]
 269 002a 0A40     		ands	r2, r1
 270 002c 92B2     		uxth	r2, r2
 271 002e 1100     		movs	r1, r2
 272 0030 FA68     		ldr	r2, [r7, #12]
 273 0032 0A43     		orrs	r2, r1
 274 0034 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC4/Columns.c **** }
 275              		.loc 1 215 0
 276 0036 C046     		nop
 277 0038 BD46     		mov	sp, r7
 278 003a 04B0     		add	sp, sp, #16
 279              		@ sp needed
 280 003c 80BD     		pop	{r7, pc}
 281              	.L17:
 282 003e C046     		.align	2
 283              	.L16:
 284 0040 0C020440 		.word	1074004492
 285              		.cfi_endproc
 286              	.LFE4:
 287              		.size	Columns_SetInterruptMode, .-Columns_SetInterruptMode
 288              		.section	.text.Columns_ClearInterrupt,"ax",%progbits
 289              		.align	2
 290              		.global	Columns_ClearInterrupt
 291              		.code	16
 292              		.thumb_func
 293              		.type	Columns_ClearInterrupt, %function
 294              	Columns_ClearInterrupt:
 295              	.LFB5:
 216:Generated_Source\PSoC4/Columns.c **** 
 217:Generated_Source\PSoC4/Columns.c **** 
 218:Generated_Source\PSoC4/Columns.c **** /*******************************************************************************
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 10


 219:Generated_Source\PSoC4/Columns.c **** * Function Name: Columns_ClearInterrupt
 220:Generated_Source\PSoC4/Columns.c **** ****************************************************************************//**
 221:Generated_Source\PSoC4/Columns.c **** *
 222:Generated_Source\PSoC4/Columns.c **** * \brief Clears any active interrupts attached with the component and returns 
 223:Generated_Source\PSoC4/Columns.c **** *  the value of the interrupt status register allowing determination of which
 224:Generated_Source\PSoC4/Columns.c **** *  pins generated an interrupt event.
 225:Generated_Source\PSoC4/Columns.c **** *
 226:Generated_Source\PSoC4/Columns.c **** * \return 
 227:Generated_Source\PSoC4/Columns.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 228:Generated_Source\PSoC4/Columns.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 229:Generated_Source\PSoC4/Columns.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 230:Generated_Source\PSoC4/Columns.c **** *  
 231:Generated_Source\PSoC4/Columns.c **** * \sideeffect
 232:Generated_Source\PSoC4/Columns.c **** *  Clears all bits of the physical port's interrupt status register, not just
 233:Generated_Source\PSoC4/Columns.c **** *  those associated with the Pins component.
 234:Generated_Source\PSoC4/Columns.c **** *
 235:Generated_Source\PSoC4/Columns.c **** * \funcusage
 236:Generated_Source\PSoC4/Columns.c **** *  \snippet Columns_SUT.c usage_Columns_ClearInterrupt
 237:Generated_Source\PSoC4/Columns.c **** *******************************************************************************/
 238:Generated_Source\PSoC4/Columns.c **** uint8 Columns_ClearInterrupt(void)
 239:Generated_Source\PSoC4/Columns.c **** {
 296              		.loc 1 239 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 82B0     		sub	sp, sp, #8
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC4/Columns.c **** 	uint8 maskedStatus = (uint8)(Columns_INTSTAT & Columns_MASK);
 308              		.loc 1 240 0
 309 0006 084B     		ldr	r3, .L20
 310 0008 1B68     		ldr	r3, [r3]
 311 000a DAB2     		uxtb	r2, r3
 312 000c FB1D     		adds	r3, r7, #7
 313 000e 0721     		movs	r1, #7
 314 0010 0A40     		ands	r2, r1
 315 0012 1A70     		strb	r2, [r3]
 241:Generated_Source\PSoC4/Columns.c **** 	Columns_INTSTAT = maskedStatus;
 316              		.loc 1 241 0
 317 0014 044B     		ldr	r3, .L20
 318 0016 FA1D     		adds	r2, r7, #7
 319 0018 1278     		ldrb	r2, [r2]
 320 001a 1A60     		str	r2, [r3]
 242:Generated_Source\PSoC4/Columns.c ****     return maskedStatus >> Columns_SHIFT;
 321              		.loc 1 242 0
 322 001c FB1D     		adds	r3, r7, #7
 323 001e 1B78     		ldrb	r3, [r3]
 243:Generated_Source\PSoC4/Columns.c **** }
 324              		.loc 1 243 0
 325 0020 1800     		movs	r0, r3
 326 0022 BD46     		mov	sp, r7
 327 0024 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 11


 328              		@ sp needed
 329 0026 80BD     		pop	{r7, pc}
 330              	.L21:
 331              		.align	2
 332              	.L20:
 333 0028 10020440 		.word	1074004496
 334              		.cfi_endproc
 335              	.LFE5:
 336              		.size	Columns_ClearInterrupt, .-Columns_ClearInterrupt
 337              		.text
 338              	.Letext0:
 339              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 340              		.section	.debug_info,"",%progbits
 341              	.Ldebug_info0:
 342 0000 96010000 		.4byte	0x196
 343 0004 0400     		.2byte	0x4
 344 0006 00000000 		.4byte	.Ldebug_abbrev0
 345 000a 04       		.byte	0x4
 346 000b 01       		.uleb128 0x1
 347 000c C0000000 		.4byte	.LASF28
 348 0010 0C       		.byte	0xc
 349 0011 60000000 		.4byte	.LASF29
 350 0015 06000000 		.4byte	.LASF30
 351 0019 00000000 		.4byte	.Ldebug_ranges0+0
 352 001d 00000000 		.4byte	0
 353 0021 00000000 		.4byte	.Ldebug_line0
 354 0025 02       		.uleb128 0x2
 355 0026 01       		.byte	0x1
 356 0027 06       		.byte	0x6
 357 0028 1A020000 		.4byte	.LASF0
 358 002c 02       		.uleb128 0x2
 359 002d 01       		.byte	0x1
 360 002e 08       		.byte	0x8
 361 002f 87000000 		.4byte	.LASF1
 362 0033 02       		.uleb128 0x2
 363 0034 02       		.byte	0x2
 364 0035 05       		.byte	0x5
 365 0036 E8010000 		.4byte	.LASF2
 366 003a 02       		.uleb128 0x2
 367 003b 02       		.byte	0x2
 368 003c 07       		.byte	0x7
 369 003d AD000000 		.4byte	.LASF3
 370 0041 02       		.uleb128 0x2
 371 0042 04       		.byte	0x4
 372 0043 05       		.byte	0x5
 373 0044 F8010000 		.4byte	.LASF4
 374 0048 02       		.uleb128 0x2
 375 0049 04       		.byte	0x4
 376 004a 07       		.byte	0x7
 377 004b 9B000000 		.4byte	.LASF5
 378 004f 02       		.uleb128 0x2
 379 0050 08       		.byte	0x8
 380 0051 05       		.byte	0x5
 381 0052 C8010000 		.4byte	.LASF6
 382 0056 02       		.uleb128 0x2
 383 0057 08       		.byte	0x8
 384 0058 07       		.byte	0x7
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 12


 385 0059 95010000 		.4byte	.LASF7
 386 005d 03       		.uleb128 0x3
 387 005e 04       		.byte	0x4
 388 005f 05       		.byte	0x5
 389 0060 696E7400 		.ascii	"int\000"
 390 0064 02       		.uleb128 0x2
 391 0065 04       		.byte	0x4
 392 0066 07       		.byte	0x7
 393 0067 74010000 		.4byte	.LASF8
 394 006b 04       		.uleb128 0x4
 395 006c F2010000 		.4byte	.LASF9
 396 0070 02       		.byte	0x2
 397 0071 D201     		.2byte	0x1d2
 398 0073 2C000000 		.4byte	0x2c
 399 0077 04       		.uleb128 0x4
 400 0078 55010000 		.4byte	.LASF10
 401 007c 02       		.byte	0x2
 402 007d D301     		.2byte	0x1d3
 403 007f 3A000000 		.4byte	0x3a
 404 0083 04       		.uleb128 0x4
 405 0084 65010000 		.4byte	.LASF11
 406 0088 02       		.byte	0x2
 407 0089 D401     		.2byte	0x1d4
 408 008b 48000000 		.4byte	0x48
 409 008f 02       		.uleb128 0x2
 410 0090 04       		.byte	0x4
 411 0091 04       		.byte	0x4
 412 0092 81000000 		.4byte	.LASF12
 413 0096 02       		.uleb128 0x2
 414 0097 08       		.byte	0x8
 415 0098 04       		.byte	0x4
 416 0099 4E010000 		.4byte	.LASF13
 417 009d 02       		.uleb128 0x2
 418 009e 01       		.byte	0x1
 419 009f 08       		.byte	0x8
 420 00a0 E3010000 		.4byte	.LASF14
 421 00a4 04       		.uleb128 0x4
 422 00a5 00000000 		.4byte	.LASF15
 423 00a9 02       		.byte	0x2
 424 00aa 7E02     		.2byte	0x27e
 425 00ac B0000000 		.4byte	0xb0
 426 00b0 05       		.uleb128 0x5
 427 00b1 83000000 		.4byte	0x83
 428 00b5 06       		.uleb128 0x6
 429 00b6 45000000 		.4byte	.LASF16
 430 00ba 01       		.byte	0x1
 431 00bb 48       		.byte	0x48
 432 00bc 00000000 		.4byte	.LFB0
 433 00c0 5C000000 		.4byte	.LFE0-.LFB0
 434 00c4 01       		.uleb128 0x1
 435 00c5 9C       		.byte	0x9c
 436 00c6 D9000000 		.4byte	0xd9
 437 00ca 07       		.uleb128 0x7
 438 00cb C3010000 		.4byte	.LASF18
 439 00cf 01       		.byte	0x1
 440 00d0 48       		.byte	0x48
 441 00d1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 13


 442 00d5 02       		.uleb128 0x2
 443 00d6 91       		.byte	0x91
 444 00d7 77       		.sleb128 -9
 445 00d8 00       		.byte	0
 446 00d9 06       		.uleb128 0x6
 447 00da 33020000 		.4byte	.LASF17
 448 00de 01       		.byte	0x1
 449 00df 71       		.byte	0x71
 450 00e0 00000000 		.4byte	.LFB1
 451 00e4 4C000000 		.4byte	.LFE1-.LFB1
 452 00e8 01       		.uleb128 0x1
 453 00e9 9C       		.byte	0x9c
 454 00ea 0B010000 		.4byte	0x10b
 455 00ee 07       		.uleb128 0x7
 456 00ef 5A000000 		.4byte	.LASF19
 457 00f3 01       		.byte	0x1
 458 00f4 71       		.byte	0x71
 459 00f5 6B000000 		.4byte	0x6b
 460 00f9 02       		.uleb128 0x2
 461 00fa 91       		.byte	0x91
 462 00fb 6F       		.sleb128 -17
 463 00fc 08       		.uleb128 0x8
 464 00fd 95000000 		.4byte	.LASF24
 465 0101 01       		.byte	0x1
 466 0102 73       		.byte	0x73
 467 0103 6B000000 		.4byte	0x6b
 468 0107 02       		.uleb128 0x2
 469 0108 91       		.byte	0x91
 470 0109 77       		.sleb128 -9
 471 010a 00       		.byte	0
 472 010b 09       		.uleb128 0x9
 473 010c 26020000 		.4byte	.LASF20
 474 0110 01       		.byte	0x1
 475 0111 8A       		.byte	0x8a
 476 0112 6B000000 		.4byte	0x6b
 477 0116 00000000 		.4byte	.LFB2
 478 011a 1C000000 		.4byte	.LFE2-.LFB2
 479 011e 01       		.uleb128 0x1
 480 011f 9C       		.byte	0x9c
 481 0120 09       		.uleb128 0x9
 482 0121 81010000 		.4byte	.LASF21
 483 0125 01       		.byte	0x1
 484 0126 A6       		.byte	0xa6
 485 0127 6B000000 		.4byte	0x6b
 486 012b 00000000 		.4byte	.LFB3
 487 012f 1C000000 		.4byte	.LFE3-.LFB3
 488 0133 01       		.uleb128 0x1
 489 0134 9C       		.byte	0x9c
 490 0135 06       		.uleb128 0x6
 491 0136 01020000 		.4byte	.LASF22
 492 013a 01       		.byte	0x1
 493 013b D1       		.byte	0xd1
 494 013c 00000000 		.4byte	.LFB4
 495 0140 44000000 		.4byte	.LFE4-.LFB4
 496 0144 01       		.uleb128 0x1
 497 0145 9C       		.byte	0x9c
 498 0146 75010000 		.4byte	0x175
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 14


 499 014a 07       		.uleb128 0x7
 500 014b 5C010000 		.4byte	.LASF23
 501 014f 01       		.byte	0x1
 502 0150 D1       		.byte	0xd1
 503 0151 77000000 		.4byte	0x77
 504 0155 02       		.uleb128 0x2
 505 0156 91       		.byte	0x91
 506 0157 6E       		.sleb128 -18
 507 0158 07       		.uleb128 0x7
 508 0159 C3010000 		.4byte	.LASF18
 509 015d 01       		.byte	0x1
 510 015e D1       		.byte	0xd1
 511 015f 77000000 		.4byte	0x77
 512 0163 02       		.uleb128 0x2
 513 0164 91       		.byte	0x91
 514 0165 6C       		.sleb128 -20
 515 0166 08       		.uleb128 0x8
 516 0167 6C010000 		.4byte	.LASF25
 517 016b 01       		.byte	0x1
 518 016c D3       		.byte	0xd3
 519 016d 83000000 		.4byte	0x83
 520 0171 02       		.uleb128 0x2
 521 0172 91       		.byte	0x91
 522 0173 74       		.sleb128 -12
 523 0174 00       		.byte	0
 524 0175 0A       		.uleb128 0xa
 525 0176 AC010000 		.4byte	.LASF26
 526 017a 01       		.byte	0x1
 527 017b EE       		.byte	0xee
 528 017c 6B000000 		.4byte	0x6b
 529 0180 00000000 		.4byte	.LFB5
 530 0184 2C000000 		.4byte	.LFE5-.LFB5
 531 0188 01       		.uleb128 0x1
 532 0189 9C       		.byte	0x9c
 533 018a 08       		.uleb128 0x8
 534 018b D6010000 		.4byte	.LASF27
 535 018f 01       		.byte	0x1
 536 0190 F0       		.byte	0xf0
 537 0191 6B000000 		.4byte	0x6b
 538 0195 02       		.uleb128 0x2
 539 0196 91       		.byte	0x91
 540 0197 77       		.sleb128 -9
 541 0198 00       		.byte	0
 542 0199 00       		.byte	0
 543              		.section	.debug_abbrev,"",%progbits
 544              	.Ldebug_abbrev0:
 545 0000 01       		.uleb128 0x1
 546 0001 11       		.uleb128 0x11
 547 0002 01       		.byte	0x1
 548 0003 25       		.uleb128 0x25
 549 0004 0E       		.uleb128 0xe
 550 0005 13       		.uleb128 0x13
 551 0006 0B       		.uleb128 0xb
 552 0007 03       		.uleb128 0x3
 553 0008 0E       		.uleb128 0xe
 554 0009 1B       		.uleb128 0x1b
 555 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 15


 556 000b 55       		.uleb128 0x55
 557 000c 17       		.uleb128 0x17
 558 000d 11       		.uleb128 0x11
 559 000e 01       		.uleb128 0x1
 560 000f 10       		.uleb128 0x10
 561 0010 17       		.uleb128 0x17
 562 0011 00       		.byte	0
 563 0012 00       		.byte	0
 564 0013 02       		.uleb128 0x2
 565 0014 24       		.uleb128 0x24
 566 0015 00       		.byte	0
 567 0016 0B       		.uleb128 0xb
 568 0017 0B       		.uleb128 0xb
 569 0018 3E       		.uleb128 0x3e
 570 0019 0B       		.uleb128 0xb
 571 001a 03       		.uleb128 0x3
 572 001b 0E       		.uleb128 0xe
 573 001c 00       		.byte	0
 574 001d 00       		.byte	0
 575 001e 03       		.uleb128 0x3
 576 001f 24       		.uleb128 0x24
 577 0020 00       		.byte	0
 578 0021 0B       		.uleb128 0xb
 579 0022 0B       		.uleb128 0xb
 580 0023 3E       		.uleb128 0x3e
 581 0024 0B       		.uleb128 0xb
 582 0025 03       		.uleb128 0x3
 583 0026 08       		.uleb128 0x8
 584 0027 00       		.byte	0
 585 0028 00       		.byte	0
 586 0029 04       		.uleb128 0x4
 587 002a 16       		.uleb128 0x16
 588 002b 00       		.byte	0
 589 002c 03       		.uleb128 0x3
 590 002d 0E       		.uleb128 0xe
 591 002e 3A       		.uleb128 0x3a
 592 002f 0B       		.uleb128 0xb
 593 0030 3B       		.uleb128 0x3b
 594 0031 05       		.uleb128 0x5
 595 0032 49       		.uleb128 0x49
 596 0033 13       		.uleb128 0x13
 597 0034 00       		.byte	0
 598 0035 00       		.byte	0
 599 0036 05       		.uleb128 0x5
 600 0037 35       		.uleb128 0x35
 601 0038 00       		.byte	0
 602 0039 49       		.uleb128 0x49
 603 003a 13       		.uleb128 0x13
 604 003b 00       		.byte	0
 605 003c 00       		.byte	0
 606 003d 06       		.uleb128 0x6
 607 003e 2E       		.uleb128 0x2e
 608 003f 01       		.byte	0x1
 609 0040 3F       		.uleb128 0x3f
 610 0041 19       		.uleb128 0x19
 611 0042 03       		.uleb128 0x3
 612 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 16


 613 0044 3A       		.uleb128 0x3a
 614 0045 0B       		.uleb128 0xb
 615 0046 3B       		.uleb128 0x3b
 616 0047 0B       		.uleb128 0xb
 617 0048 27       		.uleb128 0x27
 618 0049 19       		.uleb128 0x19
 619 004a 11       		.uleb128 0x11
 620 004b 01       		.uleb128 0x1
 621 004c 12       		.uleb128 0x12
 622 004d 06       		.uleb128 0x6
 623 004e 40       		.uleb128 0x40
 624 004f 18       		.uleb128 0x18
 625 0050 9742     		.uleb128 0x2117
 626 0052 19       		.uleb128 0x19
 627 0053 01       		.uleb128 0x1
 628 0054 13       		.uleb128 0x13
 629 0055 00       		.byte	0
 630 0056 00       		.byte	0
 631 0057 07       		.uleb128 0x7
 632 0058 05       		.uleb128 0x5
 633 0059 00       		.byte	0
 634 005a 03       		.uleb128 0x3
 635 005b 0E       		.uleb128 0xe
 636 005c 3A       		.uleb128 0x3a
 637 005d 0B       		.uleb128 0xb
 638 005e 3B       		.uleb128 0x3b
 639 005f 0B       		.uleb128 0xb
 640 0060 49       		.uleb128 0x49
 641 0061 13       		.uleb128 0x13
 642 0062 02       		.uleb128 0x2
 643 0063 18       		.uleb128 0x18
 644 0064 00       		.byte	0
 645 0065 00       		.byte	0
 646 0066 08       		.uleb128 0x8
 647 0067 34       		.uleb128 0x34
 648 0068 00       		.byte	0
 649 0069 03       		.uleb128 0x3
 650 006a 0E       		.uleb128 0xe
 651 006b 3A       		.uleb128 0x3a
 652 006c 0B       		.uleb128 0xb
 653 006d 3B       		.uleb128 0x3b
 654 006e 0B       		.uleb128 0xb
 655 006f 49       		.uleb128 0x49
 656 0070 13       		.uleb128 0x13
 657 0071 02       		.uleb128 0x2
 658 0072 18       		.uleb128 0x18
 659 0073 00       		.byte	0
 660 0074 00       		.byte	0
 661 0075 09       		.uleb128 0x9
 662 0076 2E       		.uleb128 0x2e
 663 0077 00       		.byte	0
 664 0078 3F       		.uleb128 0x3f
 665 0079 19       		.uleb128 0x19
 666 007a 03       		.uleb128 0x3
 667 007b 0E       		.uleb128 0xe
 668 007c 3A       		.uleb128 0x3a
 669 007d 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 17


 670 007e 3B       		.uleb128 0x3b
 671 007f 0B       		.uleb128 0xb
 672 0080 27       		.uleb128 0x27
 673 0081 19       		.uleb128 0x19
 674 0082 49       		.uleb128 0x49
 675 0083 13       		.uleb128 0x13
 676 0084 11       		.uleb128 0x11
 677 0085 01       		.uleb128 0x1
 678 0086 12       		.uleb128 0x12
 679 0087 06       		.uleb128 0x6
 680 0088 40       		.uleb128 0x40
 681 0089 18       		.uleb128 0x18
 682 008a 9742     		.uleb128 0x2117
 683 008c 19       		.uleb128 0x19
 684 008d 00       		.byte	0
 685 008e 00       		.byte	0
 686 008f 0A       		.uleb128 0xa
 687 0090 2E       		.uleb128 0x2e
 688 0091 01       		.byte	0x1
 689 0092 3F       		.uleb128 0x3f
 690 0093 19       		.uleb128 0x19
 691 0094 03       		.uleb128 0x3
 692 0095 0E       		.uleb128 0xe
 693 0096 3A       		.uleb128 0x3a
 694 0097 0B       		.uleb128 0xb
 695 0098 3B       		.uleb128 0x3b
 696 0099 0B       		.uleb128 0xb
 697 009a 27       		.uleb128 0x27
 698 009b 19       		.uleb128 0x19
 699 009c 49       		.uleb128 0x49
 700 009d 13       		.uleb128 0x13
 701 009e 11       		.uleb128 0x11
 702 009f 01       		.uleb128 0x1
 703 00a0 12       		.uleb128 0x12
 704 00a1 06       		.uleb128 0x6
 705 00a2 40       		.uleb128 0x40
 706 00a3 18       		.uleb128 0x18
 707 00a4 9742     		.uleb128 0x2117
 708 00a6 19       		.uleb128 0x19
 709 00a7 00       		.byte	0
 710 00a8 00       		.byte	0
 711 00a9 00       		.byte	0
 712              		.section	.debug_aranges,"",%progbits
 713 0000 44000000 		.4byte	0x44
 714 0004 0200     		.2byte	0x2
 715 0006 00000000 		.4byte	.Ldebug_info0
 716 000a 04       		.byte	0x4
 717 000b 00       		.byte	0
 718 000c 0000     		.2byte	0
 719 000e 0000     		.2byte	0
 720 0010 00000000 		.4byte	.LFB0
 721 0014 5C000000 		.4byte	.LFE0-.LFB0
 722 0018 00000000 		.4byte	.LFB1
 723 001c 4C000000 		.4byte	.LFE1-.LFB1
 724 0020 00000000 		.4byte	.LFB2
 725 0024 1C000000 		.4byte	.LFE2-.LFB2
 726 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 18


 727 002c 1C000000 		.4byte	.LFE3-.LFB3
 728 0030 00000000 		.4byte	.LFB4
 729 0034 44000000 		.4byte	.LFE4-.LFB4
 730 0038 00000000 		.4byte	.LFB5
 731 003c 2C000000 		.4byte	.LFE5-.LFB5
 732 0040 00000000 		.4byte	0
 733 0044 00000000 		.4byte	0
 734              		.section	.debug_ranges,"",%progbits
 735              	.Ldebug_ranges0:
 736 0000 00000000 		.4byte	.LFB0
 737 0004 5C000000 		.4byte	.LFE0
 738 0008 00000000 		.4byte	.LFB1
 739 000c 4C000000 		.4byte	.LFE1
 740 0010 00000000 		.4byte	.LFB2
 741 0014 1C000000 		.4byte	.LFE2
 742 0018 00000000 		.4byte	.LFB3
 743 001c 1C000000 		.4byte	.LFE3
 744 0020 00000000 		.4byte	.LFB4
 745 0024 44000000 		.4byte	.LFE4
 746 0028 00000000 		.4byte	.LFB5
 747 002c 2C000000 		.4byte	.LFE5
 748 0030 00000000 		.4byte	0
 749 0034 00000000 		.4byte	0
 750              		.section	.debug_line,"",%progbits
 751              	.Ldebug_line0:
 752 0000 BD000000 		.section	.debug_str,"MS",%progbits,1
 752      02004400 
 752      00000201 
 752      FB0E0D00 
 752      01010101 
 753              	.LASF15:
 754 0000 72656733 		.ascii	"reg32\000"
 754      3200
 755              	.LASF30:
 756 0006 443A5C44 		.ascii	"D:\\Documents\\GitHub\\XID_483\\Workspace\\BLE_HID_"
 756      6F63756D 
 756      656E7473 
 756      5C476974 
 756      4875625C 
 757 0034 4B657962 		.ascii	"Keyboard01.cydsn\000"
 757      6F617264 
 757      30312E63 
 757      7964736E 
 757      00
 758              	.LASF16:
 759 0045 436F6C75 		.ascii	"Columns_SetDriveMode\000"
 759      6D6E735F 
 759      53657444 
 759      72697665 
 759      4D6F6465 
 760              	.LASF19:
 761 005a 76616C75 		.ascii	"value\000"
 761      6500
 762              	.LASF29:
 763 0060 47656E65 		.ascii	"Generated_Source\\PSoC4\\Columns.c\000"
 763      72617465 
 763      645F536F 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 19


 763      75726365 
 763      5C50536F 
 764              	.LASF12:
 765 0081 666C6F61 		.ascii	"float\000"
 765      7400
 766              	.LASF1:
 767 0087 756E7369 		.ascii	"unsigned char\000"
 767      676E6564 
 767      20636861 
 767      7200
 768              	.LASF24:
 769 0095 64725661 		.ascii	"drVal\000"
 769      6C00
 770              	.LASF5:
 771 009b 6C6F6E67 		.ascii	"long unsigned int\000"
 771      20756E73 
 771      69676E65 
 771      6420696E 
 771      7400
 772              	.LASF3:
 773 00ad 73686F72 		.ascii	"short unsigned int\000"
 773      7420756E 
 773      7369676E 
 773      65642069 
 773      6E7400
 774              	.LASF28:
 775 00c0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 775      43313120 
 775      352E342E 
 775      31203230 
 775      31363036 
 776 00f3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 776      20726576 
 776      6973696F 
 776      6E203233 
 776      37373135 
 777 0126 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 777      66756E63 
 777      74696F6E 
 777      2D736563 
 777      74696F6E 
 778              	.LASF13:
 779 014e 646F7562 		.ascii	"double\000"
 779      6C6500
 780              	.LASF10:
 781 0155 75696E74 		.ascii	"uint16\000"
 781      313600
 782              	.LASF23:
 783 015c 706F7369 		.ascii	"position\000"
 783      74696F6E 
 783      00
 784              	.LASF11:
 785 0165 75696E74 		.ascii	"uint32\000"
 785      333200
 786              	.LASF25:
 787 016c 696E7472 		.ascii	"intrCfg\000"
 787      43666700 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 20


 788              	.LASF8:
 789 0174 756E7369 		.ascii	"unsigned int\000"
 789      676E6564 
 789      20696E74 
 789      00
 790              	.LASF21:
 791 0181 436F6C75 		.ascii	"Columns_ReadDataReg\000"
 791      6D6E735F 
 791      52656164 
 791      44617461 
 791      52656700 
 792              	.LASF7:
 793 0195 6C6F6E67 		.ascii	"long long unsigned int\000"
 793      206C6F6E 
 793      6720756E 
 793      7369676E 
 793      65642069 
 794              	.LASF26:
 795 01ac 436F6C75 		.ascii	"Columns_ClearInterrupt\000"
 795      6D6E735F 
 795      436C6561 
 795      72496E74 
 795      65727275 
 796              	.LASF18:
 797 01c3 6D6F6465 		.ascii	"mode\000"
 797      00
 798              	.LASF6:
 799 01c8 6C6F6E67 		.ascii	"long long int\000"
 799      206C6F6E 
 799      6720696E 
 799      7400
 800              	.LASF27:
 801 01d6 6D61736B 		.ascii	"maskedStatus\000"
 801      65645374 
 801      61747573 
 801      00
 802              	.LASF14:
 803 01e3 63686172 		.ascii	"char\000"
 803      00
 804              	.LASF2:
 805 01e8 73686F72 		.ascii	"short int\000"
 805      7420696E 
 805      7400
 806              	.LASF9:
 807 01f2 75696E74 		.ascii	"uint8\000"
 807      3800
 808              	.LASF4:
 809 01f8 6C6F6E67 		.ascii	"long int\000"
 809      20696E74 
 809      00
 810              	.LASF22:
 811 0201 436F6C75 		.ascii	"Columns_SetInterruptMode\000"
 811      6D6E735F 
 811      53657449 
 811      6E746572 
 811      72757074 
 812              	.LASF0:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccV2fz1Q.s 			page 21


 813 021a 7369676E 		.ascii	"signed char\000"
 813      65642063 
 813      68617200 
 814              	.LASF20:
 815 0226 436F6C75 		.ascii	"Columns_Read\000"
 815      6D6E735F 
 815      52656164 
 815      00
 816              	.LASF17:
 817 0233 436F6C75 		.ascii	"Columns_Write\000"
 817      6D6E735F 
 817      57726974 
 817      6500
 818              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
