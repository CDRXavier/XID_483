ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPIM_1_initVar
  20              		.bss
  21              		.type	SPIM_1_initVar, %object
  22              		.size	SPIM_1_initVar, 1
  23              	SPIM_1_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPIM_1_swStatusTx,1,1
  26              		.comm	SPIM_1_swStatusRx,1,1
  27              		.section	.text.SPIM_1_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPIM_1_Init
  30              		.code	16
  31              		.thumb_func
  32              		.type	SPIM_1_Init, %function
  33              	SPIM_1_Init:
  34              	.LFB2:
  35              		.file 1 "Generated_Source\\PSoC4\\SPIM_1.c"
   1:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM_1.c **** * File Name: SPIM_1.c
   3:Generated_Source\PSoC4/SPIM_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM_1.c **** *
   5:Generated_Source\PSoC4/SPIM_1.c **** * Description:
   6:Generated_Source\PSoC4/SPIM_1.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM_1.c **** *
   8:Generated_Source\PSoC4/SPIM_1.c **** * Note:
   9:Generated_Source\PSoC4/SPIM_1.c **** *  None.
  10:Generated_Source\PSoC4/SPIM_1.c **** *
  11:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM_1.c **** 
  18:Generated_Source\PSoC4/SPIM_1.c **** #include "SPIM_1_PVT.h"
  19:Generated_Source\PSoC4/SPIM_1.c **** 
  20:Generated_Source\PSoC4/SPIM_1.c **** #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferFull;
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 2


  23:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferRead;
  24:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferWrite;
  25:Generated_Source\PSoC4/SPIM_1.c **** #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM_1.c **** 
  27:Generated_Source\PSoC4/SPIM_1.c **** #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferRead;
  31:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM_1.c **** #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM_1.c **** 
  34:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM_1.c **** 
  36:Generated_Source\PSoC4/SPIM_1.c **** volatile uint8 SPIM_1_swStatusTx;
  37:Generated_Source\PSoC4/SPIM_1.c **** volatile uint8 SPIM_1_swStatusRx;
  38:Generated_Source\PSoC4/SPIM_1.c **** 
  39:Generated_Source\PSoC4/SPIM_1.c **** 
  40:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Init
  42:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM_1.c **** *
  44:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM_1.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM_1.c **** *
  47:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM_1.c **** *  None.
  49:Generated_Source\PSoC4/SPIM_1.c **** *
  50:Generated_Source\PSoC4/SPIM_1.c **** * Return:
  51:Generated_Source\PSoC4/SPIM_1.c **** *  None.
  52:Generated_Source\PSoC4/SPIM_1.c **** *
  53:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM_1.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM_1.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM_1.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM_1.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM_1.c **** *
  59:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM_1.c **** *  No.
  61:Generated_Source\PSoC4/SPIM_1.c **** *
  62:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Init(void) 
  64:Generated_Source\PSoC4/SPIM_1.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/SPIM_1.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_COUNTER_PERIOD_REG = SPIM_1_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 084B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC4/SPIM_1.c **** 
  68:Generated_Source\PSoC4/SPIM_1.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable         (SPIM_1_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM_1.c ****         CyIntSetPriority     (SPIM_1_TX_ISR_NUMBER,  SPIM_1_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM_1.c ****         (void) CyIntSetVector(SPIM_1_TX_ISR_NUMBER, &SPIM_1_TX_ISR);
  73:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM_1.c **** 
  75:Generated_Source\PSoC4/SPIM_1.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable         (SPIM_1_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM_1.c ****         CyIntSetPriority     (SPIM_1_RX_ISR_NUMBER,  SPIM_1_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM_1.c ****         (void) CyIntSetVector(SPIM_1_RX_ISR_NUMBER, &SPIM_1_RX_ISR);
  80:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM_1.c **** 
  82:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_ClearFIFO();
  50              		.loc 1 83 0
  51 000a FFF7FEFF 		bl	SPIM_1_ClearFIFO
  84:Generated_Source\PSoC4/SPIM_1.c **** 
  85:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferRead  = 0u;
  88:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM_1.c **** 
  91:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM_1.c **** 
  97:Generated_Source\PSoC4/SPIM_1.c ****     (void) SPIM_1_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  52              		.loc 1 97 0
  53 000e FFF7FEFF 		bl	SPIM_1_ReadTxStatus
  98:Generated_Source\PSoC4/SPIM_1.c ****     (void) SPIM_1_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  54              		.loc 1 98 0
  55 0012 FFF7FEFF 		bl	SPIM_1_ReadRxStatus
  99:Generated_Source\PSoC4/SPIM_1.c **** 
 100:Generated_Source\PSoC4/SPIM_1.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG = SPIM_1_TX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 101 0
  57 0016 054B     		ldr	r3, .L2+4
  58 0018 0022     		movs	r2, #0
  59 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG = SPIM_1_RX_INIT_INTERRUPTS_MASK;
  60              		.loc 1 102 0
  61 001c 044B     		ldr	r3, .L2+8
  62 001e 0022     		movs	r2, #0
  63 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC4/SPIM_1.c **** }
  64              		.loc 1 103 0
  65 0022 C046     		nop
  66 0024 BD46     		mov	sp, r7
  67              		@ sp needed
  68 0026 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 4


  69              	.L3:
  70              		.align	2
  71              	.L2:
  72 0028 82000F40 		.word	1074724994
  73 002c 81000F40 		.word	1074724993
  74 0030 80000F40 		.word	1074724992
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	SPIM_1_Init, .-SPIM_1_Init
  78              		.section	.text.SPIM_1_Enable,"ax",%progbits
  79              		.align	2
  80              		.global	SPIM_1_Enable
  81              		.code	16
  82              		.thumb_func
  83              		.type	SPIM_1_Enable, %function
  84              	SPIM_1_Enable:
  85              	.LFB3:
 104:Generated_Source\PSoC4/SPIM_1.c **** 
 105:Generated_Source\PSoC4/SPIM_1.c **** 
 106:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Enable
 108:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM_1.c **** *
 110:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM_1.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM_1.c **** *
 113:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 115:Generated_Source\PSoC4/SPIM_1.c **** *
 116:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 117:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 118:Generated_Source\PSoC4/SPIM_1.c **** *
 119:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Enable(void) 
 121:Generated_Source\PSoC4/SPIM_1.c **** {
  86              		.loc 1 121 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 90B5     		push	{r4, r7, lr}
  91              		.cfi_def_cfa_offset 12
  92              		.cfi_offset 4, -12
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 83B0     		sub	sp, sp, #12
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM_1.c **** 
 124:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  99              		.loc 1 124 0
 100 0006 FC1D     		adds	r4, r7, #7
 101 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 102 000c 0300     		movs	r3, r0
 103 000e 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_COUNTER_CONTROL_REG |= SPIM_1_CNTR_ENABLE;
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 5


 104              		.loc 1 125 0
 105 0010 134A     		ldr	r2, .L5
 106 0012 134B     		ldr	r3, .L5
 107 0014 1B78     		ldrb	r3, [r3]
 108 0016 DBB2     		uxtb	r3, r3
 109 0018 2021     		movs	r1, #32
 110 001a 0B43     		orrs	r3, r1
 111 001c DBB2     		uxtb	r3, r3
 112 001e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_ACTL_REG  |= SPIM_1_INT_ENABLE;
 113              		.loc 1 126 0
 114 0020 104A     		ldr	r2, .L5+4
 115 0022 104B     		ldr	r3, .L5+4
 116 0024 1B78     		ldrb	r3, [r3]
 117 0026 DBB2     		uxtb	r3, r3
 118 0028 1021     		movs	r1, #16
 119 002a 0B43     		orrs	r3, r1
 120 002c DBB2     		uxtb	r3, r3
 121 002e 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_ACTL_REG  |= SPIM_1_INT_ENABLE;
 122              		.loc 1 127 0
 123 0030 0D4A     		ldr	r2, .L5+8
 124 0032 0D4B     		ldr	r3, .L5+8
 125 0034 1B78     		ldrb	r3, [r3]
 126 0036 DBB2     		uxtb	r3, r3
 127 0038 1021     		movs	r1, #16
 128 003a 0B43     		orrs	r3, r1
 129 003c DBB2     		uxtb	r3, r3
 130 003e 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 131              		.loc 1 128 0
 132 0040 FB1D     		adds	r3, r7, #7
 133 0042 1B78     		ldrb	r3, [r3]
 134 0044 1800     		movs	r0, r3
 135 0046 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/SPIM_1.c **** 
 130:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_IntClock_Enable();
 136              		.loc 1 131 0
 137 004a FF20     		movs	r0, #255
 138 004c FFF7FEFF 		bl	SPIM_1_IntClock_StartEx
 132:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM_1.c **** 
 134:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableTxInt();
 139              		.loc 1 134 0
 140 0050 FFF7FEFF 		bl	SPIM_1_EnableTxInt
 135:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableRxInt();
 141              		.loc 1 135 0
 142 0054 FFF7FEFF 		bl	SPIM_1_EnableRxInt
 136:Generated_Source\PSoC4/SPIM_1.c **** }
 143              		.loc 1 136 0
 144 0058 C046     		nop
 145 005a BD46     		mov	sp, r7
 146 005c 03B0     		add	sp, sp, #12
 147              		@ sp needed
 148 005e 90BD     		pop	{r4, r7, pc}
 149              	.L6:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 6


 150              		.align	2
 151              	.L5:
 152 0060 92000F40 		.word	1074725010
 153 0064 91000F40 		.word	1074725009
 154 0068 90000F40 		.word	1074725008
 155              		.cfi_endproc
 156              	.LFE3:
 157              		.size	SPIM_1_Enable, .-SPIM_1_Enable
 158              		.section	.text.SPIM_1_Start,"ax",%progbits
 159              		.align	2
 160              		.global	SPIM_1_Start
 161              		.code	16
 162              		.thumb_func
 163              		.type	SPIM_1_Start, %function
 164              	SPIM_1_Start:
 165              	.LFB4:
 137:Generated_Source\PSoC4/SPIM_1.c **** 
 138:Generated_Source\PSoC4/SPIM_1.c **** 
 139:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Start
 141:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM_1.c **** *
 143:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 144:Generated_Source\PSoC4/SPIM_1.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC4/SPIM_1.c **** *
 146:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 148:Generated_Source\PSoC4/SPIM_1.c **** *
 149:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 150:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 151:Generated_Source\PSoC4/SPIM_1.c **** *
 152:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM_1.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM_1.c **** *
 156:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM_1.c **** *
 159:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 161:Generated_Source\PSoC4/SPIM_1.c **** *
 162:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Start(void) 
 164:Generated_Source\PSoC4/SPIM_1.c **** {
 166              		.loc 1 164 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC4/SPIM_1.c ****     if(0u == SPIM_1_initVar)
 176              		.loc 1 165 0
 177 0004 064B     		ldr	r3, .L9
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 7


 178 0006 1B78     		ldrb	r3, [r3]
 179 0008 002B     		cmp	r3, #0
 180 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC4/SPIM_1.c ****     {
 167:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_Init();
 181              		.loc 1 167 0
 182 000c FFF7FEFF 		bl	SPIM_1_Init
 168:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_initVar = 1u;
 183              		.loc 1 168 0
 184 0010 034B     		ldr	r3, .L9
 185 0012 0122     		movs	r2, #1
 186 0014 1A70     		strb	r2, [r3]
 187              	.L8:
 169:Generated_Source\PSoC4/SPIM_1.c ****     }
 170:Generated_Source\PSoC4/SPIM_1.c **** 
 171:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_Enable();
 188              		.loc 1 171 0
 189 0016 FFF7FEFF 		bl	SPIM_1_Enable
 172:Generated_Source\PSoC4/SPIM_1.c **** }
 190              		.loc 1 172 0
 191 001a C046     		nop
 192 001c BD46     		mov	sp, r7
 193              		@ sp needed
 194 001e 80BD     		pop	{r7, pc}
 195              	.L10:
 196              		.align	2
 197              	.L9:
 198 0020 00000000 		.word	SPIM_1_initVar
 199              		.cfi_endproc
 200              	.LFE4:
 201              		.size	SPIM_1_Start, .-SPIM_1_Start
 202              		.section	.text.SPIM_1_Stop,"ax",%progbits
 203              		.align	2
 204              		.global	SPIM_1_Stop
 205              		.code	16
 206              		.thumb_func
 207              		.type	SPIM_1_Stop, %function
 208              	SPIM_1_Stop:
 209              	.LFB5:
 173:Generated_Source\PSoC4/SPIM_1.c **** 
 174:Generated_Source\PSoC4/SPIM_1.c **** 
 175:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Stop
 177:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM_1.c **** *
 179:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM_1.c **** *
 182:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 184:Generated_Source\PSoC4/SPIM_1.c **** *
 185:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 186:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 187:Generated_Source\PSoC4/SPIM_1.c **** *
 188:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM_1.c **** *
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 8


 191:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Stop(void) 
 193:Generated_Source\PSoC4/SPIM_1.c **** {
 210              		.loc 1 193 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 90B5     		push	{r4, r7, lr}
 215              		.cfi_def_cfa_offset 12
 216              		.cfi_offset 4, -12
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 83B0     		sub	sp, sp, #12
 220              		.cfi_def_cfa_offset 24
 221 0004 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM_1.c **** 
 196:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 223              		.loc 1 196 0
 224 0006 FC1D     		adds	r4, r7, #7
 225 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 226 000c 0300     		movs	r3, r0
 227 000e 2370     		strb	r3, [r4]
 197:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_1_INT_ENABLE);
 228              		.loc 1 197 0
 229 0010 0F4A     		ldr	r2, .L12
 230 0012 0F4B     		ldr	r3, .L12
 231 0014 1B78     		ldrb	r3, [r3]
 232 0016 DBB2     		uxtb	r3, r3
 233 0018 1021     		movs	r1, #16
 234 001a 8B43     		bics	r3, r1
 235 001c DBB2     		uxtb	r3, r3
 236 001e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_1_INT_ENABLE);
 237              		.loc 1 198 0
 238 0020 0C4A     		ldr	r2, .L12+4
 239 0022 0C4B     		ldr	r3, .L12+4
 240 0024 1B78     		ldrb	r3, [r3]
 241 0026 DBB2     		uxtb	r3, r3
 242 0028 1021     		movs	r1, #16
 243 002a 8B43     		bics	r3, r1
 244 002c DBB2     		uxtb	r3, r3
 245 002e 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 246              		.loc 1 199 0
 247 0030 FB1D     		adds	r3, r7, #7
 248 0032 1B78     		ldrb	r3, [r3]
 249 0034 1800     		movs	r0, r3
 250 0036 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC4/SPIM_1.c **** 
 201:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_IntClock_Disable();
 251              		.loc 1 202 0
 252 003a FFF7FEFF 		bl	SPIM_1_IntClock_Stop
 203:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM_1.c **** 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 9


 205:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableTxInt();
 253              		.loc 1 205 0
 254 003e FFF7FEFF 		bl	SPIM_1_DisableTxInt
 206:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableRxInt();
 255              		.loc 1 206 0
 256 0042 FFF7FEFF 		bl	SPIM_1_DisableRxInt
 207:Generated_Source\PSoC4/SPIM_1.c **** }
 257              		.loc 1 207 0
 258 0046 C046     		nop
 259 0048 BD46     		mov	sp, r7
 260 004a 03B0     		add	sp, sp, #12
 261              		@ sp needed
 262 004c 90BD     		pop	{r4, r7, pc}
 263              	.L13:
 264 004e C046     		.align	2
 265              	.L12:
 266 0050 91000F40 		.word	1074725009
 267 0054 90000F40 		.word	1074725008
 268              		.cfi_endproc
 269              	.LFE5:
 270              		.size	SPIM_1_Stop, .-SPIM_1_Stop
 271              		.section	.text.SPIM_1_EnableTxInt,"ax",%progbits
 272              		.align	2
 273              		.global	SPIM_1_EnableTxInt
 274              		.code	16
 275              		.thumb_func
 276              		.type	SPIM_1_EnableTxInt, %function
 277              	SPIM_1_EnableTxInt:
 278              	.LFB6:
 208:Generated_Source\PSoC4/SPIM_1.c **** 
 209:Generated_Source\PSoC4/SPIM_1.c **** 
 210:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_EnableTxInt
 212:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM_1.c **** *
 214:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM_1.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM_1.c **** *
 217:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 219:Generated_Source\PSoC4/SPIM_1.c **** *
 220:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 221:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 222:Generated_Source\PSoC4/SPIM_1.c **** *
 223:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM_1.c **** *
 226:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM_1.c **** {
 279              		.loc 1 228 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 10


 286              		.cfi_offset 14, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM_1.c ****         CyIntEnable(SPIM_1_TX_ISR_NUMBER);
 231:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM_1.c **** }
 289              		.loc 1 232 0
 290 0004 C046     		nop
 291 0006 BD46     		mov	sp, r7
 292              		@ sp needed
 293 0008 80BD     		pop	{r7, pc}
 294              		.cfi_endproc
 295              	.LFE6:
 296              		.size	SPIM_1_EnableTxInt, .-SPIM_1_EnableTxInt
 297              		.section	.text.SPIM_1_EnableRxInt,"ax",%progbits
 298              		.align	2
 299              		.global	SPIM_1_EnableRxInt
 300              		.code	16
 301              		.thumb_func
 302              		.type	SPIM_1_EnableRxInt, %function
 303              	SPIM_1_EnableRxInt:
 304              	.LFB7:
 233:Generated_Source\PSoC4/SPIM_1.c **** 
 234:Generated_Source\PSoC4/SPIM_1.c **** 
 235:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_EnableRxInt
 237:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM_1.c **** *
 239:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM_1.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM_1.c **** *
 242:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 244:Generated_Source\PSoC4/SPIM_1.c **** *
 245:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 246:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 247:Generated_Source\PSoC4/SPIM_1.c **** *
 248:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 249:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/SPIM_1.c **** *
 251:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM_1.c **** {
 305              		.loc 1 253 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM_1.c ****         CyIntEnable(SPIM_1_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 11


 257:Generated_Source\PSoC4/SPIM_1.c **** }
 315              		.loc 1 257 0
 316 0004 C046     		nop
 317 0006 BD46     		mov	sp, r7
 318              		@ sp needed
 319 0008 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE7:
 322              		.size	SPIM_1_EnableRxInt, .-SPIM_1_EnableRxInt
 323              		.section	.text.SPIM_1_DisableTxInt,"ax",%progbits
 324              		.align	2
 325              		.global	SPIM_1_DisableTxInt
 326              		.code	16
 327              		.thumb_func
 328              		.type	SPIM_1_DisableTxInt, %function
 329              	SPIM_1_DisableTxInt:
 330              	.LFB8:
 258:Generated_Source\PSoC4/SPIM_1.c **** 
 259:Generated_Source\PSoC4/SPIM_1.c **** 
 260:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_DisableTxInt
 262:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM_1.c **** *
 264:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM_1.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/SPIM_1.c **** *
 267:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 269:Generated_Source\PSoC4/SPIM_1.c **** *
 270:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 271:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 272:Generated_Source\PSoC4/SPIM_1.c **** *
 273:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM_1.c **** *
 276:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM_1.c **** {
 331              		.loc 1 278 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable(SPIM_1_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/SPIM_1.c **** }
 341              		.loc 1 282 0
 342 0004 C046     		nop
 343 0006 BD46     		mov	sp, r7
 344              		@ sp needed
 345 0008 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 12


 346              		.cfi_endproc
 347              	.LFE8:
 348              		.size	SPIM_1_DisableTxInt, .-SPIM_1_DisableTxInt
 349              		.section	.text.SPIM_1_DisableRxInt,"ax",%progbits
 350              		.align	2
 351              		.global	SPIM_1_DisableRxInt
 352              		.code	16
 353              		.thumb_func
 354              		.type	SPIM_1_DisableRxInt, %function
 355              	SPIM_1_DisableRxInt:
 356              	.LFB9:
 283:Generated_Source\PSoC4/SPIM_1.c **** 
 284:Generated_Source\PSoC4/SPIM_1.c **** 
 285:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_DisableRxInt
 287:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM_1.c **** *
 289:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM_1.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM_1.c **** *
 292:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 294:Generated_Source\PSoC4/SPIM_1.c **** *
 295:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 296:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 297:Generated_Source\PSoC4/SPIM_1.c **** *
 298:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/SPIM_1.c **** *
 301:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM_1.c **** {
 357              		.loc 1 303 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable(SPIM_1_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM_1.c **** }
 367              		.loc 1 307 0
 368 0004 C046     		nop
 369 0006 BD46     		mov	sp, r7
 370              		@ sp needed
 371 0008 80BD     		pop	{r7, pc}
 372              		.cfi_endproc
 373              	.LFE9:
 374              		.size	SPIM_1_DisableRxInt, .-SPIM_1_DisableRxInt
 375              		.section	.text.SPIM_1_SetTxInterruptMode,"ax",%progbits
 376              		.align	2
 377              		.global	SPIM_1_SetTxInterruptMode
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 13


 378              		.code	16
 379              		.thumb_func
 380              		.type	SPIM_1_SetTxInterruptMode, %function
 381              	SPIM_1_SetTxInterruptMode:
 382              	.LFB10:
 308:Generated_Source\PSoC4/SPIM_1.c **** 
 309:Generated_Source\PSoC4/SPIM_1.c **** 
 310:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 313:Generated_Source\PSoC4/SPIM_1.c **** *
 314:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM_1.c **** *
 317:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM_1.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM_1.c **** *
 321:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 322:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 323:Generated_Source\PSoC4/SPIM_1.c **** *
 324:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM_1.c **** *
 327:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/SPIM_1.c **** {
 383              		.loc 1 329 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 0200     		movs	r2, r0
 396 0008 FB1D     		adds	r3, r7, #7
 397 000a 1A70     		strb	r2, [r3]
 330:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG = intSrc;
 398              		.loc 1 330 0
 399 000c 034A     		ldr	r2, .L19
 400 000e FB1D     		adds	r3, r7, #7
 401 0010 1B78     		ldrb	r3, [r3]
 402 0012 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/SPIM_1.c **** }
 403              		.loc 1 331 0
 404 0014 C046     		nop
 405 0016 BD46     		mov	sp, r7
 406 0018 02B0     		add	sp, sp, #8
 407              		@ sp needed
 408 001a 80BD     		pop	{r7, pc}
 409              	.L20:
 410              		.align	2
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 14


 411              	.L19:
 412 001c 81000F40 		.word	1074724993
 413              		.cfi_endproc
 414              	.LFE10:
 415              		.size	SPIM_1_SetTxInterruptMode, .-SPIM_1_SetTxInterruptMode
 416              		.section	.text.SPIM_1_SetRxInterruptMode,"ax",%progbits
 417              		.align	2
 418              		.global	SPIM_1_SetRxInterruptMode
 419              		.code	16
 420              		.thumb_func
 421              		.type	SPIM_1_SetRxInterruptMode, %function
 422              	SPIM_1_SetRxInterruptMode:
 423              	.LFB11:
 332:Generated_Source\PSoC4/SPIM_1.c **** 
 333:Generated_Source\PSoC4/SPIM_1.c **** 
 334:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_SetRxInterruptMode
 336:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 337:Generated_Source\PSoC4/SPIM_1.c **** *
 338:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM_1.c **** *
 341:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC4/SPIM_1.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM_1.c **** *
 345:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 346:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 347:Generated_Source\PSoC4/SPIM_1.c **** *
 348:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM_1.c **** *
 351:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/SPIM_1.c **** {
 424              		.loc 1 353 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 436 0006 0200     		movs	r2, r0
 437 0008 FB1D     		adds	r3, r7, #7
 438 000a 1A70     		strb	r2, [r3]
 354:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG  = intSrc;
 439              		.loc 1 354 0
 440 000c 034A     		ldr	r2, .L22
 441 000e FB1D     		adds	r3, r7, #7
 442 0010 1B78     		ldrb	r3, [r3]
 443 0012 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC4/SPIM_1.c **** }
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 15


 444              		.loc 1 355 0
 445 0014 C046     		nop
 446 0016 BD46     		mov	sp, r7
 447 0018 02B0     		add	sp, sp, #8
 448              		@ sp needed
 449 001a 80BD     		pop	{r7, pc}
 450              	.L23:
 451              		.align	2
 452              	.L22:
 453 001c 80000F40 		.word	1074724992
 454              		.cfi_endproc
 455              	.LFE11:
 456              		.size	SPIM_1_SetRxInterruptMode, .-SPIM_1_SetRxInterruptMode
 457              		.section	.text.SPIM_1_ReadTxStatus,"ax",%progbits
 458              		.align	2
 459              		.global	SPIM_1_ReadTxStatus
 460              		.code	16
 461              		.thumb_func
 462              		.type	SPIM_1_ReadTxStatus, %function
 463              	SPIM_1_ReadTxStatus:
 464              	.LFB12:
 356:Generated_Source\PSoC4/SPIM_1.c **** 
 357:Generated_Source\PSoC4/SPIM_1.c **** 
 358:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM_1.c **** *
 362:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM_1.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM_1.c **** *
 365:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 366:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 367:Generated_Source\PSoC4/SPIM_1.c **** *
 368:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 369:Generated_Source\PSoC4/SPIM_1.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM_1.c **** *
 371:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 372:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC4/SPIM_1.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM_1.c **** *
 375:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM_1.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM_1.c **** *
 379:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM_1.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM_1.c **** *
 382:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 384:Generated_Source\PSoC4/SPIM_1.c **** *
 385:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM_1.c **** {
 465              		.loc 1 387 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 8
 468              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 16


 469 0000 80B5     		push	{r7, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 7, -8
 472              		.cfi_offset 14, -4
 473 0002 82B0     		sub	sp, sp, #8
 474              		.cfi_def_cfa_offset 16
 475 0004 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC4/SPIM_1.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM_1.c **** 
 390:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 393:Generated_Source\PSoC4/SPIM_1.c **** 
 394:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
 395:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusTx = 0u;
 396:Generated_Source\PSoC4/SPIM_1.c **** 
 397:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 398:Generated_Source\PSoC4/SPIM_1.c **** 
 399:Generated_Source\PSoC4/SPIM_1.c ****     #else
 400:Generated_Source\PSoC4/SPIM_1.c **** 
 401:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_TX_STATUS_REG;
 477              		.loc 1 401 0
 478 0006 054A     		ldr	r2, .L26
 479 0008 FB1D     		adds	r3, r7, #7
 480 000a 1278     		ldrb	r2, [r2]
 481 000c 1A70     		strb	r2, [r3]
 402:Generated_Source\PSoC4/SPIM_1.c **** 
 403:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/SPIM_1.c **** 
 405:Generated_Source\PSoC4/SPIM_1.c ****     return(tmpStatus);
 482              		.loc 1 405 0
 483 000e FB1D     		adds	r3, r7, #7
 484 0010 1B78     		ldrb	r3, [r3]
 406:Generated_Source\PSoC4/SPIM_1.c **** }
 485              		.loc 1 406 0
 486 0012 1800     		movs	r0, r3
 487 0014 BD46     		mov	sp, r7
 488 0016 02B0     		add	sp, sp, #8
 489              		@ sp needed
 490 0018 80BD     		pop	{r7, pc}
 491              	.L27:
 492 001a C046     		.align	2
 493              	.L26:
 494 001c 61000F40 		.word	1074724961
 495              		.cfi_endproc
 496              	.LFE12:
 497              		.size	SPIM_1_ReadTxStatus, .-SPIM_1_ReadTxStatus
 498              		.section	.text.SPIM_1_ReadRxStatus,"ax",%progbits
 499              		.align	2
 500              		.global	SPIM_1_ReadRxStatus
 501              		.code	16
 502              		.thumb_func
 503              		.type	SPIM_1_ReadRxStatus, %function
 504              	SPIM_1_ReadRxStatus:
 505              	.LFB13:
 407:Generated_Source\PSoC4/SPIM_1.c **** 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 17


 408:Generated_Source\PSoC4/SPIM_1.c **** 
 409:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM_1.c **** *
 413:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM_1.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM_1.c **** *
 416:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 418:Generated_Source\PSoC4/SPIM_1.c **** *
 419:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 420:Generated_Source\PSoC4/SPIM_1.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM_1.c **** *
 422:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM_1.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM_1.c **** *
 426:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM_1.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM_1.c **** *
 430:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM_1.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM_1.c **** *
 433:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 435:Generated_Source\PSoC4/SPIM_1.c **** *
 436:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM_1.c **** {
 506              		.loc 1 438 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 82B0     		sub	sp, sp, #8
 515              		.cfi_def_cfa_offset 16
 516 0004 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC4/SPIM_1.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM_1.c **** 
 441:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 444:Generated_Source\PSoC4/SPIM_1.c **** 
 445:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
 446:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusRx = 0u;
 447:Generated_Source\PSoC4/SPIM_1.c **** 
 448:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 449:Generated_Source\PSoC4/SPIM_1.c **** 
 450:Generated_Source\PSoC4/SPIM_1.c ****     #else
 451:Generated_Source\PSoC4/SPIM_1.c **** 
 452:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_RX_STATUS_REG;
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 18


 518              		.loc 1 452 0
 519 0006 054A     		ldr	r2, .L30
 520 0008 FB1D     		adds	r3, r7, #7
 521 000a 1278     		ldrb	r2, [r2]
 522 000c 1A70     		strb	r2, [r3]
 453:Generated_Source\PSoC4/SPIM_1.c **** 
 454:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM_1.c **** 
 456:Generated_Source\PSoC4/SPIM_1.c ****     return(tmpStatus);
 523              		.loc 1 456 0
 524 000e FB1D     		adds	r3, r7, #7
 525 0010 1B78     		ldrb	r3, [r3]
 457:Generated_Source\PSoC4/SPIM_1.c **** }
 526              		.loc 1 457 0
 527 0012 1800     		movs	r0, r3
 528 0014 BD46     		mov	sp, r7
 529 0016 02B0     		add	sp, sp, #8
 530              		@ sp needed
 531 0018 80BD     		pop	{r7, pc}
 532              	.L31:
 533 001a C046     		.align	2
 534              	.L30:
 535 001c 60000F40 		.word	1074724960
 536              		.cfi_endproc
 537              	.LFE13:
 538              		.size	SPIM_1_ReadRxStatus, .-SPIM_1_ReadRxStatus
 539              		.section	.text.SPIM_1_WriteTxData,"ax",%progbits
 540              		.align	2
 541              		.global	SPIM_1_WriteTxData
 542              		.code	16
 543              		.thumb_func
 544              		.type	SPIM_1_WriteTxData, %function
 545              	SPIM_1_WriteTxData:
 546              	.LFB14:
 458:Generated_Source\PSoC4/SPIM_1.c **** 
 459:Generated_Source\PSoC4/SPIM_1.c **** 
 460:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_WriteTxData
 462:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM_1.c **** *
 464:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 465:Generated_Source\PSoC4/SPIM_1.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM_1.c **** *
 467:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM_1.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM_1.c **** *
 470:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 471:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 472:Generated_Source\PSoC4/SPIM_1.c **** *
 473:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM_1.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM_1.c **** *  data to sending, modified every function call if TX Software Buffer is used.
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 19


 481:Generated_Source\PSoC4/SPIM_1.c **** *
 482:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM_1.c **** *
 485:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 486:Generated_Source\PSoC4/SPIM_1.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM_1.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM_1.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM_1.c **** *
 490:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 492:Generated_Source\PSoC4/SPIM_1.c **** *
 493:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/SPIM_1.c **** {
 547              		.loc 1 495 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 82B0     		sub	sp, sp, #8
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 559 0006 0200     		movs	r2, r0
 560 0008 FB1D     		adds	r3, r7, #7
 561 000a 1A70     		strb	r2, [r3]
 496:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM_1.c **** 
 498:Generated_Source\PSoC4/SPIM_1.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM_1.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM_1.c **** 
 501:Generated_Source\PSoC4/SPIM_1.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM_1.c ****         do
 503:Generated_Source\PSoC4/SPIM_1.c ****         {
 504:Generated_Source\PSoC4/SPIM_1.c ****             tmpTxBufferRead = SPIM_1_txBufferRead;
 505:Generated_Source\PSoC4/SPIM_1.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/SPIM_1.c ****             {
 507:Generated_Source\PSoC4/SPIM_1.c ****                 tmpTxBufferRead = (SPIM_1_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM_1.c ****             }
 509:Generated_Source\PSoC4/SPIM_1.c ****             else
 510:Generated_Source\PSoC4/SPIM_1.c ****             {
 511:Generated_Source\PSoC4/SPIM_1.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/SPIM_1.c ****             }
 513:Generated_Source\PSoC4/SPIM_1.c **** 
 514:Generated_Source\PSoC4/SPIM_1.c ****         }while(tmpTxBufferRead == SPIM_1_txBufferWrite);
 515:Generated_Source\PSoC4/SPIM_1.c **** 
 516:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 518:Generated_Source\PSoC4/SPIM_1.c **** 
 519:Generated_Source\PSoC4/SPIM_1.c ****         tempStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
 520:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/SPIM_1.c **** 
 522:Generated_Source\PSoC4/SPIM_1.c **** 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 20


 523:Generated_Source\PSoC4/SPIM_1.c ****         if((SPIM_1_txBufferRead == SPIM_1_txBufferWrite) &&
 524:Generated_Source\PSoC4/SPIM_1.c ****            (0u != (SPIM_1_swStatusTx & SPIM_1_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/SPIM_1.c ****         {
 526:Generated_Source\PSoC4/SPIM_1.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM_1.c ****             CY_SET_REG8(SPIM_1_TXDATA_PTR, txData);
 528:Generated_Source\PSoC4/SPIM_1.c ****         }
 529:Generated_Source\PSoC4/SPIM_1.c ****         else
 530:Generated_Source\PSoC4/SPIM_1.c ****         {
 531:Generated_Source\PSoC4/SPIM_1.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/SPIM_1.c ****             SPIM_1_txBufferWrite++;
 533:Generated_Source\PSoC4/SPIM_1.c ****             if(SPIM_1_txBufferWrite >= SPIM_1_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/SPIM_1.c ****             {
 535:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/SPIM_1.c ****             }
 537:Generated_Source\PSoC4/SPIM_1.c **** 
 538:Generated_Source\PSoC4/SPIM_1.c ****             if(SPIM_1_txBufferWrite == SPIM_1_txBufferRead)
 539:Generated_Source\PSoC4/SPIM_1.c ****             {
 540:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_txBufferRead++;
 541:Generated_Source\PSoC4/SPIM_1.c ****                 if(SPIM_1_txBufferRead >= SPIM_1_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/SPIM_1.c ****                 {
 543:Generated_Source\PSoC4/SPIM_1.c ****                     SPIM_1_txBufferRead = 0u;
 544:Generated_Source\PSoC4/SPIM_1.c ****                 }
 545:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_txBufferFull = 1u;
 546:Generated_Source\PSoC4/SPIM_1.c ****             }
 547:Generated_Source\PSoC4/SPIM_1.c **** 
 548:Generated_Source\PSoC4/SPIM_1.c ****             SPIM_1_txBuffer[SPIM_1_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/SPIM_1.c **** 
 550:Generated_Source\PSoC4/SPIM_1.c ****             SPIM_1_TX_STATUS_MASK_REG |= SPIM_1_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/SPIM_1.c ****         }
 552:Generated_Source\PSoC4/SPIM_1.c **** 
 553:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 554:Generated_Source\PSoC4/SPIM_1.c **** 
 555:Generated_Source\PSoC4/SPIM_1.c ****     #else
 556:Generated_Source\PSoC4/SPIM_1.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM_1.c ****         while(0u == (SPIM_1_TX_STATUS_REG & SPIM_1_STS_TX_FIFO_NOT_FULL))
 562              		.loc 1 557 0
 563 000c C046     		nop
 564              	.L33:
 565              		.loc 1 557 0 is_stmt 0 discriminator 1
 566 000e 074B     		ldr	r3, .L34
 567 0010 1B78     		ldrb	r3, [r3]
 568 0012 DBB2     		uxtb	r3, r3
 569 0014 1A00     		movs	r2, r3
 570 0016 0423     		movs	r3, #4
 571 0018 1340     		ands	r3, r2
 572 001a F8D0     		beq	.L33
 558:Generated_Source\PSoC4/SPIM_1.c ****         {
 559:Generated_Source\PSoC4/SPIM_1.c ****         }
 560:Generated_Source\PSoC4/SPIM_1.c **** 
 561:Generated_Source\PSoC4/SPIM_1.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM_1.c ****         CY_SET_REG8(SPIM_1_TXDATA_PTR, txData);
 573              		.loc 1 562 0 is_stmt 1
 574 001c 044A     		ldr	r2, .L34+4
 575 001e FB1D     		adds	r3, r7, #7
 576 0020 1B78     		ldrb	r3, [r3]
 577 0022 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC4/SPIM_1.c **** 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 21


 564:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM_1.c **** }
 578              		.loc 1 565 0
 579 0024 C046     		nop
 580 0026 BD46     		mov	sp, r7
 581 0028 02B0     		add	sp, sp, #8
 582              		@ sp needed
 583 002a 80BD     		pop	{r7, pc}
 584              	.L35:
 585              		.align	2
 586              	.L34:
 587 002c 61000F40 		.word	1074724961
 588 0030 41000F40 		.word	1074724929
 589              		.cfi_endproc
 590              	.LFE14:
 591              		.size	SPIM_1_WriteTxData, .-SPIM_1_WriteTxData
 592              		.section	.text.SPIM_1_ReadRxData,"ax",%progbits
 593              		.align	2
 594              		.global	SPIM_1_ReadRxData
 595              		.code	16
 596              		.thumb_func
 597              		.type	SPIM_1_ReadRxData, %function
 598              	SPIM_1_ReadRxData:
 599              	.LFB15:
 566:Generated_Source\PSoC4/SPIM_1.c **** 
 567:Generated_Source\PSoC4/SPIM_1.c **** 
 568:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadRxData
 570:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM_1.c **** *
 572:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM_1.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM_1.c **** *
 575:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 577:Generated_Source\PSoC4/SPIM_1.c **** *
 578:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 579:Generated_Source\PSoC4/SPIM_1.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM_1.c **** *
 581:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/SPIM_1.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM_1.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM_1.c **** *
 590:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM_1.c **** *
 593:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM_1.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM_1.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM_1.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM_1.c **** *
 598:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 22


 599:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 600:Generated_Source\PSoC4/SPIM_1.c **** *
 601:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM_1.c **** {
 600              		.loc 1 603 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 8
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604 0000 80B5     		push	{r7, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 82B0     		sub	sp, sp, #8
 609              		.cfi_def_cfa_offset 16
 610 0004 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC4/SPIM_1.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/SPIM_1.c **** 
 606:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM_1.c **** 
 608:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 610:Generated_Source\PSoC4/SPIM_1.c **** 
 611:Generated_Source\PSoC4/SPIM_1.c ****         if(SPIM_1_rxBufferRead != SPIM_1_rxBufferWrite)
 612:Generated_Source\PSoC4/SPIM_1.c ****         {
 613:Generated_Source\PSoC4/SPIM_1.c ****             if(0u == SPIM_1_rxBufferFull)
 614:Generated_Source\PSoC4/SPIM_1.c ****             {
 615:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_rxBufferRead++;
 616:Generated_Source\PSoC4/SPIM_1.c ****                 if(SPIM_1_rxBufferRead >= SPIM_1_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/SPIM_1.c ****                 {
 618:Generated_Source\PSoC4/SPIM_1.c ****                     SPIM_1_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/SPIM_1.c ****                 }
 620:Generated_Source\PSoC4/SPIM_1.c ****             }
 621:Generated_Source\PSoC4/SPIM_1.c ****             else
 622:Generated_Source\PSoC4/SPIM_1.c ****             {
 623:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/SPIM_1.c ****             }
 625:Generated_Source\PSoC4/SPIM_1.c ****         }
 626:Generated_Source\PSoC4/SPIM_1.c **** 
 627:Generated_Source\PSoC4/SPIM_1.c ****         rxData = SPIM_1_rxBuffer[SPIM_1_rxBufferRead];
 628:Generated_Source\PSoC4/SPIM_1.c **** 
 629:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 630:Generated_Source\PSoC4/SPIM_1.c **** 
 631:Generated_Source\PSoC4/SPIM_1.c ****     #else
 632:Generated_Source\PSoC4/SPIM_1.c **** 
 633:Generated_Source\PSoC4/SPIM_1.c ****         rxData = CY_GET_REG8(SPIM_1_RXDATA_PTR);
 612              		.loc 1 633 0
 613 0006 054A     		ldr	r2, .L38
 614 0008 FB1D     		adds	r3, r7, #7
 615 000a 1278     		ldrb	r2, [r2]
 616 000c 1A70     		strb	r2, [r3]
 634:Generated_Source\PSoC4/SPIM_1.c **** 
 635:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM_1.c **** 
 637:Generated_Source\PSoC4/SPIM_1.c ****     return(rxData);
 617              		.loc 1 637 0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 23


 618 000e FB1D     		adds	r3, r7, #7
 619 0010 1B78     		ldrb	r3, [r3]
 638:Generated_Source\PSoC4/SPIM_1.c **** }
 620              		.loc 1 638 0
 621 0012 1800     		movs	r0, r3
 622 0014 BD46     		mov	sp, r7
 623 0016 02B0     		add	sp, sp, #8
 624              		@ sp needed
 625 0018 80BD     		pop	{r7, pc}
 626              	.L39:
 627 001a C046     		.align	2
 628              	.L38:
 629 001c 51000F40 		.word	1074724945
 630              		.cfi_endproc
 631              	.LFE15:
 632              		.size	SPIM_1_ReadRxData, .-SPIM_1_ReadRxData
 633              		.section	.text.SPIM_1_GetRxBufferSize,"ax",%progbits
 634              		.align	2
 635              		.global	SPIM_1_GetRxBufferSize
 636              		.code	16
 637              		.thumb_func
 638              		.type	SPIM_1_GetRxBufferSize, %function
 639              	SPIM_1_GetRxBufferSize:
 640              	.LFB16:
 639:Generated_Source\PSoC4/SPIM_1.c **** 
 640:Generated_Source\PSoC4/SPIM_1.c **** 
 641:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM_1.c **** *
 645:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM_1.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/SPIM_1.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/SPIM_1.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM_1.c **** *
 650:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 652:Generated_Source\PSoC4/SPIM_1.c **** *
 653:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 654:Generated_Source\PSoC4/SPIM_1.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM_1.c **** *
 656:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/SPIM_1.c **** *
 662:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM_1.c **** *
 665:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM_1.c **** {
 641              		.loc 1 667 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 8
 644              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 24


 645 0000 80B5     		push	{r7, lr}
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 82B0     		sub	sp, sp, #8
 650              		.cfi_def_cfa_offset 16
 651 0004 00AF     		add	r7, sp, #0
 652              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC4/SPIM_1.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM_1.c **** 
 670:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM_1.c **** 
 672:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 674:Generated_Source\PSoC4/SPIM_1.c **** 
 675:Generated_Source\PSoC4/SPIM_1.c ****         if(SPIM_1_rxBufferRead == SPIM_1_rxBufferWrite)
 676:Generated_Source\PSoC4/SPIM_1.c ****         {
 677:Generated_Source\PSoC4/SPIM_1.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM_1.c ****         }
 679:Generated_Source\PSoC4/SPIM_1.c ****         else if(SPIM_1_rxBufferRead < SPIM_1_rxBufferWrite)
 680:Generated_Source\PSoC4/SPIM_1.c ****         {
 681:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_rxBufferWrite - SPIM_1_rxBufferRead);
 682:Generated_Source\PSoC4/SPIM_1.c ****         }
 683:Generated_Source\PSoC4/SPIM_1.c ****         else
 684:Generated_Source\PSoC4/SPIM_1.c ****         {
 685:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_RX_BUFFER_SIZE - SPIM_1_rxBufferRead) + SPIM_1_rxBufferWrite;
 686:Generated_Source\PSoC4/SPIM_1.c ****         }
 687:Generated_Source\PSoC4/SPIM_1.c **** 
 688:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 689:Generated_Source\PSoC4/SPIM_1.c **** 
 690:Generated_Source\PSoC4/SPIM_1.c ****     #else
 691:Generated_Source\PSoC4/SPIM_1.c **** 
 692:Generated_Source\PSoC4/SPIM_1.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM_1.c ****         size = (0u != (SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 653              		.loc 1 693 0
 654 0006 094B     		ldr	r3, .L44
 655 0008 1B78     		ldrb	r3, [r3]
 656 000a DBB2     		uxtb	r3, r3
 657 000c 1A00     		movs	r2, r3
 658 000e 2023     		movs	r3, #32
 659 0010 1340     		ands	r3, r2
 660 0012 01D0     		beq	.L41
 661              		.loc 1 693 0 is_stmt 0 discriminator 1
 662 0014 0122     		movs	r2, #1
 663 0016 00E0     		b	.L42
 664              	.L41:
 665              		.loc 1 693 0 discriminator 2
 666 0018 0022     		movs	r2, #0
 667              	.L42:
 668              		.loc 1 693 0 discriminator 4
 669 001a FB1D     		adds	r3, r7, #7
 670 001c 1A70     		strb	r2, [r3]
 694:Generated_Source\PSoC4/SPIM_1.c **** 
 695:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM_1.c **** 
 697:Generated_Source\PSoC4/SPIM_1.c ****     return(size);
 671              		.loc 1 697 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 25


 672 001e FB1D     		adds	r3, r7, #7
 673 0020 1B78     		ldrb	r3, [r3]
 698:Generated_Source\PSoC4/SPIM_1.c **** }
 674              		.loc 1 698 0 discriminator 4
 675 0022 1800     		movs	r0, r3
 676 0024 BD46     		mov	sp, r7
 677 0026 02B0     		add	sp, sp, #8
 678              		@ sp needed
 679 0028 80BD     		pop	{r7, pc}
 680              	.L45:
 681 002a C046     		.align	2
 682              	.L44:
 683 002c 60000F40 		.word	1074724960
 684              		.cfi_endproc
 685              	.LFE16:
 686              		.size	SPIM_1_GetRxBufferSize, .-SPIM_1_GetRxBufferSize
 687              		.section	.text.SPIM_1_GetTxBufferSize,"ax",%progbits
 688              		.align	2
 689              		.global	SPIM_1_GetTxBufferSize
 690              		.code	16
 691              		.thumb_func
 692              		.type	SPIM_1_GetTxBufferSize, %function
 693              	SPIM_1_GetTxBufferSize:
 694              	.LFB17:
 699:Generated_Source\PSoC4/SPIM_1.c **** 
 700:Generated_Source\PSoC4/SPIM_1.c **** 
 701:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM_1.c **** *
 705:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM_1.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM_1.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM_1.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM_1.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM_1.c **** *
 711:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 713:Generated_Source\PSoC4/SPIM_1.c **** *
 714:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 715:Generated_Source\PSoC4/SPIM_1.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM_1.c **** *
 717:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM_1.c **** *
 723:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM_1.c **** *
 726:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIM_1.c **** uint8  SPIM_1_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIM_1.c **** {
 695              		.loc 1 728 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 26


 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699 0000 80B5     		push	{r7, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 82B0     		sub	sp, sp, #8
 704              		.cfi_def_cfa_offset 16
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC4/SPIM_1.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM_1.c **** 
 731:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 734:Generated_Source\PSoC4/SPIM_1.c **** 
 735:Generated_Source\PSoC4/SPIM_1.c ****         if(SPIM_1_txBufferRead == SPIM_1_txBufferWrite)
 736:Generated_Source\PSoC4/SPIM_1.c ****         {
 737:Generated_Source\PSoC4/SPIM_1.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM_1.c ****         }
 739:Generated_Source\PSoC4/SPIM_1.c ****         else if(SPIM_1_txBufferRead < SPIM_1_txBufferWrite)
 740:Generated_Source\PSoC4/SPIM_1.c ****         {
 741:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_txBufferWrite - SPIM_1_txBufferRead);
 742:Generated_Source\PSoC4/SPIM_1.c ****         }
 743:Generated_Source\PSoC4/SPIM_1.c ****         else
 744:Generated_Source\PSoC4/SPIM_1.c ****         {
 745:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_TX_BUFFER_SIZE - SPIM_1_txBufferRead) + SPIM_1_txBufferWrite;
 746:Generated_Source\PSoC4/SPIM_1.c ****         }
 747:Generated_Source\PSoC4/SPIM_1.c **** 
 748:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 749:Generated_Source\PSoC4/SPIM_1.c **** 
 750:Generated_Source\PSoC4/SPIM_1.c ****     #else
 751:Generated_Source\PSoC4/SPIM_1.c **** 
 752:Generated_Source\PSoC4/SPIM_1.c ****         size = SPIM_1_TX_STATUS_REG;
 707              		.loc 1 752 0
 708 0006 0F4A     		ldr	r2, .L51
 709 0008 FB1D     		adds	r3, r7, #7
 710 000a 1278     		ldrb	r2, [r2]
 711 000c 1A70     		strb	r2, [r3]
 753:Generated_Source\PSoC4/SPIM_1.c **** 
 754:Generated_Source\PSoC4/SPIM_1.c ****         if(0u != (size & SPIM_1_STS_TX_FIFO_EMPTY))
 712              		.loc 1 754 0
 713 000e FB1D     		adds	r3, r7, #7
 714 0010 1B78     		ldrb	r3, [r3]
 715 0012 0222     		movs	r2, #2
 716 0014 1340     		ands	r3, r2
 717 0016 03D0     		beq	.L47
 755:Generated_Source\PSoC4/SPIM_1.c ****         {
 756:Generated_Source\PSoC4/SPIM_1.c ****             size = 0u;
 718              		.loc 1 756 0
 719 0018 FB1D     		adds	r3, r7, #7
 720 001a 0022     		movs	r2, #0
 721 001c 1A70     		strb	r2, [r3]
 722 001e 0BE0     		b	.L48
 723              	.L47:
 757:Generated_Source\PSoC4/SPIM_1.c ****         }
 758:Generated_Source\PSoC4/SPIM_1.c ****         else if(0u != (size & SPIM_1_STS_TX_FIFO_NOT_FULL))
 724              		.loc 1 758 0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 27


 725 0020 FB1D     		adds	r3, r7, #7
 726 0022 1B78     		ldrb	r3, [r3]
 727 0024 0422     		movs	r2, #4
 728 0026 1340     		ands	r3, r2
 729 0028 03D0     		beq	.L49
 759:Generated_Source\PSoC4/SPIM_1.c ****         {
 760:Generated_Source\PSoC4/SPIM_1.c ****             size = 1u;
 730              		.loc 1 760 0
 731 002a FB1D     		adds	r3, r7, #7
 732 002c 0122     		movs	r2, #1
 733 002e 1A70     		strb	r2, [r3]
 734 0030 02E0     		b	.L48
 735              	.L49:
 761:Generated_Source\PSoC4/SPIM_1.c ****         }
 762:Generated_Source\PSoC4/SPIM_1.c ****         else
 763:Generated_Source\PSoC4/SPIM_1.c ****         {
 764:Generated_Source\PSoC4/SPIM_1.c ****             size = SPIM_1_FIFO_SIZE;
 736              		.loc 1 764 0
 737 0032 FB1D     		adds	r3, r7, #7
 738 0034 0422     		movs	r2, #4
 739 0036 1A70     		strb	r2, [r3]
 740              	.L48:
 765:Generated_Source\PSoC4/SPIM_1.c ****         }
 766:Generated_Source\PSoC4/SPIM_1.c **** 
 767:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM_1.c **** 
 769:Generated_Source\PSoC4/SPIM_1.c ****     return(size);
 741              		.loc 1 769 0
 742 0038 FB1D     		adds	r3, r7, #7
 743 003a 1B78     		ldrb	r3, [r3]
 770:Generated_Source\PSoC4/SPIM_1.c **** }
 744              		.loc 1 770 0
 745 003c 1800     		movs	r0, r3
 746 003e BD46     		mov	sp, r7
 747 0040 02B0     		add	sp, sp, #8
 748              		@ sp needed
 749 0042 80BD     		pop	{r7, pc}
 750              	.L52:
 751              		.align	2
 752              	.L51:
 753 0044 61000F40 		.word	1074724961
 754              		.cfi_endproc
 755              	.LFE17:
 756              		.size	SPIM_1_GetTxBufferSize, .-SPIM_1_GetTxBufferSize
 757              		.section	.text.SPIM_1_ClearRxBuffer,"ax",%progbits
 758              		.align	2
 759              		.global	SPIM_1_ClearRxBuffer
 760              		.code	16
 761              		.thumb_func
 762              		.type	SPIM_1_ClearRxBuffer, %function
 763              	SPIM_1_ClearRxBuffer:
 764              	.LFB18:
 771:Generated_Source\PSoC4/SPIM_1.c **** 
 772:Generated_Source\PSoC4/SPIM_1.c **** 
 773:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 28


 776:Generated_Source\PSoC4/SPIM_1.c **** *
 777:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM_1.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM_1.c **** *
 780:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 781:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 782:Generated_Source\PSoC4/SPIM_1.c **** *
 783:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 784:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 785:Generated_Source\PSoC4/SPIM_1.c **** *
 786:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM_1.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/SPIM_1.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM_1.c **** *
 794:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM_1.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM_1.c **** *
 799:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM_1.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM_1.c **** *
 802:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 804:Generated_Source\PSoC4/SPIM_1.c **** *
 805:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM_1.c **** {
 765              		.loc 1 807 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769 0000 80B5     		push	{r7, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM_1.c ****     while(0u !=(SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
 775              		.loc 1 809 0
 776 0004 01E0     		b	.L54
 777              	.L55:
 810:Generated_Source\PSoC4/SPIM_1.c ****     {
 811:Generated_Source\PSoC4/SPIM_1.c ****         (void) CY_GET_REG8(SPIM_1_RXDATA_PTR);
 778              		.loc 1 811 0
 779 0006 064B     		ldr	r3, .L56
 780 0008 1B78     		ldrb	r3, [r3]
 781              	.L54:
 809:Generated_Source\PSoC4/SPIM_1.c ****     {
 782              		.loc 1 809 0
 783 000a 064B     		ldr	r3, .L56+4
 784 000c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 29


 785 000e DBB2     		uxtb	r3, r3
 786 0010 1A00     		movs	r2, r3
 787 0012 2023     		movs	r3, #32
 788 0014 1340     		ands	r3, r2
 789 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC4/SPIM_1.c ****     }
 813:Generated_Source\PSoC4/SPIM_1.c **** 
 814:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 817:Generated_Source\PSoC4/SPIM_1.c **** 
 818:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/SPIM_1.c **** 
 822:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 823:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM_1.c **** }
 790              		.loc 1 824 0
 791 0018 C046     		nop
 792 001a BD46     		mov	sp, r7
 793              		@ sp needed
 794 001c 80BD     		pop	{r7, pc}
 795              	.L57:
 796 001e C046     		.align	2
 797              	.L56:
 798 0020 51000F40 		.word	1074724945
 799 0024 60000F40 		.word	1074724960
 800              		.cfi_endproc
 801              	.LFE18:
 802              		.size	SPIM_1_ClearRxBuffer, .-SPIM_1_ClearRxBuffer
 803              		.section	.text.SPIM_1_ClearTxBuffer,"ax",%progbits
 804              		.align	2
 805              		.global	SPIM_1_ClearTxBuffer
 806              		.code	16
 807              		.thumb_func
 808              		.type	SPIM_1_ClearTxBuffer, %function
 809              	SPIM_1_ClearTxBuffer:
 810              	.LFB19:
 825:Generated_Source\PSoC4/SPIM_1.c **** 
 826:Generated_Source\PSoC4/SPIM_1.c **** 
 827:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM_1.c **** *
 831:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM_1.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM_1.c **** *
 834:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 836:Generated_Source\PSoC4/SPIM_1.c **** *
 837:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 838:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 839:Generated_Source\PSoC4/SPIM_1.c **** *
 840:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the TX software buffer, modified every function
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 30


 843:Generated_Source\PSoC4/SPIM_1.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM_1.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM_1.c **** *
 848:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM_1.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM_1.c **** *
 853:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM_1.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM_1.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM_1.c **** *
 857:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 859:Generated_Source\PSoC4/SPIM_1.c **** *
 860:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM_1.c **** {
 811              		.loc 1 862 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 90B5     		push	{r4, r7, lr}
 816              		.cfi_def_cfa_offset 12
 817              		.cfi_offset 4, -12
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 83B0     		sub	sp, sp, #12
 821              		.cfi_def_cfa_offset 24
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM_1.c **** 
 865:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 824              		.loc 1 865 0
 825 0006 FC1D     		adds	r4, r7, #7
 826 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 827 000c 0300     		movs	r3, r0
 828 000e 2370     		strb	r3, [r4]
 866:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 829              		.loc 1 867 0
 830 0010 0C4A     		ldr	r2, .L59
 831 0012 0C4B     		ldr	r3, .L59
 832 0014 1B78     		ldrb	r3, [r3]
 833 0016 DBB2     		uxtb	r3, r3
 834 0018 0121     		movs	r1, #1
 835 001a 0B43     		orrs	r3, r1
 836 001c DBB2     		uxtb	r3, r3
 837 001e 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 838              		.loc 1 868 0
 839 0020 084A     		ldr	r2, .L59
 840 0022 084B     		ldr	r3, .L59
 841 0024 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 31


 842 0026 DBB2     		uxtb	r3, r3
 843 0028 0121     		movs	r1, #1
 844 002a 8B43     		bics	r3, r1
 845 002c DBB2     		uxtb	r3, r3
 846 002e 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC4/SPIM_1.c **** 
 870:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM_1.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 874:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 847              		.loc 1 875 0
 848 0030 FB1D     		adds	r3, r7, #7
 849 0032 1B78     		ldrb	r3, [r3]
 850 0034 1800     		movs	r0, r3
 851 0036 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC4/SPIM_1.c **** 
 877:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 880:Generated_Source\PSoC4/SPIM_1.c **** 
 881:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/SPIM_1.c **** 
 885:Generated_Source\PSoC4/SPIM_1.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_1_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/SPIM_1.c **** 
 888:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 889:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM_1.c **** }
 852              		.loc 1 890 0
 853 003a C046     		nop
 854 003c BD46     		mov	sp, r7
 855 003e 03B0     		add	sp, sp, #12
 856              		@ sp needed
 857 0040 90BD     		pop	{r4, r7, pc}
 858              	.L60:
 859 0042 C046     		.align	2
 860              	.L59:
 861 0044 91000F40 		.word	1074725009
 862              		.cfi_endproc
 863              	.LFE19:
 864              		.size	SPIM_1_ClearTxBuffer, .-SPIM_1_ClearTxBuffer
 865              		.section	.text.SPIM_1_PutArray,"ax",%progbits
 866              		.align	2
 867              		.global	SPIM_1_PutArray
 868              		.code	16
 869              		.thumb_func
 870              		.type	SPIM_1_PutArray, %function
 871              	SPIM_1_PutArray:
 872              	.LFB20:
 891:Generated_Source\PSoC4/SPIM_1.c **** 
 892:Generated_Source\PSoC4/SPIM_1.c **** 
 893:Generated_Source\PSoC4/SPIM_1.c **** #if(0u != SPIM_1_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/SPIM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 32


 895:Generated_Source\PSoC4/SPIM_1.c ****     * Function Name: SPIM_1_TxEnable
 896:Generated_Source\PSoC4/SPIM_1.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM_1.c ****     *
 898:Generated_Source\PSoC4/SPIM_1.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM_1.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/SPIM_1.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM_1.c ****     *
 902:Generated_Source\PSoC4/SPIM_1.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM_1.c ****     *
 905:Generated_Source\PSoC4/SPIM_1.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM_1.c ****     *
 908:Generated_Source\PSoC4/SPIM_1.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM_1.c ****     void SPIM_1_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM_1.c ****     {
 911:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_CONTROL_REG |= SPIM_1_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM_1.c ****     }
 913:Generated_Source\PSoC4/SPIM_1.c **** 
 914:Generated_Source\PSoC4/SPIM_1.c **** 
 915:Generated_Source\PSoC4/SPIM_1.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM_1.c ****     * Function Name: SPIM_1_TxDisable
 917:Generated_Source\PSoC4/SPIM_1.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM_1.c ****     *
 919:Generated_Source\PSoC4/SPIM_1.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM_1.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM_1.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM_1.c ****     *
 923:Generated_Source\PSoC4/SPIM_1.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM_1.c ****     *
 926:Generated_Source\PSoC4/SPIM_1.c ****     * Return:
 927:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM_1.c ****     *
 929:Generated_Source\PSoC4/SPIM_1.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM_1.c ****     void SPIM_1_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM_1.c ****     {
 932:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_CONTROL_REG &= ((uint8) ~SPIM_1_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM_1.c ****     }
 934:Generated_Source\PSoC4/SPIM_1.c **** 
 935:Generated_Source\PSoC4/SPIM_1.c **** #endif /* (0u != SPIM_1_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM_1.c **** 
 937:Generated_Source\PSoC4/SPIM_1.c **** 
 938:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_PutArray
 940:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 941:Generated_Source\PSoC4/SPIM_1.c **** *
 942:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM_1.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM_1.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM_1.c **** *
 946:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM_1.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM_1.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM_1.c **** *
 950:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 951:Generated_Source\PSoC4/SPIM_1.c **** *  None.
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 33


 952:Generated_Source\PSoC4/SPIM_1.c **** *
 953:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM_1.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM_1.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM_1.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/SPIM_1.c **** *
 958:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 960:Generated_Source\PSoC4/SPIM_1.c **** *
 961:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM_1.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM_1.c **** {
 873              		.loc 1 964 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 16
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877 0000 80B5     		push	{r7, lr}
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 84B0     		sub	sp, sp, #16
 882              		.cfi_def_cfa_offset 24
 883 0004 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 885 0006 7860     		str	r0, [r7, #4]
 886 0008 0A00     		movs	r2, r1
 887 000a FB1C     		adds	r3, r7, #3
 888 000c 1A70     		strb	r2, [r3]
 965:Generated_Source\PSoC4/SPIM_1.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM_1.c **** 
 967:Generated_Source\PSoC4/SPIM_1.c ****     bufIndex = 0u;
 889              		.loc 1 967 0
 890 000e 0F23     		movs	r3, #15
 891 0010 FB18     		adds	r3, r7, r3
 892 0012 0022     		movs	r2, #0
 893 0014 1A70     		strb	r2, [r3]
 968:Generated_Source\PSoC4/SPIM_1.c **** 
 969:Generated_Source\PSoC4/SPIM_1.c ****     while(byteCount > 0u)
 894              		.loc 1 969 0
 895 0016 14E0     		b	.L62
 896              	.L63:
 970:Generated_Source\PSoC4/SPIM_1.c ****     {
 971:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_WriteTxData(buffer[bufIndex]);
 897              		.loc 1 971 0
 898 0018 0F23     		movs	r3, #15
 899 001a FB18     		adds	r3, r7, r3
 900 001c 1B78     		ldrb	r3, [r3]
 901 001e 7A68     		ldr	r2, [r7, #4]
 902 0020 D318     		adds	r3, r2, r3
 903 0022 1B78     		ldrb	r3, [r3]
 904 0024 1800     		movs	r0, r3
 905 0026 FFF7FEFF 		bl	SPIM_1_WriteTxData
 972:Generated_Source\PSoC4/SPIM_1.c ****         bufIndex++;
 906              		.loc 1 972 0
 907 002a 0F23     		movs	r3, #15
 908 002c FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 34


 909 002e 1A78     		ldrb	r2, [r3]
 910 0030 0F23     		movs	r3, #15
 911 0032 FB18     		adds	r3, r7, r3
 912 0034 0132     		adds	r2, r2, #1
 913 0036 1A70     		strb	r2, [r3]
 973:Generated_Source\PSoC4/SPIM_1.c ****         byteCount--;
 914              		.loc 1 973 0
 915 0038 FB1C     		adds	r3, r7, #3
 916 003a 1A78     		ldrb	r2, [r3]
 917 003c FB1C     		adds	r3, r7, #3
 918 003e 013A     		subs	r2, r2, #1
 919 0040 1A70     		strb	r2, [r3]
 920              	.L62:
 969:Generated_Source\PSoC4/SPIM_1.c ****     {
 921              		.loc 1 969 0
 922 0042 FB1C     		adds	r3, r7, #3
 923 0044 1B78     		ldrb	r3, [r3]
 924 0046 002B     		cmp	r3, #0
 925 0048 E6D1     		bne	.L63
 974:Generated_Source\PSoC4/SPIM_1.c ****     }
 975:Generated_Source\PSoC4/SPIM_1.c **** }
 926              		.loc 1 975 0
 927 004a C046     		nop
 928 004c BD46     		mov	sp, r7
 929 004e 04B0     		add	sp, sp, #16
 930              		@ sp needed
 931 0050 80BD     		pop	{r7, pc}
 932              		.cfi_endproc
 933              	.LFE20:
 934              		.size	SPIM_1_PutArray, .-SPIM_1_PutArray
 935 0052 C046     		.section	.text.SPIM_1_ClearFIFO,"ax",%progbits
 936              		.align	2
 937              		.global	SPIM_1_ClearFIFO
 938              		.code	16
 939              		.thumb_func
 940              		.type	SPIM_1_ClearFIFO, %function
 941              	SPIM_1_ClearFIFO:
 942              	.LFB21:
 976:Generated_Source\PSoC4/SPIM_1.c **** 
 977:Generated_Source\PSoC4/SPIM_1.c **** 
 978:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ClearFIFO
 980:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM_1.c **** *
 982:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM_1.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/SPIM_1.c **** *
 985:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 987:Generated_Source\PSoC4/SPIM_1.c **** *
 988:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 989:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 990:Generated_Source\PSoC4/SPIM_1.c **** *
 991:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 992:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM_1.c **** *
 994:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 35


 995:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM_1.c **** {
 943              		.loc 1 996 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 8
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947 0000 90B5     		push	{r4, r7, lr}
 948              		.cfi_def_cfa_offset 12
 949              		.cfi_offset 4, -12
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 83B0     		sub	sp, sp, #12
 953              		.cfi_def_cfa_offset 24
 954 0004 00AF     		add	r7, sp, #0
 955              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM_1.c **** 
 999:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM_1.c ****     while(0u !=(SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
 956              		.loc 1 1000 0
 957 0006 01E0     		b	.L65
 958              	.L66:
1001:Generated_Source\PSoC4/SPIM_1.c ****     {
1002:Generated_Source\PSoC4/SPIM_1.c ****         (void) CY_GET_REG8(SPIM_1_RXDATA_PTR);
 959              		.loc 1 1002 0
 960 0008 134B     		ldr	r3, .L67
 961 000a 1B78     		ldrb	r3, [r3]
 962              	.L65:
1000:Generated_Source\PSoC4/SPIM_1.c ****     {
 963              		.loc 1 1000 0
 964 000c 134B     		ldr	r3, .L67+4
 965 000e 1B78     		ldrb	r3, [r3]
 966 0010 DBB2     		uxtb	r3, r3
 967 0012 1A00     		movs	r2, r3
 968 0014 2023     		movs	r3, #32
 969 0016 1340     		ands	r3, r2
 970 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC4/SPIM_1.c ****     }
1004:Generated_Source\PSoC4/SPIM_1.c **** 
1005:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 971              		.loc 1 1005 0
 972 001a FC1D     		adds	r4, r7, #7
 973 001c FFF7FEFF 		bl	CyEnterCriticalSection
 974 0020 0300     		movs	r3, r0
 975 0022 2370     		strb	r3, [r4]
1006:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 976              		.loc 1 1007 0
 977 0024 0E4A     		ldr	r2, .L67+8
 978 0026 0E4B     		ldr	r3, .L67+8
 979 0028 1B78     		ldrb	r3, [r3]
 980 002a DBB2     		uxtb	r3, r3
 981 002c 0121     		movs	r1, #1
 982 002e 0B43     		orrs	r3, r1
 983 0030 DBB2     		uxtb	r3, r3
 984 0032 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 36


 985              		.loc 1 1008 0
 986 0034 0A4A     		ldr	r2, .L67+8
 987 0036 0A4B     		ldr	r3, .L67+8
 988 0038 1B78     		ldrb	r3, [r3]
 989 003a DBB2     		uxtb	r3, r3
 990 003c 0121     		movs	r1, #1
 991 003e 8B43     		bics	r3, r1
 992 0040 DBB2     		uxtb	r3, r3
 993 0042 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/SPIM_1.c **** 
1010:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM_1.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 994              		.loc 1 1015 0
 995 0044 FB1D     		adds	r3, r7, #7
 996 0046 1B78     		ldrb	r3, [r3]
 997 0048 1800     		movs	r0, r3
 998 004a FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC4/SPIM_1.c **** }
 999              		.loc 1 1016 0
 1000 004e C046     		nop
 1001 0050 BD46     		mov	sp, r7
 1002 0052 03B0     		add	sp, sp, #12
 1003              		@ sp needed
 1004 0054 90BD     		pop	{r4, r7, pc}
 1005              	.L68:
 1006 0056 C046     		.align	2
 1007              	.L67:
 1008 0058 51000F40 		.word	1074724945
 1009 005c 60000F40 		.word	1074724960
 1010 0060 91000F40 		.word	1074725009
 1011              		.cfi_endproc
 1012              	.LFE21:
 1013              		.size	SPIM_1_ClearFIFO, .-SPIM_1_ClearFIFO
 1014              		.section	.text.SPIM_1_EnableInt,"ax",%progbits
 1015              		.align	2
 1016              		.global	SPIM_1_EnableInt
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	SPIM_1_EnableInt, %function
 1020              	SPIM_1_EnableInt:
 1021              	.LFB22:
1017:Generated_Source\PSoC4/SPIM_1.c **** 
1018:Generated_Source\PSoC4/SPIM_1.c **** 
1019:Generated_Source\PSoC4/SPIM_1.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM_1.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM_1.c **** */
1022:Generated_Source\PSoC4/SPIM_1.c **** 
1023:Generated_Source\PSoC4/SPIM_1.c **** 
1024:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_EnableInt
1026:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM_1.c **** *
1028:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 37


1029:Generated_Source\PSoC4/SPIM_1.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM_1.c **** *
1031:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1033:Generated_Source\PSoC4/SPIM_1.c **** *
1034:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1035:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1036:Generated_Source\PSoC4/SPIM_1.c **** *
1037:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1038:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM_1.c **** *
1040:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM_1.c **** {
 1022              		.loc 1 1042 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableRxInt();
 1032              		.loc 1 1043 0
 1033 0004 FFF7FEFF 		bl	SPIM_1_EnableRxInt
1044:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableTxInt();
 1034              		.loc 1 1044 0
 1035 0008 FFF7FEFF 		bl	SPIM_1_EnableTxInt
1045:Generated_Source\PSoC4/SPIM_1.c **** }
 1036              		.loc 1 1045 0
 1037 000c C046     		nop
 1038 000e BD46     		mov	sp, r7
 1039              		@ sp needed
 1040 0010 80BD     		pop	{r7, pc}
 1041              		.cfi_endproc
 1042              	.LFE22:
 1043              		.size	SPIM_1_EnableInt, .-SPIM_1_EnableInt
 1044 0012 C046     		.section	.text.SPIM_1_DisableInt,"ax",%progbits
 1045              		.align	2
 1046              		.global	SPIM_1_DisableInt
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	SPIM_1_DisableInt, %function
 1050              	SPIM_1_DisableInt:
 1051              	.LFB23:
1046:Generated_Source\PSoC4/SPIM_1.c **** 
1047:Generated_Source\PSoC4/SPIM_1.c **** 
1048:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_DisableInt
1050:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM_1.c **** *
1052:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM_1.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM_1.c **** *
1055:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 38


1056:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1057:Generated_Source\PSoC4/SPIM_1.c **** *
1058:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1059:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1060:Generated_Source\PSoC4/SPIM_1.c **** *
1061:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM_1.c **** *
1064:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM_1.c **** {
 1052              		.loc 1 1066 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableTxInt();
 1062              		.loc 1 1067 0
 1063 0004 FFF7FEFF 		bl	SPIM_1_DisableTxInt
1068:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableRxInt();
 1064              		.loc 1 1068 0
 1065 0008 FFF7FEFF 		bl	SPIM_1_DisableRxInt
1069:Generated_Source\PSoC4/SPIM_1.c **** }
 1066              		.loc 1 1069 0
 1067 000c C046     		nop
 1068 000e BD46     		mov	sp, r7
 1069              		@ sp needed
 1070 0010 80BD     		pop	{r7, pc}
 1071              		.cfi_endproc
 1072              	.LFE23:
 1073              		.size	SPIM_1_DisableInt, .-SPIM_1_DisableInt
 1074 0012 C046     		.section	.text.SPIM_1_SetInterruptMode,"ax",%progbits
 1075              		.align	2
 1076              		.global	SPIM_1_SetInterruptMode
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	SPIM_1_SetInterruptMode, %function
 1080              	SPIM_1_SetInterruptMode:
 1081              	.LFB24:
1070:Generated_Source\PSoC4/SPIM_1.c **** 
1071:Generated_Source\PSoC4/SPIM_1.c **** 
1072:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM_1.c **** *
1076:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM_1.c **** *
1079:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/SPIM_1.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM_1.c **** *
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 39


1083:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1084:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1085:Generated_Source\PSoC4/SPIM_1.c **** *
1086:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/SPIM_1.c **** *
1089:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM_1.c **** {
 1082              		.loc 1 1091 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 8
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 82B0     		sub	sp, sp, #8
 1091              		.cfi_def_cfa_offset 16
 1092 0004 00AF     		add	r7, sp, #0
 1093              		.cfi_def_cfa_register 7
 1094 0006 0200     		movs	r2, r0
 1095 0008 FB1D     		adds	r3, r7, #7
 1096 000a 1A70     		strb	r2, [r3]
1092:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_1_STS_SPI_IDLE));
 1097              		.loc 1 1092 0
 1098 000c 074A     		ldr	r2, .L72
 1099 000e FB1D     		adds	r3, r7, #7
 1100 0010 1B78     		ldrb	r3, [r3]
 1101 0012 1021     		movs	r1, #16
 1102 0014 8B43     		bics	r3, r1
 1103 0016 DBB2     		uxtb	r3, r3
 1104 0018 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG  =  intSrc;
 1105              		.loc 1 1093 0
 1106 001a 054A     		ldr	r2, .L72+4
 1107 001c FB1D     		adds	r3, r7, #7
 1108 001e 1B78     		ldrb	r3, [r3]
 1109 0020 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC4/SPIM_1.c **** }
 1110              		.loc 1 1094 0
 1111 0022 C046     		nop
 1112 0024 BD46     		mov	sp, r7
 1113 0026 02B0     		add	sp, sp, #8
 1114              		@ sp needed
 1115 0028 80BD     		pop	{r7, pc}
 1116              	.L73:
 1117 002a C046     		.align	2
 1118              	.L72:
 1119 002c 81000F40 		.word	1074724993
 1120 0030 80000F40 		.word	1074724992
 1121              		.cfi_endproc
 1122              	.LFE24:
 1123              		.size	SPIM_1_SetInterruptMode, .-SPIM_1_SetInterruptMode
 1124              		.section	.text.SPIM_1_ReadStatus,"ax",%progbits
 1125              		.align	2
 1126              		.global	SPIM_1_ReadStatus
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 40


 1127              		.code	16
 1128              		.thumb_func
 1129              		.type	SPIM_1_ReadStatus, %function
 1130              	SPIM_1_ReadStatus:
 1131              	.LFB25:
1095:Generated_Source\PSoC4/SPIM_1.c **** 
1096:Generated_Source\PSoC4/SPIM_1.c **** 
1097:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadStatus
1099:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM_1.c **** *
1101:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM_1.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM_1.c **** *
1104:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1106:Generated_Source\PSoC4/SPIM_1.c **** *
1107:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1108:Generated_Source\PSoC4/SPIM_1.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM_1.c **** *
1110:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM_1.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM_1.c **** *
1114:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM_1.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM_1.c **** *
1118:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM_1.c **** *
1121:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM_1.c **** *  No.
1123:Generated_Source\PSoC4/SPIM_1.c **** *
1124:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM_1.c **** {
 1132              		.loc 1 1126 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 8
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136 0000 80B5     		push	{r7, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 82B0     		sub	sp, sp, #8
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC4/SPIM_1.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM_1.c **** 
1129:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED || SPIM_1_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM_1.c **** 
1131:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableInt();
1132:Generated_Source\PSoC4/SPIM_1.c **** 
1133:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus  = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
1134:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus |= SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 41


1135:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus &= ((uint8) ~SPIM_1_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/SPIM_1.c **** 
1137:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusTx = 0u;
1138:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusRx = 0u;
1139:Generated_Source\PSoC4/SPIM_1.c **** 
1140:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableInt();
1141:Generated_Source\PSoC4/SPIM_1.c **** 
1142:Generated_Source\PSoC4/SPIM_1.c ****     #else
1143:Generated_Source\PSoC4/SPIM_1.c **** 
1144:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus  = SPIM_1_RX_STATUS_REG;
 1144              		.loc 1 1144 0
 1145 0006 0C4A     		ldr	r2, .L76
 1146 0008 FB1D     		adds	r3, r7, #7
 1147 000a 1278     		ldrb	r2, [r2]
 1148 000c 1A70     		strb	r2, [r3]
1145:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus |= SPIM_1_TX_STATUS_REG;
 1149              		.loc 1 1145 0
 1150 000e 0B4B     		ldr	r3, .L76+4
 1151 0010 1B78     		ldrb	r3, [r3]
 1152 0012 D9B2     		uxtb	r1, r3
 1153 0014 FB1D     		adds	r3, r7, #7
 1154 0016 FA1D     		adds	r2, r7, #7
 1155 0018 1278     		ldrb	r2, [r2]
 1156 001a 0A43     		orrs	r2, r1
 1157 001c 1A70     		strb	r2, [r3]
1146:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus &= ((uint8) ~SPIM_1_STS_SPI_IDLE);
 1158              		.loc 1 1146 0
 1159 001e FB1D     		adds	r3, r7, #7
 1160 0020 FA1D     		adds	r2, r7, #7
 1161 0022 1278     		ldrb	r2, [r2]
 1162 0024 1021     		movs	r1, #16
 1163 0026 8A43     		bics	r2, r1
 1164 0028 1A70     		strb	r2, [r3]
1147:Generated_Source\PSoC4/SPIM_1.c **** 
1148:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED || SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM_1.c **** 
1150:Generated_Source\PSoC4/SPIM_1.c ****     return(tmpStatus);
 1165              		.loc 1 1150 0
 1166 002a FB1D     		adds	r3, r7, #7
 1167 002c 1B78     		ldrb	r3, [r3]
1151:Generated_Source\PSoC4/SPIM_1.c **** }
 1168              		.loc 1 1151 0
 1169 002e 1800     		movs	r0, r3
 1170 0030 BD46     		mov	sp, r7
 1171 0032 02B0     		add	sp, sp, #8
 1172              		@ sp needed
 1173 0034 80BD     		pop	{r7, pc}
 1174              	.L77:
 1175 0036 C046     		.align	2
 1176              	.L76:
 1177 0038 60000F40 		.word	1074724960
 1178 003c 61000F40 		.word	1074724961
 1179              		.cfi_endproc
 1180              	.LFE25:
 1181              		.size	SPIM_1_ReadStatus, .-SPIM_1_ReadStatus
 1182              		.text
 1183              	.Letext0:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 42


 1184              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1185              		.section	.debug_info,"",%progbits
 1186              	.Ldebug_info0:
 1187 0000 F0030000 		.4byte	0x3f0
 1188 0004 0400     		.2byte	0x4
 1189 0006 00000000 		.4byte	.Ldebug_abbrev0
 1190 000a 04       		.byte	0x4
 1191 000b 01       		.uleb128 0x1
 1192 000c 57010000 		.4byte	.LASF52
 1193 0010 0C       		.byte	0xc
 1194 0011 57030000 		.4byte	.LASF53
 1195 0015 2B000000 		.4byte	.LASF54
 1196 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1197 001d 00000000 		.4byte	0
 1198 0021 00000000 		.4byte	.Ldebug_line0
 1199 0025 02       		.uleb128 0x2
 1200 0026 01       		.byte	0x1
 1201 0027 06       		.byte	0x6
 1202 0028 BA030000 		.4byte	.LASF0
 1203 002c 02       		.uleb128 0x2
 1204 002d 01       		.byte	0x1
 1205 002e 08       		.byte	0x8
 1206 002f 07020000 		.4byte	.LASF1
 1207 0033 02       		.uleb128 0x2
 1208 0034 02       		.byte	0x2
 1209 0035 05       		.byte	0x5
 1210 0036 31030000 		.4byte	.LASF2
 1211 003a 02       		.uleb128 0x2
 1212 003b 02       		.byte	0x2
 1213 003c 07       		.byte	0x7
 1214 003d 92000000 		.4byte	.LASF3
 1215 0041 02       		.uleb128 0x2
 1216 0042 04       		.byte	0x4
 1217 0043 05       		.byte	0x5
 1218 0044 89030000 		.4byte	.LASF4
 1219 0048 02       		.uleb128 0x2
 1220 0049 04       		.byte	0x4
 1221 004a 07       		.byte	0x7
 1222 004b 3F010000 		.4byte	.LASF5
 1223 004f 02       		.uleb128 0x2
 1224 0050 08       		.byte	0x8
 1225 0051 05       		.byte	0x5
 1226 0052 FA020000 		.4byte	.LASF6
 1227 0056 02       		.uleb128 0x2
 1228 0057 08       		.byte	0x8
 1229 0058 07       		.byte	0x7
 1230 0059 8E020000 		.4byte	.LASF7
 1231 005d 03       		.uleb128 0x3
 1232 005e 04       		.byte	0x4
 1233 005f 05       		.byte	0x5
 1234 0060 696E7400 		.ascii	"int\000"
 1235 0064 02       		.uleb128 0x2
 1236 0065 04       		.byte	0x4
 1237 0066 07       		.byte	0x7
 1238 0067 A5000000 		.4byte	.LASF8
 1239 006b 04       		.uleb128 0x4
 1240 006c 51010000 		.4byte	.LASF12
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 43


 1241 0070 02       		.byte	0x2
 1242 0071 D201     		.2byte	0x1d2
 1243 0073 2C000000 		.4byte	0x2c
 1244 0077 02       		.uleb128 0x2
 1245 0078 04       		.byte	0x4
 1246 0079 04       		.byte	0x4
 1247 007a 08030000 		.4byte	.LASF9
 1248 007e 02       		.uleb128 0x2
 1249 007f 08       		.byte	0x8
 1250 0080 04       		.byte	0x4
 1251 0081 27020000 		.4byte	.LASF10
 1252 0085 02       		.uleb128 0x2
 1253 0086 01       		.byte	0x1
 1254 0087 08       		.byte	0x8
 1255 0088 0E030000 		.4byte	.LASF11
 1256 008c 04       		.uleb128 0x4
 1257 008d 3A010000 		.4byte	.LASF13
 1258 0091 02       		.byte	0x2
 1259 0092 7C02     		.2byte	0x27c
 1260 0094 98000000 		.4byte	0x98
 1261 0098 05       		.uleb128 0x5
 1262 0099 6B000000 		.4byte	0x6b
 1263 009d 02       		.uleb128 0x2
 1264 009e 08       		.byte	0x8
 1265 009f 04       		.byte	0x4
 1266 00a0 9C030000 		.4byte	.LASF14
 1267 00a4 02       		.uleb128 0x2
 1268 00a5 04       		.byte	0x4
 1269 00a6 07       		.byte	0x7
 1270 00a7 F1020000 		.4byte	.LASF15
 1271 00ab 06       		.uleb128 0x6
 1272 00ac 46020000 		.4byte	.LASF16
 1273 00b0 01       		.byte	0x1
 1274 00b1 3F       		.byte	0x3f
 1275 00b2 00000000 		.4byte	.LFB2
 1276 00b6 34000000 		.4byte	.LFE2-.LFB2
 1277 00ba 01       		.uleb128 0x1
 1278 00bb 9C       		.byte	0x9c
 1279 00bc 07       		.uleb128 0x7
 1280 00bd 18010000 		.4byte	.LASF18
 1281 00c1 01       		.byte	0x1
 1282 00c2 78       		.byte	0x78
 1283 00c3 00000000 		.4byte	.LFB3
 1284 00c7 6C000000 		.4byte	.LFE3-.LFB3
 1285 00cb 01       		.uleb128 0x1
 1286 00cc 9C       		.byte	0x9c
 1287 00cd E0000000 		.4byte	0xe0
 1288 00d1 08       		.uleb128 0x8
 1289 00d2 F6010000 		.4byte	.LASF20
 1290 00d6 01       		.byte	0x1
 1291 00d7 7A       		.byte	0x7a
 1292 00d8 6B000000 		.4byte	0x6b
 1293 00dc 02       		.uleb128 0x2
 1294 00dd 91       		.byte	0x91
 1295 00de 6F       		.sleb128 -17
 1296 00df 00       		.byte	0
 1297 00e0 06       		.uleb128 0x6
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 44


 1298 00e1 17000000 		.4byte	.LASF17
 1299 00e5 01       		.byte	0x1
 1300 00e6 A3       		.byte	0xa3
 1301 00e7 00000000 		.4byte	.LFB4
 1302 00eb 24000000 		.4byte	.LFE4-.LFB4
 1303 00ef 01       		.uleb128 0x1
 1304 00f0 9C       		.byte	0x9c
 1305 00f1 07       		.uleb128 0x7
 1306 00f2 13030000 		.4byte	.LASF19
 1307 00f6 01       		.byte	0x1
 1308 00f7 C0       		.byte	0xc0
 1309 00f8 00000000 		.4byte	.LFB5
 1310 00fc 58000000 		.4byte	.LFE5-.LFB5
 1311 0100 01       		.uleb128 0x1
 1312 0101 9C       		.byte	0x9c
 1313 0102 15010000 		.4byte	0x115
 1314 0106 08       		.uleb128 0x8
 1315 0107 F6010000 		.4byte	.LASF20
 1316 010b 01       		.byte	0x1
 1317 010c C2       		.byte	0xc2
 1318 010d 6B000000 		.4byte	0x6b
 1319 0111 02       		.uleb128 0x2
 1320 0112 91       		.byte	0x91
 1321 0113 6F       		.sleb128 -17
 1322 0114 00       		.byte	0
 1323 0115 09       		.uleb128 0x9
 1324 0116 6A000000 		.4byte	.LASF21
 1325 011a 01       		.byte	0x1
 1326 011b E3       		.byte	0xe3
 1327 011c 00000000 		.4byte	.LFB6
 1328 0120 0A000000 		.4byte	.LFE6-.LFB6
 1329 0124 01       		.uleb128 0x1
 1330 0125 9C       		.byte	0x9c
 1331 0126 09       		.uleb128 0x9
 1332 0127 AF020000 		.4byte	.LASF22
 1333 012b 01       		.byte	0x1
 1334 012c FC       		.byte	0xfc
 1335 012d 00000000 		.4byte	.LFB7
 1336 0131 0A000000 		.4byte	.LFE7-.LFB7
 1337 0135 01       		.uleb128 0x1
 1338 0136 9C       		.byte	0x9c
 1339 0137 0A       		.uleb128 0xa
 1340 0138 CB020000 		.4byte	.LASF23
 1341 013c 01       		.byte	0x1
 1342 013d 1501     		.2byte	0x115
 1343 013f 00000000 		.4byte	.LFB8
 1344 0143 0A000000 		.4byte	.LFE8-.LFB8
 1345 0147 01       		.uleb128 0x1
 1346 0148 9C       		.byte	0x9c
 1347 0149 0A       		.uleb128 0xa
 1348 014a D9030000 		.4byte	.LASF24
 1349 014e 01       		.byte	0x1
 1350 014f 2E01     		.2byte	0x12e
 1351 0151 00000000 		.4byte	.LFB9
 1352 0155 0A000000 		.4byte	.LFE9-.LFB9
 1353 0159 01       		.uleb128 0x1
 1354 015a 9C       		.byte	0x9c
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 45


 1355 015b 0B       		.uleb128 0xb
 1356 015c D0000000 		.4byte	.LASF25
 1357 0160 01       		.byte	0x1
 1358 0161 4801     		.2byte	0x148
 1359 0163 00000000 		.4byte	.LFB10
 1360 0167 20000000 		.4byte	.LFE10-.LFB10
 1361 016b 01       		.uleb128 0x1
 1362 016c 9C       		.byte	0x9c
 1363 016d 81010000 		.4byte	0x181
 1364 0171 0C       		.uleb128 0xc
 1365 0172 2E020000 		.4byte	.LASF27
 1366 0176 01       		.byte	0x1
 1367 0177 4801     		.2byte	0x148
 1368 0179 6B000000 		.4byte	0x6b
 1369 017d 02       		.uleb128 0x2
 1370 017e 91       		.byte	0x91
 1371 017f 77       		.sleb128 -9
 1372 0180 00       		.byte	0
 1373 0181 0B       		.uleb128 0xb
 1374 0182 FE000000 		.4byte	.LASF26
 1375 0186 01       		.byte	0x1
 1376 0187 6001     		.2byte	0x160
 1377 0189 00000000 		.4byte	.LFB11
 1378 018d 20000000 		.4byte	.LFE11-.LFB11
 1379 0191 01       		.uleb128 0x1
 1380 0192 9C       		.byte	0x9c
 1381 0193 A7010000 		.4byte	0x1a7
 1382 0197 0C       		.uleb128 0xc
 1383 0198 2E020000 		.4byte	.LASF27
 1384 019c 01       		.byte	0x1
 1385 019d 6001     		.2byte	0x160
 1386 019f 6B000000 		.4byte	0x6b
 1387 01a3 02       		.uleb128 0x2
 1388 01a4 91       		.byte	0x91
 1389 01a5 77       		.sleb128 -9
 1390 01a6 00       		.byte	0
 1391 01a7 0D       		.uleb128 0xd
 1392 01a8 EA000000 		.4byte	.LASF29
 1393 01ac 01       		.byte	0x1
 1394 01ad 8201     		.2byte	0x182
 1395 01af 6B000000 		.4byte	0x6b
 1396 01b3 00000000 		.4byte	.LFB12
 1397 01b7 20000000 		.4byte	.LFE12-.LFB12
 1398 01bb 01       		.uleb128 0x1
 1399 01bc 9C       		.byte	0x9c
 1400 01bd D1010000 		.4byte	0x1d1
 1401 01c1 0E       		.uleb128 0xe
 1402 01c2 92030000 		.4byte	.LASF28
 1403 01c6 01       		.byte	0x1
 1404 01c7 8401     		.2byte	0x184
 1405 01c9 6B000000 		.4byte	0x6b
 1406 01cd 02       		.uleb128 0x2
 1407 01ce 91       		.byte	0x91
 1408 01cf 77       		.sleb128 -9
 1409 01d0 00       		.byte	0
 1410 01d1 0D       		.uleb128 0xd
 1411 01d2 7A020000 		.4byte	.LASF30
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 46


 1412 01d6 01       		.byte	0x1
 1413 01d7 B501     		.2byte	0x1b5
 1414 01d9 6B000000 		.4byte	0x6b
 1415 01dd 00000000 		.4byte	.LFB13
 1416 01e1 20000000 		.4byte	.LFE13-.LFB13
 1417 01e5 01       		.uleb128 0x1
 1418 01e6 9C       		.byte	0x9c
 1419 01e7 FB010000 		.4byte	0x1fb
 1420 01eb 0E       		.uleb128 0xe
 1421 01ec 92030000 		.4byte	.LASF28
 1422 01f0 01       		.byte	0x1
 1423 01f1 B701     		.2byte	0x1b7
 1424 01f3 6B000000 		.4byte	0x6b
 1425 01f7 02       		.uleb128 0x2
 1426 01f8 91       		.byte	0x91
 1427 01f9 77       		.sleb128 -9
 1428 01fa 00       		.byte	0
 1429 01fb 0B       		.uleb128 0xb
 1430 01fc C6030000 		.4byte	.LASF31
 1431 0200 01       		.byte	0x1
 1432 0201 EE01     		.2byte	0x1ee
 1433 0203 00000000 		.4byte	.LFB14
 1434 0207 34000000 		.4byte	.LFE14-.LFB14
 1435 020b 01       		.uleb128 0x1
 1436 020c 9C       		.byte	0x9c
 1437 020d 21020000 		.4byte	0x221
 1438 0211 0C       		.uleb128 0xc
 1439 0212 B2000000 		.4byte	.LASF32
 1440 0216 01       		.byte	0x1
 1441 0217 EE01     		.2byte	0x1ee
 1442 0219 6B000000 		.4byte	0x6b
 1443 021d 02       		.uleb128 0x2
 1444 021e 91       		.byte	0x91
 1445 021f 77       		.sleb128 -9
 1446 0220 00       		.byte	0
 1447 0221 0D       		.uleb128 0xd
 1448 0222 1F030000 		.4byte	.LASF33
 1449 0226 01       		.byte	0x1
 1450 0227 5A02     		.2byte	0x25a
 1451 0229 6B000000 		.4byte	0x6b
 1452 022d 00000000 		.4byte	.LFB15
 1453 0231 20000000 		.4byte	.LFE15-.LFB15
 1454 0235 01       		.uleb128 0x1
 1455 0236 9C       		.byte	0x9c
 1456 0237 4B020000 		.4byte	0x24b
 1457 023b 0E       		.uleb128 0xe
 1458 023c 24000000 		.4byte	.LASF34
 1459 0240 01       		.byte	0x1
 1460 0241 5C02     		.2byte	0x25c
 1461 0243 6B000000 		.4byte	0x6b
 1462 0247 02       		.uleb128 0x2
 1463 0248 91       		.byte	0x91
 1464 0249 77       		.sleb128 -9
 1465 024a 00       		.byte	0
 1466 024b 0D       		.uleb128 0xd
 1467 024c B9000000 		.4byte	.LASF35
 1468 0250 01       		.byte	0x1
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 47


 1469 0251 9A02     		.2byte	0x29a
 1470 0253 6B000000 		.4byte	0x6b
 1471 0257 00000000 		.4byte	.LFB16
 1472 025b 30000000 		.4byte	.LFE16-.LFB16
 1473 025f 01       		.uleb128 0x1
 1474 0260 9C       		.byte	0x9c
 1475 0261 75020000 		.4byte	0x275
 1476 0265 0E       		.uleb128 0xe
 1477 0266 35010000 		.4byte	.LASF36
 1478 026a 01       		.byte	0x1
 1479 026b 9C02     		.2byte	0x29c
 1480 026d 6B000000 		.4byte	0x6b
 1481 0271 02       		.uleb128 0x2
 1482 0272 91       		.byte	0x91
 1483 0273 77       		.sleb128 -9
 1484 0274 00       		.byte	0
 1485 0275 0D       		.uleb128 0xd
 1486 0276 00000000 		.4byte	.LASF37
 1487 027a 01       		.byte	0x1
 1488 027b D702     		.2byte	0x2d7
 1489 027d 6B000000 		.4byte	0x6b
 1490 0281 00000000 		.4byte	.LFB17
 1491 0285 48000000 		.4byte	.LFE17-.LFB17
 1492 0289 01       		.uleb128 0x1
 1493 028a 9C       		.byte	0x9c
 1494 028b 9F020000 		.4byte	0x29f
 1495 028f 0E       		.uleb128 0xe
 1496 0290 35010000 		.4byte	.LASF36
 1497 0294 01       		.byte	0x1
 1498 0295 D902     		.2byte	0x2d9
 1499 0297 6B000000 		.4byte	0x6b
 1500 029b 02       		.uleb128 0x2
 1501 029c 91       		.byte	0x91
 1502 029d 77       		.sleb128 -9
 1503 029e 00       		.byte	0
 1504 029f 0A       		.uleb128 0xa
 1505 02a0 3B030000 		.4byte	.LASF38
 1506 02a4 01       		.byte	0x1
 1507 02a5 2603     		.2byte	0x326
 1508 02a7 00000000 		.4byte	.LFB18
 1509 02ab 28000000 		.4byte	.LFE18-.LFB18
 1510 02af 01       		.uleb128 0x1
 1511 02b0 9C       		.byte	0x9c
 1512 02b1 0F       		.uleb128 0xf
 1513 02b2 7D000000 		.4byte	.LASF39
 1514 02b6 01       		.byte	0x1
 1515 02b7 5D03     		.2byte	0x35d
 1516 02b9 00000000 		.4byte	.LFB19
 1517 02bd 48000000 		.4byte	.LFE19-.LFB19
 1518 02c1 01       		.uleb128 0x1
 1519 02c2 9C       		.byte	0x9c
 1520 02c3 D7020000 		.4byte	0x2d7
 1521 02c7 0E       		.uleb128 0xe
 1522 02c8 F6010000 		.4byte	.LASF20
 1523 02cc 01       		.byte	0x1
 1524 02cd 5F03     		.2byte	0x35f
 1525 02cf 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 48


 1526 02d3 02       		.uleb128 0x2
 1527 02d4 91       		.byte	0x91
 1528 02d5 6F       		.sleb128 -17
 1529 02d6 00       		.byte	0
 1530 02d7 0F       		.uleb128 0xf
 1531 02d8 52020000 		.4byte	.LASF40
 1532 02dc 01       		.byte	0x1
 1533 02dd C203     		.2byte	0x3c2
 1534 02df 00000000 		.4byte	.LFB20
 1535 02e3 52000000 		.4byte	.LFE20-.LFB20
 1536 02e7 01       		.uleb128 0x1
 1537 02e8 9C       		.byte	0x9c
 1538 02e9 1B030000 		.4byte	0x31b
 1539 02ed 0C       		.uleb128 0xc
 1540 02ee 50030000 		.4byte	.LASF41
 1541 02f2 01       		.byte	0x1
 1542 02f3 C203     		.2byte	0x3c2
 1543 02f5 1B030000 		.4byte	0x31b
 1544 02f9 02       		.uleb128 0x2
 1545 02fa 91       		.byte	0x91
 1546 02fb 6C       		.sleb128 -20
 1547 02fc 0C       		.uleb128 0xc
 1548 02fd A5020000 		.4byte	.LASF42
 1549 0301 01       		.byte	0x1
 1550 0302 C203     		.2byte	0x3c2
 1551 0304 6B000000 		.4byte	0x6b
 1552 0308 02       		.uleb128 0x2
 1553 0309 91       		.byte	0x91
 1554 030a 6B       		.sleb128 -21
 1555 030b 0E       		.uleb128 0xe
 1556 030c C2020000 		.4byte	.LASF43
 1557 0310 01       		.byte	0x1
 1558 0311 C503     		.2byte	0x3c5
 1559 0313 6B000000 		.4byte	0x6b
 1560 0317 02       		.uleb128 0x2
 1561 0318 91       		.byte	0x91
 1562 0319 77       		.sleb128 -9
 1563 031a 00       		.byte	0
 1564 031b 10       		.uleb128 0x10
 1565 031c 04       		.byte	0x4
 1566 031d 21030000 		.4byte	0x321
 1567 0321 11       		.uleb128 0x11
 1568 0322 6B000000 		.4byte	0x6b
 1569 0326 0F       		.uleb128 0xf
 1570 0327 35020000 		.4byte	.LASF44
 1571 032b 01       		.byte	0x1
 1572 032c E303     		.2byte	0x3e3
 1573 032e 00000000 		.4byte	.LFB21
 1574 0332 64000000 		.4byte	.LFE21-.LFB21
 1575 0336 01       		.uleb128 0x1
 1576 0337 9C       		.byte	0x9c
 1577 0338 4C030000 		.4byte	0x34c
 1578 033c 0E       		.uleb128 0xe
 1579 033d F6010000 		.4byte	.LASF20
 1580 0341 01       		.byte	0x1
 1581 0342 E503     		.2byte	0x3e5
 1582 0344 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 49


 1583 0348 02       		.uleb128 0x2
 1584 0349 91       		.byte	0x91
 1585 034a 6F       		.sleb128 -17
 1586 034b 00       		.byte	0
 1587 034c 12       		.uleb128 0x12
 1588 034d E5010000 		.4byte	.LASF45
 1589 0351 01       		.byte	0x1
 1590 0352 1104     		.2byte	0x411
 1591 0354 00000000 		.4byte	.LFB22
 1592 0358 12000000 		.4byte	.LFE22-.LFB22
 1593 035c 01       		.uleb128 0x1
 1594 035d 9C       		.byte	0x9c
 1595 035e 12       		.uleb128 0x12
 1596 035f 15020000 		.4byte	.LASF46
 1597 0363 01       		.byte	0x1
 1598 0364 2904     		.2byte	0x429
 1599 0366 00000000 		.4byte	.LFB23
 1600 036a 12000000 		.4byte	.LFE23-.LFB23
 1601 036e 01       		.uleb128 0x1
 1602 036f 9C       		.byte	0x9c
 1603 0370 0B       		.uleb128 0xb
 1604 0371 62020000 		.4byte	.LASF47
 1605 0375 01       		.byte	0x1
 1606 0376 4204     		.2byte	0x442
 1607 0378 00000000 		.4byte	.LFB24
 1608 037c 34000000 		.4byte	.LFE24-.LFB24
 1609 0380 01       		.uleb128 0x1
 1610 0381 9C       		.byte	0x9c
 1611 0382 96030000 		.4byte	0x396
 1612 0386 0C       		.uleb128 0xc
 1613 0387 2E020000 		.4byte	.LASF27
 1614 038b 01       		.byte	0x1
 1615 038c 4204     		.2byte	0x442
 1616 038e 6B000000 		.4byte	0x6b
 1617 0392 02       		.uleb128 0x2
 1618 0393 91       		.byte	0x91
 1619 0394 77       		.sleb128 -9
 1620 0395 00       		.byte	0
 1621 0396 0D       		.uleb128 0xd
 1622 0397 DF020000 		.4byte	.LASF48
 1623 039b 01       		.byte	0x1
 1624 039c 6504     		.2byte	0x465
 1625 039e 6B000000 		.4byte	0x6b
 1626 03a2 00000000 		.4byte	.LFB25
 1627 03a6 40000000 		.4byte	.LFE25-.LFB25
 1628 03aa 01       		.uleb128 0x1
 1629 03ab 9C       		.byte	0x9c
 1630 03ac C0030000 		.4byte	0x3c0
 1631 03b0 0E       		.uleb128 0xe
 1632 03b1 92030000 		.4byte	.LASF28
 1633 03b5 01       		.byte	0x1
 1634 03b6 6704     		.2byte	0x467
 1635 03b8 6B000000 		.4byte	0x6b
 1636 03bc 02       		.uleb128 0x2
 1637 03bd 91       		.byte	0x91
 1638 03be 77       		.sleb128 -9
 1639 03bf 00       		.byte	0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 50


 1640 03c0 13       		.uleb128 0x13
 1641 03c1 26010000 		.4byte	.LASF49
 1642 03c5 01       		.byte	0x1
 1643 03c6 22       		.byte	0x22
 1644 03c7 6B000000 		.4byte	0x6b
 1645 03cb 05       		.uleb128 0x5
 1646 03cc 03       		.byte	0x3
 1647 03cd 00000000 		.4byte	SPIM_1_initVar
 1648 03d1 13       		.uleb128 0x13
 1649 03d2 A8030000 		.4byte	.LASF50
 1650 03d6 01       		.byte	0x1
 1651 03d7 24       		.byte	0x24
 1652 03d8 98000000 		.4byte	0x98
 1653 03dc 05       		.uleb128 0x5
 1654 03dd 03       		.byte	0x3
 1655 03de 00000000 		.4byte	SPIM_1_swStatusTx
 1656 03e2 13       		.uleb128 0x13
 1657 03e3 77030000 		.4byte	.LASF51
 1658 03e7 01       		.byte	0x1
 1659 03e8 25       		.byte	0x25
 1660 03e9 98000000 		.4byte	0x98
 1661 03ed 05       		.uleb128 0x5
 1662 03ee 03       		.byte	0x3
 1663 03ef 00000000 		.4byte	SPIM_1_swStatusRx
 1664 03f3 00       		.byte	0
 1665              		.section	.debug_abbrev,"",%progbits
 1666              	.Ldebug_abbrev0:
 1667 0000 01       		.uleb128 0x1
 1668 0001 11       		.uleb128 0x11
 1669 0002 01       		.byte	0x1
 1670 0003 25       		.uleb128 0x25
 1671 0004 0E       		.uleb128 0xe
 1672 0005 13       		.uleb128 0x13
 1673 0006 0B       		.uleb128 0xb
 1674 0007 03       		.uleb128 0x3
 1675 0008 0E       		.uleb128 0xe
 1676 0009 1B       		.uleb128 0x1b
 1677 000a 0E       		.uleb128 0xe
 1678 000b 55       		.uleb128 0x55
 1679 000c 17       		.uleb128 0x17
 1680 000d 11       		.uleb128 0x11
 1681 000e 01       		.uleb128 0x1
 1682 000f 10       		.uleb128 0x10
 1683 0010 17       		.uleb128 0x17
 1684 0011 00       		.byte	0
 1685 0012 00       		.byte	0
 1686 0013 02       		.uleb128 0x2
 1687 0014 24       		.uleb128 0x24
 1688 0015 00       		.byte	0
 1689 0016 0B       		.uleb128 0xb
 1690 0017 0B       		.uleb128 0xb
 1691 0018 3E       		.uleb128 0x3e
 1692 0019 0B       		.uleb128 0xb
 1693 001a 03       		.uleb128 0x3
 1694 001b 0E       		.uleb128 0xe
 1695 001c 00       		.byte	0
 1696 001d 00       		.byte	0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 51


 1697 001e 03       		.uleb128 0x3
 1698 001f 24       		.uleb128 0x24
 1699 0020 00       		.byte	0
 1700 0021 0B       		.uleb128 0xb
 1701 0022 0B       		.uleb128 0xb
 1702 0023 3E       		.uleb128 0x3e
 1703 0024 0B       		.uleb128 0xb
 1704 0025 03       		.uleb128 0x3
 1705 0026 08       		.uleb128 0x8
 1706 0027 00       		.byte	0
 1707 0028 00       		.byte	0
 1708 0029 04       		.uleb128 0x4
 1709 002a 16       		.uleb128 0x16
 1710 002b 00       		.byte	0
 1711 002c 03       		.uleb128 0x3
 1712 002d 0E       		.uleb128 0xe
 1713 002e 3A       		.uleb128 0x3a
 1714 002f 0B       		.uleb128 0xb
 1715 0030 3B       		.uleb128 0x3b
 1716 0031 05       		.uleb128 0x5
 1717 0032 49       		.uleb128 0x49
 1718 0033 13       		.uleb128 0x13
 1719 0034 00       		.byte	0
 1720 0035 00       		.byte	0
 1721 0036 05       		.uleb128 0x5
 1722 0037 35       		.uleb128 0x35
 1723 0038 00       		.byte	0
 1724 0039 49       		.uleb128 0x49
 1725 003a 13       		.uleb128 0x13
 1726 003b 00       		.byte	0
 1727 003c 00       		.byte	0
 1728 003d 06       		.uleb128 0x6
 1729 003e 2E       		.uleb128 0x2e
 1730 003f 00       		.byte	0
 1731 0040 3F       		.uleb128 0x3f
 1732 0041 19       		.uleb128 0x19
 1733 0042 03       		.uleb128 0x3
 1734 0043 0E       		.uleb128 0xe
 1735 0044 3A       		.uleb128 0x3a
 1736 0045 0B       		.uleb128 0xb
 1737 0046 3B       		.uleb128 0x3b
 1738 0047 0B       		.uleb128 0xb
 1739 0048 27       		.uleb128 0x27
 1740 0049 19       		.uleb128 0x19
 1741 004a 11       		.uleb128 0x11
 1742 004b 01       		.uleb128 0x1
 1743 004c 12       		.uleb128 0x12
 1744 004d 06       		.uleb128 0x6
 1745 004e 40       		.uleb128 0x40
 1746 004f 18       		.uleb128 0x18
 1747 0050 9642     		.uleb128 0x2116
 1748 0052 19       		.uleb128 0x19
 1749 0053 00       		.byte	0
 1750 0054 00       		.byte	0
 1751 0055 07       		.uleb128 0x7
 1752 0056 2E       		.uleb128 0x2e
 1753 0057 01       		.byte	0x1
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 52


 1754 0058 3F       		.uleb128 0x3f
 1755 0059 19       		.uleb128 0x19
 1756 005a 03       		.uleb128 0x3
 1757 005b 0E       		.uleb128 0xe
 1758 005c 3A       		.uleb128 0x3a
 1759 005d 0B       		.uleb128 0xb
 1760 005e 3B       		.uleb128 0x3b
 1761 005f 0B       		.uleb128 0xb
 1762 0060 27       		.uleb128 0x27
 1763 0061 19       		.uleb128 0x19
 1764 0062 11       		.uleb128 0x11
 1765 0063 01       		.uleb128 0x1
 1766 0064 12       		.uleb128 0x12
 1767 0065 06       		.uleb128 0x6
 1768 0066 40       		.uleb128 0x40
 1769 0067 18       		.uleb128 0x18
 1770 0068 9642     		.uleb128 0x2116
 1771 006a 19       		.uleb128 0x19
 1772 006b 01       		.uleb128 0x1
 1773 006c 13       		.uleb128 0x13
 1774 006d 00       		.byte	0
 1775 006e 00       		.byte	0
 1776 006f 08       		.uleb128 0x8
 1777 0070 34       		.uleb128 0x34
 1778 0071 00       		.byte	0
 1779 0072 03       		.uleb128 0x3
 1780 0073 0E       		.uleb128 0xe
 1781 0074 3A       		.uleb128 0x3a
 1782 0075 0B       		.uleb128 0xb
 1783 0076 3B       		.uleb128 0x3b
 1784 0077 0B       		.uleb128 0xb
 1785 0078 49       		.uleb128 0x49
 1786 0079 13       		.uleb128 0x13
 1787 007a 02       		.uleb128 0x2
 1788 007b 18       		.uleb128 0x18
 1789 007c 00       		.byte	0
 1790 007d 00       		.byte	0
 1791 007e 09       		.uleb128 0x9
 1792 007f 2E       		.uleb128 0x2e
 1793 0080 00       		.byte	0
 1794 0081 3F       		.uleb128 0x3f
 1795 0082 19       		.uleb128 0x19
 1796 0083 03       		.uleb128 0x3
 1797 0084 0E       		.uleb128 0xe
 1798 0085 3A       		.uleb128 0x3a
 1799 0086 0B       		.uleb128 0xb
 1800 0087 3B       		.uleb128 0x3b
 1801 0088 0B       		.uleb128 0xb
 1802 0089 27       		.uleb128 0x27
 1803 008a 19       		.uleb128 0x19
 1804 008b 11       		.uleb128 0x11
 1805 008c 01       		.uleb128 0x1
 1806 008d 12       		.uleb128 0x12
 1807 008e 06       		.uleb128 0x6
 1808 008f 40       		.uleb128 0x40
 1809 0090 18       		.uleb128 0x18
 1810 0091 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 53


 1811 0093 19       		.uleb128 0x19
 1812 0094 00       		.byte	0
 1813 0095 00       		.byte	0
 1814 0096 0A       		.uleb128 0xa
 1815 0097 2E       		.uleb128 0x2e
 1816 0098 00       		.byte	0
 1817 0099 3F       		.uleb128 0x3f
 1818 009a 19       		.uleb128 0x19
 1819 009b 03       		.uleb128 0x3
 1820 009c 0E       		.uleb128 0xe
 1821 009d 3A       		.uleb128 0x3a
 1822 009e 0B       		.uleb128 0xb
 1823 009f 3B       		.uleb128 0x3b
 1824 00a0 05       		.uleb128 0x5
 1825 00a1 27       		.uleb128 0x27
 1826 00a2 19       		.uleb128 0x19
 1827 00a3 11       		.uleb128 0x11
 1828 00a4 01       		.uleb128 0x1
 1829 00a5 12       		.uleb128 0x12
 1830 00a6 06       		.uleb128 0x6
 1831 00a7 40       		.uleb128 0x40
 1832 00a8 18       		.uleb128 0x18
 1833 00a9 9742     		.uleb128 0x2117
 1834 00ab 19       		.uleb128 0x19
 1835 00ac 00       		.byte	0
 1836 00ad 00       		.byte	0
 1837 00ae 0B       		.uleb128 0xb
 1838 00af 2E       		.uleb128 0x2e
 1839 00b0 01       		.byte	0x1
 1840 00b1 3F       		.uleb128 0x3f
 1841 00b2 19       		.uleb128 0x19
 1842 00b3 03       		.uleb128 0x3
 1843 00b4 0E       		.uleb128 0xe
 1844 00b5 3A       		.uleb128 0x3a
 1845 00b6 0B       		.uleb128 0xb
 1846 00b7 3B       		.uleb128 0x3b
 1847 00b8 05       		.uleb128 0x5
 1848 00b9 27       		.uleb128 0x27
 1849 00ba 19       		.uleb128 0x19
 1850 00bb 11       		.uleb128 0x11
 1851 00bc 01       		.uleb128 0x1
 1852 00bd 12       		.uleb128 0x12
 1853 00be 06       		.uleb128 0x6
 1854 00bf 40       		.uleb128 0x40
 1855 00c0 18       		.uleb128 0x18
 1856 00c1 9742     		.uleb128 0x2117
 1857 00c3 19       		.uleb128 0x19
 1858 00c4 01       		.uleb128 0x1
 1859 00c5 13       		.uleb128 0x13
 1860 00c6 00       		.byte	0
 1861 00c7 00       		.byte	0
 1862 00c8 0C       		.uleb128 0xc
 1863 00c9 05       		.uleb128 0x5
 1864 00ca 00       		.byte	0
 1865 00cb 03       		.uleb128 0x3
 1866 00cc 0E       		.uleb128 0xe
 1867 00cd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 54


 1868 00ce 0B       		.uleb128 0xb
 1869 00cf 3B       		.uleb128 0x3b
 1870 00d0 05       		.uleb128 0x5
 1871 00d1 49       		.uleb128 0x49
 1872 00d2 13       		.uleb128 0x13
 1873 00d3 02       		.uleb128 0x2
 1874 00d4 18       		.uleb128 0x18
 1875 00d5 00       		.byte	0
 1876 00d6 00       		.byte	0
 1877 00d7 0D       		.uleb128 0xd
 1878 00d8 2E       		.uleb128 0x2e
 1879 00d9 01       		.byte	0x1
 1880 00da 3F       		.uleb128 0x3f
 1881 00db 19       		.uleb128 0x19
 1882 00dc 03       		.uleb128 0x3
 1883 00dd 0E       		.uleb128 0xe
 1884 00de 3A       		.uleb128 0x3a
 1885 00df 0B       		.uleb128 0xb
 1886 00e0 3B       		.uleb128 0x3b
 1887 00e1 05       		.uleb128 0x5
 1888 00e2 27       		.uleb128 0x27
 1889 00e3 19       		.uleb128 0x19
 1890 00e4 49       		.uleb128 0x49
 1891 00e5 13       		.uleb128 0x13
 1892 00e6 11       		.uleb128 0x11
 1893 00e7 01       		.uleb128 0x1
 1894 00e8 12       		.uleb128 0x12
 1895 00e9 06       		.uleb128 0x6
 1896 00ea 40       		.uleb128 0x40
 1897 00eb 18       		.uleb128 0x18
 1898 00ec 9742     		.uleb128 0x2117
 1899 00ee 19       		.uleb128 0x19
 1900 00ef 01       		.uleb128 0x1
 1901 00f0 13       		.uleb128 0x13
 1902 00f1 00       		.byte	0
 1903 00f2 00       		.byte	0
 1904 00f3 0E       		.uleb128 0xe
 1905 00f4 34       		.uleb128 0x34
 1906 00f5 00       		.byte	0
 1907 00f6 03       		.uleb128 0x3
 1908 00f7 0E       		.uleb128 0xe
 1909 00f8 3A       		.uleb128 0x3a
 1910 00f9 0B       		.uleb128 0xb
 1911 00fa 3B       		.uleb128 0x3b
 1912 00fb 05       		.uleb128 0x5
 1913 00fc 49       		.uleb128 0x49
 1914 00fd 13       		.uleb128 0x13
 1915 00fe 02       		.uleb128 0x2
 1916 00ff 18       		.uleb128 0x18
 1917 0100 00       		.byte	0
 1918 0101 00       		.byte	0
 1919 0102 0F       		.uleb128 0xf
 1920 0103 2E       		.uleb128 0x2e
 1921 0104 01       		.byte	0x1
 1922 0105 3F       		.uleb128 0x3f
 1923 0106 19       		.uleb128 0x19
 1924 0107 03       		.uleb128 0x3
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 55


 1925 0108 0E       		.uleb128 0xe
 1926 0109 3A       		.uleb128 0x3a
 1927 010a 0B       		.uleb128 0xb
 1928 010b 3B       		.uleb128 0x3b
 1929 010c 05       		.uleb128 0x5
 1930 010d 27       		.uleb128 0x27
 1931 010e 19       		.uleb128 0x19
 1932 010f 11       		.uleb128 0x11
 1933 0110 01       		.uleb128 0x1
 1934 0111 12       		.uleb128 0x12
 1935 0112 06       		.uleb128 0x6
 1936 0113 40       		.uleb128 0x40
 1937 0114 18       		.uleb128 0x18
 1938 0115 9642     		.uleb128 0x2116
 1939 0117 19       		.uleb128 0x19
 1940 0118 01       		.uleb128 0x1
 1941 0119 13       		.uleb128 0x13
 1942 011a 00       		.byte	0
 1943 011b 00       		.byte	0
 1944 011c 10       		.uleb128 0x10
 1945 011d 0F       		.uleb128 0xf
 1946 011e 00       		.byte	0
 1947 011f 0B       		.uleb128 0xb
 1948 0120 0B       		.uleb128 0xb
 1949 0121 49       		.uleb128 0x49
 1950 0122 13       		.uleb128 0x13
 1951 0123 00       		.byte	0
 1952 0124 00       		.byte	0
 1953 0125 11       		.uleb128 0x11
 1954 0126 26       		.uleb128 0x26
 1955 0127 00       		.byte	0
 1956 0128 49       		.uleb128 0x49
 1957 0129 13       		.uleb128 0x13
 1958 012a 00       		.byte	0
 1959 012b 00       		.byte	0
 1960 012c 12       		.uleb128 0x12
 1961 012d 2E       		.uleb128 0x2e
 1962 012e 00       		.byte	0
 1963 012f 3F       		.uleb128 0x3f
 1964 0130 19       		.uleb128 0x19
 1965 0131 03       		.uleb128 0x3
 1966 0132 0E       		.uleb128 0xe
 1967 0133 3A       		.uleb128 0x3a
 1968 0134 0B       		.uleb128 0xb
 1969 0135 3B       		.uleb128 0x3b
 1970 0136 05       		.uleb128 0x5
 1971 0137 27       		.uleb128 0x27
 1972 0138 19       		.uleb128 0x19
 1973 0139 11       		.uleb128 0x11
 1974 013a 01       		.uleb128 0x1
 1975 013b 12       		.uleb128 0x12
 1976 013c 06       		.uleb128 0x6
 1977 013d 40       		.uleb128 0x40
 1978 013e 18       		.uleb128 0x18
 1979 013f 9642     		.uleb128 0x2116
 1980 0141 19       		.uleb128 0x19
 1981 0142 00       		.byte	0
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 56


 1982 0143 00       		.byte	0
 1983 0144 13       		.uleb128 0x13
 1984 0145 34       		.uleb128 0x34
 1985 0146 00       		.byte	0
 1986 0147 03       		.uleb128 0x3
 1987 0148 0E       		.uleb128 0xe
 1988 0149 3A       		.uleb128 0x3a
 1989 014a 0B       		.uleb128 0xb
 1990 014b 3B       		.uleb128 0x3b
 1991 014c 0B       		.uleb128 0xb
 1992 014d 49       		.uleb128 0x49
 1993 014e 13       		.uleb128 0x13
 1994 014f 3F       		.uleb128 0x3f
 1995 0150 19       		.uleb128 0x19
 1996 0151 02       		.uleb128 0x2
 1997 0152 18       		.uleb128 0x18
 1998 0153 00       		.byte	0
 1999 0154 00       		.byte	0
 2000 0155 00       		.byte	0
 2001              		.section	.debug_aranges,"",%progbits
 2002 0000 D4000000 		.4byte	0xd4
 2003 0004 0200     		.2byte	0x2
 2004 0006 00000000 		.4byte	.Ldebug_info0
 2005 000a 04       		.byte	0x4
 2006 000b 00       		.byte	0
 2007 000c 0000     		.2byte	0
 2008 000e 0000     		.2byte	0
 2009 0010 00000000 		.4byte	.LFB2
 2010 0014 34000000 		.4byte	.LFE2-.LFB2
 2011 0018 00000000 		.4byte	.LFB3
 2012 001c 6C000000 		.4byte	.LFE3-.LFB3
 2013 0020 00000000 		.4byte	.LFB4
 2014 0024 24000000 		.4byte	.LFE4-.LFB4
 2015 0028 00000000 		.4byte	.LFB5
 2016 002c 58000000 		.4byte	.LFE5-.LFB5
 2017 0030 00000000 		.4byte	.LFB6
 2018 0034 0A000000 		.4byte	.LFE6-.LFB6
 2019 0038 00000000 		.4byte	.LFB7
 2020 003c 0A000000 		.4byte	.LFE7-.LFB7
 2021 0040 00000000 		.4byte	.LFB8
 2022 0044 0A000000 		.4byte	.LFE8-.LFB8
 2023 0048 00000000 		.4byte	.LFB9
 2024 004c 0A000000 		.4byte	.LFE9-.LFB9
 2025 0050 00000000 		.4byte	.LFB10
 2026 0054 20000000 		.4byte	.LFE10-.LFB10
 2027 0058 00000000 		.4byte	.LFB11
 2028 005c 20000000 		.4byte	.LFE11-.LFB11
 2029 0060 00000000 		.4byte	.LFB12
 2030 0064 20000000 		.4byte	.LFE12-.LFB12
 2031 0068 00000000 		.4byte	.LFB13
 2032 006c 20000000 		.4byte	.LFE13-.LFB13
 2033 0070 00000000 		.4byte	.LFB14
 2034 0074 34000000 		.4byte	.LFE14-.LFB14
 2035 0078 00000000 		.4byte	.LFB15
 2036 007c 20000000 		.4byte	.LFE15-.LFB15
 2037 0080 00000000 		.4byte	.LFB16
 2038 0084 30000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 57


 2039 0088 00000000 		.4byte	.LFB17
 2040 008c 48000000 		.4byte	.LFE17-.LFB17
 2041 0090 00000000 		.4byte	.LFB18
 2042 0094 28000000 		.4byte	.LFE18-.LFB18
 2043 0098 00000000 		.4byte	.LFB19
 2044 009c 48000000 		.4byte	.LFE19-.LFB19
 2045 00a0 00000000 		.4byte	.LFB20
 2046 00a4 52000000 		.4byte	.LFE20-.LFB20
 2047 00a8 00000000 		.4byte	.LFB21
 2048 00ac 64000000 		.4byte	.LFE21-.LFB21
 2049 00b0 00000000 		.4byte	.LFB22
 2050 00b4 12000000 		.4byte	.LFE22-.LFB22
 2051 00b8 00000000 		.4byte	.LFB23
 2052 00bc 12000000 		.4byte	.LFE23-.LFB23
 2053 00c0 00000000 		.4byte	.LFB24
 2054 00c4 34000000 		.4byte	.LFE24-.LFB24
 2055 00c8 00000000 		.4byte	.LFB25
 2056 00cc 40000000 		.4byte	.LFE25-.LFB25
 2057 00d0 00000000 		.4byte	0
 2058 00d4 00000000 		.4byte	0
 2059              		.section	.debug_ranges,"",%progbits
 2060              	.Ldebug_ranges0:
 2061 0000 00000000 		.4byte	.LFB2
 2062 0004 34000000 		.4byte	.LFE2
 2063 0008 00000000 		.4byte	.LFB3
 2064 000c 6C000000 		.4byte	.LFE3
 2065 0010 00000000 		.4byte	.LFB4
 2066 0014 24000000 		.4byte	.LFE4
 2067 0018 00000000 		.4byte	.LFB5
 2068 001c 58000000 		.4byte	.LFE5
 2069 0020 00000000 		.4byte	.LFB6
 2070 0024 0A000000 		.4byte	.LFE6
 2071 0028 00000000 		.4byte	.LFB7
 2072 002c 0A000000 		.4byte	.LFE7
 2073 0030 00000000 		.4byte	.LFB8
 2074 0034 0A000000 		.4byte	.LFE8
 2075 0038 00000000 		.4byte	.LFB9
 2076 003c 0A000000 		.4byte	.LFE9
 2077 0040 00000000 		.4byte	.LFB10
 2078 0044 20000000 		.4byte	.LFE10
 2079 0048 00000000 		.4byte	.LFB11
 2080 004c 20000000 		.4byte	.LFE11
 2081 0050 00000000 		.4byte	.LFB12
 2082 0054 20000000 		.4byte	.LFE12
 2083 0058 00000000 		.4byte	.LFB13
 2084 005c 20000000 		.4byte	.LFE13
 2085 0060 00000000 		.4byte	.LFB14
 2086 0064 34000000 		.4byte	.LFE14
 2087 0068 00000000 		.4byte	.LFB15
 2088 006c 20000000 		.4byte	.LFE15
 2089 0070 00000000 		.4byte	.LFB16
 2090 0074 30000000 		.4byte	.LFE16
 2091 0078 00000000 		.4byte	.LFB17
 2092 007c 48000000 		.4byte	.LFE17
 2093 0080 00000000 		.4byte	.LFB18
 2094 0084 28000000 		.4byte	.LFE18
 2095 0088 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 58


 2096 008c 48000000 		.4byte	.LFE19
 2097 0090 00000000 		.4byte	.LFB20
 2098 0094 52000000 		.4byte	.LFE20
 2099 0098 00000000 		.4byte	.LFB21
 2100 009c 64000000 		.4byte	.LFE21
 2101 00a0 00000000 		.4byte	.LFB22
 2102 00a4 12000000 		.4byte	.LFE22
 2103 00a8 00000000 		.4byte	.LFB23
 2104 00ac 12000000 		.4byte	.LFE23
 2105 00b0 00000000 		.4byte	.LFB24
 2106 00b4 34000000 		.4byte	.LFE24
 2107 00b8 00000000 		.4byte	.LFB25
 2108 00bc 40000000 		.4byte	.LFE25
 2109 00c0 00000000 		.4byte	0
 2110 00c4 00000000 		.4byte	0
 2111              		.section	.debug_line,"",%progbits
 2112              	.Ldebug_line0:
 2113 0000 60020000 		.section	.debug_str,"MS",%progbits,1
 2113      02004300 
 2113      00000201 
 2113      FB0E0D00 
 2113      01010101 
 2114              	.LASF37:
 2115 0000 5350494D 		.ascii	"SPIM_1_GetTxBufferSize\000"
 2115      5F315F47 
 2115      65745478 
 2115      42756666 
 2115      65725369 
 2116              	.LASF17:
 2117 0017 5350494D 		.ascii	"SPIM_1_Start\000"
 2117      5F315F53 
 2117      74617274 
 2117      00
 2118              	.LASF34:
 2119 0024 72784461 		.ascii	"rxData\000"
 2119      746100
 2120              	.LASF54:
 2121 002b 443A5C44 		.ascii	"D:\\Documents\\GitHub\\XID_483\\Workspace\\BLE_HID_"
 2121      6F63756D 
 2121      656E7473 
 2121      5C476974 
 2121      4875625C 
 2122 0059 4B657962 		.ascii	"Keyboard01.cydsn\000"
 2122      6F617264 
 2122      30312E63 
 2122      7964736E 
 2122      00
 2123              	.LASF21:
 2124 006a 5350494D 		.ascii	"SPIM_1_EnableTxInt\000"
 2124      5F315F45 
 2124      6E61626C 
 2124      65547849 
 2124      6E7400
 2125              	.LASF39:
 2126 007d 5350494D 		.ascii	"SPIM_1_ClearTxBuffer\000"
 2126      5F315F43 
 2126      6C656172 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 59


 2126      54784275 
 2126      66666572 
 2127              	.LASF3:
 2128 0092 73686F72 		.ascii	"short unsigned int\000"
 2128      7420756E 
 2128      7369676E 
 2128      65642069 
 2128      6E7400
 2129              	.LASF8:
 2130 00a5 756E7369 		.ascii	"unsigned int\000"
 2130      676E6564 
 2130      20696E74 
 2130      00
 2131              	.LASF32:
 2132 00b2 74784461 		.ascii	"txData\000"
 2132      746100
 2133              	.LASF35:
 2134 00b9 5350494D 		.ascii	"SPIM_1_GetRxBufferSize\000"
 2134      5F315F47 
 2134      65745278 
 2134      42756666 
 2134      65725369 
 2135              	.LASF25:
 2136 00d0 5350494D 		.ascii	"SPIM_1_SetTxInterruptMode\000"
 2136      5F315F53 
 2136      65745478 
 2136      496E7465 
 2136      72727570 
 2137              	.LASF29:
 2138 00ea 5350494D 		.ascii	"SPIM_1_ReadTxStatus\000"
 2138      5F315F52 
 2138      65616454 
 2138      78537461 
 2138      74757300 
 2139              	.LASF26:
 2140 00fe 5350494D 		.ascii	"SPIM_1_SetRxInterruptMode\000"
 2140      5F315F53 
 2140      65745278 
 2140      496E7465 
 2140      72727570 
 2141              	.LASF18:
 2142 0118 5350494D 		.ascii	"SPIM_1_Enable\000"
 2142      5F315F45 
 2142      6E61626C 
 2142      6500
 2143              	.LASF49:
 2144 0126 5350494D 		.ascii	"SPIM_1_initVar\000"
 2144      5F315F69 
 2144      6E697456 
 2144      617200
 2145              	.LASF36:
 2146 0135 73697A65 		.ascii	"size\000"
 2146      00
 2147              	.LASF13:
 2148 013a 72656738 		.ascii	"reg8\000"
 2148      00
 2149              	.LASF5:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 60


 2150 013f 6C6F6E67 		.ascii	"long unsigned int\000"
 2150      20756E73 
 2150      69676E65 
 2150      6420696E 
 2150      7400
 2151              	.LASF12:
 2152 0151 75696E74 		.ascii	"uint8\000"
 2152      3800
 2153              	.LASF52:
 2154 0157 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2154      43313120 
 2154      352E342E 
 2154      31203230 
 2154      31363036 
 2155 018a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2155      20726576 
 2155      6973696F 
 2155      6E203233 
 2155      37373135 
 2156 01bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2156      66756E63 
 2156      74696F6E 
 2156      2D736563 
 2156      74696F6E 
 2157              	.LASF45:
 2158 01e5 5350494D 		.ascii	"SPIM_1_EnableInt\000"
 2158      5F315F45 
 2158      6E61626C 
 2158      65496E74 
 2158      00
 2159              	.LASF20:
 2160 01f6 656E6162 		.ascii	"enableInterrupts\000"
 2160      6C65496E 
 2160      74657272 
 2160      75707473 
 2160      00
 2161              	.LASF1:
 2162 0207 756E7369 		.ascii	"unsigned char\000"
 2162      676E6564 
 2162      20636861 
 2162      7200
 2163              	.LASF46:
 2164 0215 5350494D 		.ascii	"SPIM_1_DisableInt\000"
 2164      5F315F44 
 2164      69736162 
 2164      6C65496E 
 2164      7400
 2165              	.LASF10:
 2166 0227 646F7562 		.ascii	"double\000"
 2166      6C6500
 2167              	.LASF27:
 2168 022e 696E7453 		.ascii	"intSrc\000"
 2168      726300
 2169              	.LASF44:
 2170 0235 5350494D 		.ascii	"SPIM_1_ClearFIFO\000"
 2170      5F315F43 
 2170      6C656172 
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 61


 2170      4649464F 
 2170      00
 2171              	.LASF16:
 2172 0246 5350494D 		.ascii	"SPIM_1_Init\000"
 2172      5F315F49 
 2172      6E697400 
 2173              	.LASF40:
 2174 0252 5350494D 		.ascii	"SPIM_1_PutArray\000"
 2174      5F315F50 
 2174      75744172 
 2174      72617900 
 2175              	.LASF47:
 2176 0262 5350494D 		.ascii	"SPIM_1_SetInterruptMode\000"
 2176      5F315F53 
 2176      6574496E 
 2176      74657272 
 2176      7570744D 
 2177              	.LASF30:
 2178 027a 5350494D 		.ascii	"SPIM_1_ReadRxStatus\000"
 2178      5F315F52 
 2178      65616452 
 2178      78537461 
 2178      74757300 
 2179              	.LASF7:
 2180 028e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2180      206C6F6E 
 2180      6720756E 
 2180      7369676E 
 2180      65642069 
 2181              	.LASF42:
 2182 02a5 62797465 		.ascii	"byteCount\000"
 2182      436F756E 
 2182      7400
 2183              	.LASF22:
 2184 02af 5350494D 		.ascii	"SPIM_1_EnableRxInt\000"
 2184      5F315F45 
 2184      6E61626C 
 2184      65527849 
 2184      6E7400
 2185              	.LASF43:
 2186 02c2 62756649 		.ascii	"bufIndex\000"
 2186      6E646578 
 2186      00
 2187              	.LASF23:
 2188 02cb 5350494D 		.ascii	"SPIM_1_DisableTxInt\000"
 2188      5F315F44 
 2188      69736162 
 2188      6C655478 
 2188      496E7400 
 2189              	.LASF48:
 2190 02df 5350494D 		.ascii	"SPIM_1_ReadStatus\000"
 2190      5F315F52 
 2190      65616453 
 2190      74617475 
 2190      7300
 2191              	.LASF15:
 2192 02f1 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 62


 2192      74797065 
 2192      00
 2193              	.LASF6:
 2194 02fa 6C6F6E67 		.ascii	"long long int\000"
 2194      206C6F6E 
 2194      6720696E 
 2194      7400
 2195              	.LASF9:
 2196 0308 666C6F61 		.ascii	"float\000"
 2196      7400
 2197              	.LASF11:
 2198 030e 63686172 		.ascii	"char\000"
 2198      00
 2199              	.LASF19:
 2200 0313 5350494D 		.ascii	"SPIM_1_Stop\000"
 2200      5F315F53 
 2200      746F7000 
 2201              	.LASF33:
 2202 031f 5350494D 		.ascii	"SPIM_1_ReadRxData\000"
 2202      5F315F52 
 2202      65616452 
 2202      78446174 
 2202      6100
 2203              	.LASF2:
 2204 0331 73686F72 		.ascii	"short int\000"
 2204      7420696E 
 2204      7400
 2205              	.LASF38:
 2206 033b 5350494D 		.ascii	"SPIM_1_ClearRxBuffer\000"
 2206      5F315F43 
 2206      6C656172 
 2206      52784275 
 2206      66666572 
 2207              	.LASF41:
 2208 0350 62756666 		.ascii	"buffer\000"
 2208      657200
 2209              	.LASF53:
 2210 0357 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM_1.c\000"
 2210      72617465 
 2210      645F536F 
 2210      75726365 
 2210      5C50536F 
 2211              	.LASF51:
 2212 0377 5350494D 		.ascii	"SPIM_1_swStatusRx\000"
 2212      5F315F73 
 2212      77537461 
 2212      74757352 
 2212      7800
 2213              	.LASF4:
 2214 0389 6C6F6E67 		.ascii	"long int\000"
 2214      20696E74 
 2214      00
 2215              	.LASF28:
 2216 0392 746D7053 		.ascii	"tmpStatus\000"
 2216      74617475 
 2216      7300
 2217              	.LASF14:
ARM GAS  C:\Users\Xavier\AppData\Local\Temp\ccNrpasF.s 			page 63


 2218 039c 6C6F6E67 		.ascii	"long double\000"
 2218      20646F75 
 2218      626C6500 
 2219              	.LASF50:
 2220 03a8 5350494D 		.ascii	"SPIM_1_swStatusTx\000"
 2220      5F315F73 
 2220      77537461 
 2220      74757354 
 2220      7800
 2221              	.LASF0:
 2222 03ba 7369676E 		.ascii	"signed char\000"
 2222      65642063 
 2222      68617200 
 2223              	.LASF31:
 2224 03c6 5350494D 		.ascii	"SPIM_1_WriteTxData\000"
 2224      5F315F57 
 2224      72697465 
 2224      54784461 
 2224      746100
 2225              	.LASF24:
 2226 03d9 5350494D 		.ascii	"SPIM_1_DisableRxInt\000"
 2226      5F315F44 
 2226      69736162 
 2226      6C655278 
 2226      496E7400 
 2227              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
